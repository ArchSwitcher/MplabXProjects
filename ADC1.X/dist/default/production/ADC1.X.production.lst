

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jul 31 02:17:41 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53  0000                     
    54                           ; Version 2.05
    55                           ; Generated 20/12/2018 GMT
    56                           ; 
    57                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F4550 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     _ADRES	set	4035
    89  0000                     _ADCON0bits	set	4034
    90  0000                     _ADCON2bits	set	4032
    91  0000                     _ADCON0	set	4034
    92  0000                     _ADCON1bits	set	4033
    93  0000                     _TRISA	set	3986
    94  0000                     _TRISD	set	3989
    95  0000                     _PORTDbits	set	3971
    96                           
    97                           	psect	smallconst
    98  000800                     __psmallconst:
    99                           	opt callstack 0
   100  000800  00                 	db	0
   101  000801                     STR_1:
   102  000801  2A                 	db	42
   103  000802  2A                 	db	42
   104  000803  2A                 	db	42
   105  000804  2A                 	db	42
   106  000805  2A                 	db	42
   107  000806  2A                 	db	42
   108  000807  2A                 	db	42
   109  000808  2A                 	db	42
   110  000809  41                 	db	65	;'A'
   111  00080A  44                 	db	68	;'D'
   112  00080B  43                 	db	67	;'C'
   113  00080C  2A                 	db	42
   114  00080D  2A                 	db	42
   115  00080E  2A                 	db	42
   116  00080F  2A                 	db	42
   117  000810  2A                 	db	42
   118  000811  2A                 	db	42
   119  000812  2A                 	db	42
   120  000813  2A                 	db	42
   121  000814  00                 	db	0
   122  000815                     STR_2:
   123  000815  42                 	db	66	;'B'
   124  000816  79                 	db	121	;'y'
   125  000817  3A                 	db	58	;':'
   126  000818  20                 	db	32
   127  000819  53                 	db	83	;'S'
   128  00081A  77                 	db	119	;'w'
   129  00081B  69                 	db	105	;'i'
   130  00081C  74                 	db	116	;'t'
   131  00081D  63                 	db	99	;'c'
   132  00081E  68                 	db	104	;'h'
   133  00081F  65                 	db	101	;'e'
   134  000820  72                 	db	114	;'r'
   135  000821  00                 	db	0
   136  000822                     STR_3:
   137  000822  45                 	db	69	;'E'
   138  000823  4C                 	db	76	;'L'
   139  000824  20                 	db	32
   140  000825  56                 	db	86	;'V'
   141  000826  61                 	db	97	;'a'
   142  000827  6C                 	db	108	;'l'
   143  000828  6F                 	db	111	;'o'
   144  000829  72                 	db	114	;'r'
   145  00082A  20                 	db	32
   146  00082B  45                 	db	69	;'E'
   147  00082C  53                 	db	83	;'S'
   148  00082D  00                 	db	0
   149  00082E                     STR_4:
   150  00082E  25                 	db	37
   151  00082F  2E                 	db	46
   152  000830  33                 	db	51	;'3'
   153  000831  66                 	db	102	;'f'
   154  000832  00                 	db	0
   155  000833                     STR_5:
   156  000833  49                 	db	73	;'I'
   157  000834  4E                 	db	78	;'N'
   158  000835  46                 	db	70	;'F'
   159  000836  00                 	db	0
   160  000837                     STR_9:
   161  000837  4E                 	db	78	;'N'
   162  000838  41                 	db	65	;'A'
   163  000839  4E                 	db	78	;'N'
   164  00083A  00                 	db	0
   165  00083B                     STR_6:
   166  00083B  69                 	db	105	;'i'
   167  00083C  6E                 	db	110	;'n'
   168  00083D  66                 	db	102	;'f'
   169  00083E  00                 	db	0
   170  00083F                     STR_10:
   171  00083F  6E                 	db	110	;'n'
   172  000840  61                 	db	97	;'a'
   173  000841  6E                 	db	110	;'n'
   174  000842  00                 	db	0
   175  000843                     STR_13:
   176  000843  6C                 	db	108	;'l'
   177  000844  66                 	db	102	;'f'
   178  000845  00                 	db	0
   179  0000                     
   180                           ; #config settings
   181  000846  00                 	db	0	; dummy byte at the end
   182  0000                     
   183                           	psect	cinit
   184  002E76                     __pcinit:
   185                           	opt callstack 0
   186  002E76                     start_initialization:
   187                           	opt callstack 0
   188  002E76                     __initialization:
   189                           	opt callstack 0
   190                           
   191                           ; Clear objects allocated to BANK1 (80 bytes)
   192  002E76  EE01  F000         	lfsr	0,__pbssBANK1
   193  002E7A  0E50               	movlw	80
   194  002E7C                     clear_0:
   195  002E7C  6AEE               	clrf	postinc0,c
   196  002E7E  06E8               	decf	wreg,f,c
   197  002E80  E1FD               	bnz	clear_0
   198                           
   199                           ; Clear objects allocated to BANK0 (42 bytes)
   200  002E82  EE00  F0CB         	lfsr	0,__pbssBANK0
   201  002E86  0E2A               	movlw	42
   202  002E88                     clear_1:
   203  002E88  6AEE               	clrf	postinc0,c
   204  002E8A  06E8               	decf	wreg,f,c
   205  002E8C  E1FD               	bnz	clear_1
   206  002E8E                     end_of_initialization:
   207                           	opt callstack 0
   208  002E8E                     __end_of__initialization:
   209                           	opt callstack 0
   210  002E8E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   211  002E90  6EF8               	movwf	tblptru,c
   212  002E92  0100               	movlb	0
   213  002E94  EF09  F010         	goto	_main	;jump to C main() function
   214                           
   215                           	psect	bssBANK0
   216  0000CB                     __pbssBANK0:
   217                           	opt callstack 0
   218  0000CB                     floorf@F524:
   219                           	opt callstack 0
   220  0000CB                     	ds	4
   221  0000CF                     ___fpclassifyf@F463:
   222                           	opt callstack 0
   223  0000CF                     	ds	4
   224  0000D3                     _voltage:
   225                           	opt callstack 0
   226  0000D3                     	ds	4
   227  0000D7                     _nout:
   228                           	opt callstack 0
   229  0000D7                     	ds	2
   230  0000D9                     _width:
   231                           	opt callstack 0
   232  0000D9                     	ds	2
   233  0000DB                     _prec:
   234                           	opt callstack 0
   235  0000DB                     	ds	2
   236  0000DD                     _flags:
   237                           	opt callstack 0
   238  0000DD                     	ds	2
   239  0000DF                     _Value:
   240                           	opt callstack 0
   241  0000DF                     	ds	2
   242  0000E1                     _datos:
   243                           	opt callstack 0
   244  0000E1                     	ds	20
   245                           
   246                           	psect	bssBANK1
   247  000100                     __pbssBANK1:
   248                           	opt callstack 0
   249  000100                     _dbuf:
   250                           	opt callstack 0
   251  000100                     	ds	80
   252                           
   253                           	psect	cstackBANK0
   254  000060                     __pcstackBANK0:
   255                           	opt callstack 0
   256  000060                     ??_efgtoa:
   257                           
   258                           ; 1 bytes @ 0x0
   259  000060                     	ds	5
   260  000065                     efgtoa@ou:
   261                           	opt callstack 0
   262                           
   263                           ; 4 bytes @ 0x5
   264  000065                     	ds	4
   265  000069                     _efgtoa$392:
   266                           	opt callstack 0
   267                           
   268                           ; 2 bytes @ 0x9
   269  000069                     	ds	2
   270  00006B                     _efgtoa$393:
   271                           	opt callstack 0
   272                           
   273                           ; 2 bytes @ 0xB
   274  00006B                     	ds	2
   275  00006D                     _efgtoa$398:
   276                           	opt callstack 0
   277                           
   278                           ; 2 bytes @ 0xD
   279  00006D                     	ds	2
   280  00006F                     _efgtoa$402:
   281                           	opt callstack 0
   282                           
   283                           ; 2 bytes @ 0xF
   284  00006F                     	ds	2
   285  000071                     _efgtoa$403:
   286                           	opt callstack 0
   287                           
   288                           ; 2 bytes @ 0x11
   289  000071                     	ds	2
   290  000073                     _efgtoa$404:
   291                           	opt callstack 0
   292                           
   293                           ; 2 bytes @ 0x13
   294  000073                     	ds	2
   295  000075                     efgtoa@t:
   296                           	opt callstack 0
   297                           
   298                           ; 2 bytes @ 0x15
   299  000075                     	ds	2
   300  000077                     efgtoa@pp:
   301                           	opt callstack 0
   302                           
   303                           ; 2 bytes @ 0x17
   304  000077                     	ds	2
   305  000079                     efgtoa@m:
   306                           	opt callstack 0
   307                           
   308                           ; 2 bytes @ 0x19
   309  000079                     	ds	2
   310  00007B                     efgtoa@ne:
   311                           	opt callstack 0
   312                           
   313                           ; 2 bytes @ 0x1B
   314  00007B                     	ds	2
   315  00007D                     efgtoa@d:
   316                           	opt callstack 0
   317                           
   318                           ; 2 bytes @ 0x1D
   319  00007D                     	ds	2
   320  00007F                     efgtoa@sign:
   321                           	opt callstack 0
   322                           
   323                           ; 2 bytes @ 0x1F
   324  00007F                     	ds	2
   325  000081                     efgtoa@p:
   326                           	opt callstack 0
   327                           
   328                           ; 2 bytes @ 0x21
   329  000081                     	ds	2
   330  000083                     efgtoa@nmode:
   331                           	opt callstack 0
   332                           
   333                           ; 1 bytes @ 0x23
   334  000083                     	ds	1
   335  000084                     efgtoa@w:
   336                           	opt callstack 0
   337                           
   338                           ; 2 bytes @ 0x24
   339  000084                     	ds	2
   340  000086                     efgtoa@mode:
   341                           	opt callstack 0
   342                           
   343                           ; 1 bytes @ 0x26
   344  000086                     	ds	1
   345  000087                     efgtoa@h:
   346                           	opt callstack 0
   347                           
   348                           ; 4 bytes @ 0x27
   349  000087                     	ds	4
   350  00008B                     efgtoa@l:
   351                           	opt callstack 0
   352                           
   353                           ; 4 bytes @ 0x2B
   354  00008B                     	ds	4
   355  00008F                     efgtoa@i:
   356                           	opt callstack 0
   357                           
   358                           ; 2 bytes @ 0x2F
   359  00008F                     	ds	2
   360  000091                     efgtoa@g:
   361                           	opt callstack 0
   362                           
   363                           ; 4 bytes @ 0x31
   364  000091                     	ds	4
   365  000095                     efgtoa@e:
   366                           	opt callstack 0
   367                           
   368                           ; 2 bytes @ 0x35
   369  000095                     	ds	2
   370  000097                     efgtoa@n:
   371                           	opt callstack 0
   372                           
   373                           ; 2 bytes @ 0x37
   374  000097                     	ds	2
   375  000099                     efgtoa@u:
   376                           	opt callstack 0
   377                           
   378                           ; 4 bytes @ 0x39
   379  000099                     	ds	4
   380  00009D                     ?_vfpfcnvrt:
   381                           	opt callstack 0
   382  00009D                     vfpfcnvrt@fp:
   383                           	opt callstack 0
   384                           
   385                           ; 2 bytes @ 0x3D
   386  00009D                     	ds	2
   387  00009F                     vfpfcnvrt@fmt:
   388                           	opt callstack 0
   389                           
   390                           ; 2 bytes @ 0x3F
   391  00009F                     	ds	2
   392  0000A1                     vfpfcnvrt@ap:
   393                           	opt callstack 0
   394                           
   395                           ; 2 bytes @ 0x41
   396  0000A1                     	ds	2
   397  0000A3                     _vfpfcnvrt$418:
   398                           	opt callstack 0
   399                           
   400                           ; 2 bytes @ 0x43
   401  0000A3                     	ds	2
   402  0000A5                     _vfpfcnvrt$422:
   403                           	opt callstack 0
   404                           
   405                           ; 2 bytes @ 0x45
   406  0000A5                     	ds	2
   407  0000A7                     vfpfcnvrt@f:
   408                           	opt callstack 0
   409                           
   410                           ; 4 bytes @ 0x47
   411  0000A7                     	ds	4
   412  0000AB                     vfpfcnvrt@ct:
   413                           	opt callstack 0
   414                           
   415                           ; 3 bytes @ 0x4B
   416  0000AB                     	ds	3
   417  0000AE                     vfpfcnvrt@c:
   418                           	opt callstack 0
   419                           
   420                           ; 1 bytes @ 0x4E
   421  0000AE                     	ds	1
   422  0000AF                     ?_vfprintf:
   423                           	opt callstack 0
   424  0000AF                     vfprintf@fp:
   425                           	opt callstack 0
   426                           
   427                           ; 2 bytes @ 0x4F
   428  0000AF                     	ds	2
   429  0000B1                     vfprintf@fmt:
   430                           	opt callstack 0
   431                           
   432                           ; 2 bytes @ 0x51
   433  0000B1                     	ds	2
   434  0000B3                     vfprintf@ap:
   435                           	opt callstack 0
   436                           
   437                           ; 2 bytes @ 0x53
   438  0000B3                     	ds	2
   439  0000B5                     vfprintf@cfmt:
   440                           	opt callstack 0
   441                           
   442                           ; 2 bytes @ 0x55
   443  0000B5                     	ds	2
   444  0000B7                     ?_sprintf:
   445                           	opt callstack 0
   446  0000B7                     sprintf@s:
   447                           	opt callstack 0
   448                           
   449                           ; 2 bytes @ 0x57
   450  0000B7                     	ds	2
   451  0000B9                     sprintf@fmt:
   452                           	opt callstack 0
   453                           
   454                           ; 2 bytes @ 0x59
   455  0000B9                     	ds	8
   456  0000C1                     sprintf@ap:
   457                           	opt callstack 0
   458                           
   459                           ; 2 bytes @ 0x61
   460  0000C1                     	ds	2
   461  0000C3                     sprintf@f:
   462                           	opt callstack 0
   463                           
   464                           ; 6 bytes @ 0x63
   465  0000C3                     	ds	6
   466  0000C9                     ??_main:
   467                           
   468                           ; 1 bytes @ 0x69
   469  0000C9                     	ds	2
   470                           
   471                           	psect	cstackCOMRAM
   472  000001                     __pcstackCOMRAM:
   473                           	opt callstack 0
   474  000001                     ?_ADC_Read:
   475                           	opt callstack 0
   476  000001                     ?_strlen:
   477                           	opt callstack 0
   478  000001                     ?___fpclassifyf:
   479                           	opt callstack 0
   480  000001                     ?_isupper:
   481                           	opt callstack 0
   482  000001                     ?_isdigit:
   483                           	opt callstack 0
   484  000001                     ?_strncmp:
   485                           	opt callstack 0
   486  000001                     ?_isspace:
   487                           	opt callstack 0
   488  000001                     ?___wmul:
   489                           	opt callstack 0
   490  000001                     ?___awdiv:
   491                           	opt callstack 0
   492  000001                     ?___awmod:
   493                           	opt callstack 0
   494  000001                     ?___fladd:
   495                           	opt callstack 0
   496  000001                     ?___flneg:
   497                           	opt callstack 0
   498  000001                     ?___fltol:
   499                           	opt callstack 0
   500  000001                     ?___xxtofl:
   501                           	opt callstack 0
   502  000001                     Lcd_Port@a:
   503                           	opt callstack 0
   504  000001                     ___wmul@multiplier:
   505                           	opt callstack 0
   506  000001                     ___awdiv@dividend:
   507                           	opt callstack 0
   508  000001                     ___awmod@dividend:
   509                           	opt callstack 0
   510  000001                     isdigit@c:
   511                           	opt callstack 0
   512  000001                     isspace@c:
   513                           	opt callstack 0
   514  000001                     isupper@c:
   515                           	opt callstack 0
   516  000001                     fputc@c:
   517                           	opt callstack 0
   518  000001                     strcpy@dest:
   519                           	opt callstack 0
   520  000001                     strlen@s:
   521                           	opt callstack 0
   522  000001                     strncmp@_l:
   523                           	opt callstack 0
   524  000001                     ___fleq@ff1:
   525                           	opt callstack 0
   526  000001                     ___flneg@f1:
   527                           	opt callstack 0
   528  000001                     ___fltol@f1:
   529                           	opt callstack 0
   530  000001                     ___fladd@b:
   531                           	opt callstack 0
   532  000001                     ___xxtofl@val:
   533                           	opt callstack 0
   534  000001                     ___fpclassifyf@x:
   535                           	opt callstack 0
   536                           
   537                           ; 4 bytes @ 0x0
   538  000001                     	ds	1
   539  000002                     ??_Lcd_Cmd:
   540  000002                     Lcd_Write_Char@temp:
   541                           	opt callstack 0
   542                           
   543                           ; 1 bytes @ 0x1
   544  000002                     	ds	1
   545  000003                     ??_isupper:
   546  000003                     ??_isdigit:
   547  000003                     ??_isspace:
   548  000003                     Lcd_Cmd@a:
   549                           	opt callstack 0
   550  000003                     Lcd_Write_Char@y:
   551                           	opt callstack 0
   552  000003                     ADC_Read@ch:
   553                           	opt callstack 0
   554  000003                     ___wmul@multiplicand:
   555                           	opt callstack 0
   556  000003                     ___awdiv@divisor:
   557                           	opt callstack 0
   558  000003                     ___awmod@divisor:
   559                           	opt callstack 0
   560  000003                     fputc@fp:
   561                           	opt callstack 0
   562  000003                     strcpy@src:
   563                           	opt callstack 0
   564  000003                     strlen@a:
   565                           	opt callstack 0
   566  000003                     strncmp@_r:
   567                           	opt callstack 0
   568                           
   569                           ; 2 bytes @ 0x2
   570  000003                     	ds	1
   571  000004                     ??_Lcd_Init:
   572  000004                     Lcd_Set_Cursor@b:
   573                           	opt callstack 0
   574  000004                     Lcd_Write_Char@a:
   575                           	opt callstack 0
   576                           
   577                           ; 1 bytes @ 0x3
   578  000004                     	ds	1
   579  000005                     ??_fputc:
   580  000005                     ??___fpclassifyf:
   581  000005                     ??_strcpy:
   582  000005                     ??___fltol:
   583  000005                     ??___xxtofl:
   584  000005                     Lcd_Set_Cursor@a:
   585                           	opt callstack 0
   586  000005                     ___awdiv@counter:
   587                           	opt callstack 0
   588  000005                     ___awmod@counter:
   589                           	opt callstack 0
   590  000005                     Lcd_Write_String@a:
   591                           	opt callstack 0
   592  000005                     ___wmul@product:
   593                           	opt callstack 0
   594  000005                     strncmp@n:
   595                           	opt callstack 0
   596  000005                     ___fleq@ff2:
   597                           	opt callstack 0
   598  000005                     ___fladd@a:
   599                           	opt callstack 0
   600                           
   601                           ; 4 bytes @ 0x4
   602  000005                     	ds	1
   603  000006                     Lcd_Set_Cursor@z:
   604                           	opt callstack 0
   605  000006                     ___awdiv@sign:
   606                           	opt callstack 0
   607  000006                     ___awmod@sign:
   608                           	opt callstack 0
   609                           
   610                           ; 1 bytes @ 0x5
   611  000006                     	ds	1
   612  000007                     ??_strncmp:
   613  000007                     ??_Lcd_Write_String:
   614  000007                     ?_tolower:
   615                           	opt callstack 0
   616  000007                     Lcd_Set_Cursor@y:
   617                           	opt callstack 0
   618  000007                     _isspace$924:
   619                           	opt callstack 0
   620  000007                     ___awdiv@quotient:
   621                           	opt callstack 0
   622  000007                     strcpy@s:
   623                           	opt callstack 0
   624  000007                     tolower@c:
   625                           	opt callstack 0
   626                           
   627                           ; 2 bytes @ 0x6
   628  000007                     	ds	1
   629  000008                     ?_atoi:
   630                           	opt callstack 0
   631  000008                     Lcd_Set_Cursor@temp:
   632                           	opt callstack 0
   633  000008                     atoi@s:
   634                           	opt callstack 0
   635  000008                     strncmp@l:
   636                           	opt callstack 0
   637                           
   638                           ; 2 bytes @ 0x7
   639  000008                     	ds	1
   640  000009                     ??_tolower:
   641  000009                     ??___fladd:
   642  000009                     ??___fleq:
   643  000009                     ___fltol@sign1:
   644                           	opt callstack 0
   645  000009                     ___xxtofl@sign:
   646                           	opt callstack 0
   647  000009                     Lcd_Write_String@i:
   648                           	opt callstack 0
   649  000009                     ___fpclassifyf@e:
   650                           	opt callstack 0
   651  000009                     strcpy@d:
   652                           	opt callstack 0
   653                           
   654                           ; 2 bytes @ 0x8
   655  000009                     	ds	1
   656  00000A                     ??_atoi:
   657  00000A                     ___fltol@exp1:
   658                           	opt callstack 0
   659  00000A                     ___xxtofl@exp:
   660                           	opt callstack 0
   661  00000A                     fputs@s:
   662                           	opt callstack 0
   663  00000A                     strncmp@r:
   664                           	opt callstack 0
   665                           
   666                           ; 2 bytes @ 0x9
   667  00000A                     	ds	1
   668  00000B                     ___xxtofl@arg:
   669                           	opt callstack 0
   670  00000B                     ___fpclassifyf@u:
   671                           	opt callstack 0
   672                           
   673                           ; 4 bytes @ 0xA
   674  00000B                     	ds	1
   675  00000C                     fputs@fp:
   676                           	opt callstack 0
   677                           
   678                           ; 2 bytes @ 0xB
   679  00000C                     	ds	1
   680  00000D                     ___fladd@signs:
   681                           	opt callstack 0
   682  00000D                     _tolower$1009:
   683                           	opt callstack 0
   684                           
   685                           ; 2 bytes @ 0xC
   686  00000D                     	ds	1
   687  00000E                     ___fladd@aexp:
   688                           	opt callstack 0
   689  00000E                     fputs@c:
   690                           	opt callstack 0
   691  00000E                     atoi@neg:
   692                           	opt callstack 0
   693                           
   694                           ; 2 bytes @ 0xD
   695  00000E                     	ds	1
   696  00000F                     ?___flmul:
   697                           	opt callstack 0
   698  00000F                     ___fladd@bexp:
   699                           	opt callstack 0
   700  00000F                     fputs@i:
   701                           	opt callstack 0
   702  00000F                     ___flmul@b:
   703                           	opt callstack 0
   704                           
   705                           ; 4 bytes @ 0xE
   706  00000F                     	ds	1
   707  000010                     ___fladd@grs:
   708                           	opt callstack 0
   709  000010                     _atoi$893:
   710                           	opt callstack 0
   711                           
   712                           ; 2 bytes @ 0xF
   713  000010                     	ds	1
   714  000011                     ?_pad:
   715                           	opt callstack 0
   716  000011                     pad@fp:
   717                           	opt callstack 0
   718                           
   719                           ; 2 bytes @ 0x10
   720  000011                     	ds	1
   721  000012                     _atoi$895:
   722                           	opt callstack 0
   723                           
   724                           ; 2 bytes @ 0x11
   725  000012                     	ds	1
   726  000013                     pad@buf:
   727                           	opt callstack 0
   728  000013                     ___flmul@a:
   729                           	opt callstack 0
   730                           
   731                           ; 4 bytes @ 0x12
   732  000013                     	ds	1
   733  000014                     _atoi$894:
   734                           	opt callstack 0
   735                           
   736                           ; 1 bytes @ 0x13
   737  000014                     	ds	1
   738  000015                     pad@p:
   739                           	opt callstack 0
   740  000015                     atoi@n:
   741                           	opt callstack 0
   742                           
   743                           ; 2 bytes @ 0x14
   744  000015                     	ds	2
   745  000017                     ??___flmul:
   746  000017                     ??_pad:
   747                           
   748                           ; 1 bytes @ 0x16
   749  000017                     	ds	1
   750  000018                     pad@i:
   751                           	opt callstack 0
   752                           
   753                           ; 2 bytes @ 0x17
   754  000018                     	ds	2
   755  00001A                     pad@w:
   756                           	opt callstack 0
   757                           
   758                           ; 2 bytes @ 0x19
   759  00001A                     	ds	1
   760  00001B                     ___flmul@sign:
   761                           	opt callstack 0
   762                           
   763                           ; 1 bytes @ 0x1A
   764  00001B                     	ds	1
   765  00001C                     ___flmul@grs:
   766                           	opt callstack 0
   767                           
   768                           ; 4 bytes @ 0x1B
   769  00001C                     	ds	4
   770  000020                     ___flmul@aexp:
   771                           	opt callstack 0
   772                           
   773                           ; 1 bytes @ 0x1F
   774  000020                     	ds	1
   775  000021                     ___flmul@bexp:
   776                           	opt callstack 0
   777                           
   778                           ; 1 bytes @ 0x20
   779  000021                     	ds	1
   780  000022                     ___flmul@prod:
   781                           	opt callstack 0
   782                           
   783                           ; 4 bytes @ 0x21
   784  000022                     	ds	4
   785  000026                     ___flmul@temp:
   786                           	opt callstack 0
   787                           
   788                           ; 2 bytes @ 0x25
   789  000026                     	ds	2
   790  000028                     ?___fldiv:
   791                           	opt callstack 0
   792  000028                     ?___flsub:
   793                           	opt callstack 0
   794  000028                     ___flge@ff1:
   795                           	opt callstack 0
   796  000028                     ___flsub@b:
   797                           	opt callstack 0
   798  000028                     ___fldiv@b:
   799                           	opt callstack 0
   800                           
   801                           ; 4 bytes @ 0x27
   802  000028                     	ds	4
   803  00002C                     ___flge@ff2:
   804                           	opt callstack 0
   805  00002C                     ___flsub@a:
   806                           	opt callstack 0
   807  00002C                     ___fldiv@a:
   808                           	opt callstack 0
   809                           
   810                           ; 4 bytes @ 0x2B
   811  00002C                     	ds	4
   812  000030                     ??___fldiv:
   813  000030                     ??___flge:
   814                           
   815                           ; 1 bytes @ 0x2F
   816  000030                     	ds	4
   817  000034                     ___fldiv@rem:
   818                           	opt callstack 0
   819                           
   820                           ; 4 bytes @ 0x33
   821  000034                     	ds	4
   822  000038                     ___fldiv@sign:
   823                           	opt callstack 0
   824                           
   825                           ; 1 bytes @ 0x37
   826  000038                     	ds	1
   827  000039                     ___fldiv@new_exp:
   828                           	opt callstack 0
   829                           
   830                           ; 2 bytes @ 0x38
   831  000039                     	ds	2
   832  00003B                     ___fldiv@grs:
   833                           	opt callstack 0
   834                           
   835                           ; 4 bytes @ 0x3A
   836  00003B                     	ds	4
   837  00003F                     ___fldiv@bexp:
   838                           	opt callstack 0
   839                           
   840                           ; 1 bytes @ 0x3E
   841  00003F                     	ds	1
   842  000040                     ___fldiv@aexp:
   843                           	opt callstack 0
   844                           
   845                           ; 1 bytes @ 0x3F
   846  000040                     	ds	1
   847  000041                     ?_floorf:
   848                           	opt callstack 0
   849  000041                     floorf@x:
   850                           	opt callstack 0
   851                           
   852                           ; 4 bytes @ 0x40
   853  000041                     	ds	4
   854  000045                     ??_floorf:
   855                           
   856                           ; 1 bytes @ 0x44
   857  000045                     	ds	6
   858  00004B                     floorf@m:
   859                           	opt callstack 0
   860                           
   861                           ; 4 bytes @ 0x4A
   862  00004B                     	ds	4
   863  00004F                     floorf@e:
   864                           	opt callstack 0
   865                           
   866                           ; 2 bytes @ 0x4E
   867  00004F                     	ds	2
   868  000051                     floorf@u:
   869                           	opt callstack 0
   870                           
   871                           ; 4 bytes @ 0x50
   872  000051                     	ds	4
   873  000055                     ?_efgtoa:
   874                           	opt callstack 0
   875  000055                     efgtoa@fp:
   876                           	opt callstack 0
   877                           
   878                           ; 2 bytes @ 0x54
   879  000055                     	ds	2
   880  000057                     efgtoa@f:
   881                           	opt callstack 0
   882                           
   883                           ; 4 bytes @ 0x56
   884  000057                     	ds	4
   885  00005B                     efgtoa@c:
   886                           	opt callstack 0
   887                           
   888                           ; 1 bytes @ 0x5A
   889  00005B                     	ds	1
   890  00005C                     ??_vfpfcnvrt:
   891                           
   892                           ; 1 bytes @ 0x5B
   893  00005C                     	ds	4
   894  000060                     
   895                           ; 1 bytes @ 0x5F
   896 ;;
   897 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   898 ;;
   899 ;; *************** function _main *****************
   900 ;; Defined at:
   901 ;;		line 22 in file "main.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;		None
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   915 ;;      Params:         0       0       0       0       0       0       0       0       0
   916 ;;      Locals:         0       0       0       0       0       0       0       0       0
   917 ;;      Temps:          0       2       0       0       0       0       0       0       0
   918 ;;      Totals:         0       2       0       0       0       0       0       0       0
   919 ;;Total ram usage:        2 bytes
   920 ;; Hardware stack levels required when called:    8
   921 ;; This function calls:
   922 ;;		_ADCInit
   923 ;;		_ADC_Read
   924 ;;		_Lcd_Clear
   925 ;;		_Lcd_Init
   926 ;;		_Lcd_Set_Cursor
   927 ;;		_Lcd_Write_String
   928 ;;		___fldiv
   929 ;;		___flmul
   930 ;;		___xxtofl
   931 ;;		_sprintf
   932 ;; This function is called by:
   933 ;;		Startup code after reset
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text0
   938  002012                     __ptext0:
   939                           	opt callstack 0
   940  002012                     _main:
   941                           	opt callstack 23
   942                           
   943                           ;main.c: 25:     TRISD = 0x03;
   944                           
   945                           ;incstack = 0
   946  002012  0E03               	movlw	3
   947  002014  6E95               	movwf	3989,c	;volatile
   948                           
   949                           ;main.c: 26:     TRISA = 0xFF;
   950  002016  6892               	setf	3986,c	;volatile
   951                           
   952                           ;main.c: 27:     Lcd_Init();
   953  002018  EC9A  F014         	call	_Lcd_Init	;wreg free
   954                           
   955                           ;main.c: 28:     ADCInit();
   956  00201C  EC28  F017         	call	_ADCInit	;wreg free
   957                           
   958                           ;main.c: 29:     Lcd_Clear();
   959  002020  EC5C  F017         	call	_Lcd_Clear	;wreg free
   960                           
   961                           ;main.c: 30:     Lcd_Set_Cursor(1,1);
   962  002024  0E01               	movlw	1
   963  002026  6E04               	movwf	Lcd_Set_Cursor@b,c
   964  002028  0E01               	movlw	1
   965  00202A  ECC2  F015         	call	_Lcd_Set_Cursor
   966                           
   967                           ;main.c: 31:     Lcd_Write_String("********ADC********");
   968  00202E  0E01               	movlw	low STR_1
   969  002030  6E05               	movwf	Lcd_Write_String@a,c
   970  002032  0E08               	movlw	high STR_1
   971  002034  6E06               	movwf	Lcd_Write_String@a+1,c
   972  002036  ECD4  F014         	call	_Lcd_Write_String	;wreg free
   973                           
   974                           ;main.c: 32:     Lcd_Set_Cursor(2,1);
   975  00203A  0E01               	movlw	1
   976  00203C  6E04               	movwf	Lcd_Set_Cursor@b,c
   977  00203E  0E02               	movlw	2
   978  002040  ECC2  F015         	call	_Lcd_Set_Cursor
   979                           
   980                           ;main.c: 33:     Lcd_Write_String("By: Switcher");
   981  002044  0E15               	movlw	low STR_2
   982  002046  6E05               	movwf	Lcd_Write_String@a,c
   983  002048  0E08               	movlw	high STR_2
   984  00204A  6E06               	movwf	Lcd_Write_String@a+1,c
   985  00204C  ECD4  F014         	call	_Lcd_Write_String	;wreg free
   986                           
   987                           ;main.c: 34:     _delay((unsigned long)((1000)*(16000000L/4000.0)));
   988  002050  0E15               	movlw	21
   989  002052  0100               	movlb	0	; () banked
   990  002054  6FCA               	movwf	(??_main+1)& (0+255),b
   991  002056  0E4B               	movlw	75
   992  002058  6FC9               	movwf	??_main& (0+255),b
   993  00205A  0EBE               	movlw	190
   994  00205C                     u4957:
   995  00205C  2EE8               	decfsz	wreg,f,c
   996  00205E  D7FE               	bra	u4957
   997  002060  2FC9               	decfsz	??_main& (0+255),f,b
   998  002062  D7FC               	bra	u4957
   999  002064  2FCA               	decfsz	(??_main+1)& (0+255),f,b
  1000  002066  D7FA               	bra	u4957
  1001  002068  F000               	nop	
  1002                           
  1003                           ;main.c: 35:     Lcd_Clear();
  1004  00206A  EC5C  F017         	call	_Lcd_Clear	;wreg free
  1005  00206E                     l4014:
  1006                           
  1007                           ;main.c: 38:         Lcd_Set_Cursor(1,1);
  1008  00206E  0E01               	movlw	1
  1009  002070  6E04               	movwf	Lcd_Set_Cursor@b,c
  1010  002072  0E01               	movlw	1
  1011  002074  ECC2  F015         	call	_Lcd_Set_Cursor
  1012                           
  1013                           ;main.c: 39:         Lcd_Write_String("EL Valor ES");
  1014  002078  0E22               	movlw	low STR_3
  1015  00207A  6E05               	movwf	Lcd_Write_String@a,c
  1016  00207C  0E08               	movlw	high STR_3
  1017  00207E  6E06               	movwf	Lcd_Write_String@a+1,c
  1018  002080  ECD4  F014         	call	_Lcd_Write_String	;wreg free
  1019                           
  1020                           ;main.c: 40:         _delay((unsigned long)((500)*(16000000L/4000.0)));
  1021  002084  0E0B               	movlw	11
  1022  002086  0100               	movlb	0	; () banked
  1023  002088  6FCA               	movwf	(??_main+1)& (0+255),b
  1024  00208A  0E26               	movlw	38
  1025  00208C  6FC9               	movwf	??_main& (0+255),b
  1026  00208E  0E5D               	movlw	93
  1027  002090                     u4967:
  1028  002090  2EE8               	decfsz	wreg,f,c
  1029  002092  D7FE               	bra	u4967
  1030  002094  2FC9               	decfsz	??_main& (0+255),f,b
  1031  002096  D7FC               	bra	u4967
  1032  002098  2FCA               	decfsz	(??_main+1)& (0+255),f,b
  1033  00209A  D7FA               	bra	u4967
  1034  00209C  D000               	nop2	
  1035                           
  1036                           ;main.c: 42:         Value = ADC_Read(0);
  1037  00209E  0E00               	movlw	0
  1038  0020A0  EC8A  F016         	call	_ADC_Read
  1039  0020A4  C001  F0DF         	movff	?_ADC_Read,_Value
  1040  0020A8  C002  F0E0         	movff	?_ADC_Read+1,_Value+1
  1041                           
  1042                           ;main.c: 43:         voltage = Value*5.0/1023;
  1043  0020AC  0E00               	movlw	0
  1044  0020AE  6E13               	movwf	___flmul@a,c
  1045  0020B0  0E00               	movlw	0
  1046  0020B2  6E14               	movwf	___flmul@a+1,c
  1047  0020B4  0EA0               	movlw	160
  1048  0020B6  6E15               	movwf	___flmul@a+2,c
  1049  0020B8  0E40               	movlw	64
  1050  0020BA  6E16               	movwf	___flmul@a+3,c
  1051  0020BC  C0DF  F001         	movff	_Value,___xxtofl@val
  1052  0020C0  C0E0  F002         	movff	_Value+1,___xxtofl@val+1
  1053  0020C4  0E00               	movlw	0
  1054  0020C6  BE02               	btfsc	___xxtofl@val+1,7,c
  1055  0020C8  0EFF               	movlw	-1
  1056  0020CA  6E03               	movwf	___xxtofl@val+2,c
  1057  0020CC  6E04               	movwf	___xxtofl@val+3,c
  1058  0020CE  0E01               	movlw	1
  1059  0020D0  EC5A  F011         	call	___xxtofl
  1060  0020D4  C001  F00F         	movff	?___xxtofl,___flmul@b
  1061  0020D8  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1062  0020DC  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1063  0020E0  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1064  0020E4  ECBB  F00A         	call	___flmul	;wreg free
  1065  0020E8  C00F  F028         	movff	?___flmul,___fldiv@b
  1066  0020EC  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1067  0020F0  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1068  0020F4  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1069  0020F8  0E00               	movlw	0
  1070  0020FA  6E2C               	movwf	___fldiv@a,c
  1071  0020FC  0EC0               	movlw	192
  1072  0020FE  6E2D               	movwf	___fldiv@a+1,c
  1073  002100  0E7F               	movlw	127
  1074  002102  6E2E               	movwf	___fldiv@a+2,c
  1075  002104  0E44               	movlw	68
  1076  002106  6E2F               	movwf	___fldiv@a+3,c
  1077  002108  ECEA  F00D         	call	___fldiv	;wreg free
  1078  00210C  C028  F0D3         	movff	?___fldiv,_voltage
  1079  002110  C029  F0D4         	movff	?___fldiv+1,_voltage+1
  1080  002114  C02A  F0D5         	movff	?___fldiv+2,_voltage+2
  1081  002118  C02B  F0D6         	movff	?___fldiv+3,_voltage+3
  1082                           
  1083                           ;main.c: 44:         sprintf(datos,"%.3f",voltage);
  1084  00211C  0EE1               	movlw	low _datos
  1085  00211E  0100               	movlb	0	; () banked
  1086  002120  6FB7               	movwf	sprintf@s& (0+255),b
  1087  002122  0E00               	movlw	high _datos
  1088  002124  6FB8               	movwf	(sprintf@s+1)& (0+255),b
  1089  002126  0E2E               	movlw	low STR_4
  1090  002128  6FB9               	movwf	sprintf@fmt& (0+255),b
  1091  00212A  0E08               	movlw	high STR_4
  1092  00212C  6FBA               	movwf	(sprintf@fmt+1)& (0+255),b
  1093  00212E  C0D3  F0BB         	movff	_voltage,?_sprintf+4
  1094  002132  C0D4  F0BC         	movff	_voltage+1,?_sprintf+5
  1095  002136  C0D5  F0BD         	movff	_voltage+2,?_sprintf+6
  1096  00213A  C0D6  F0BE         	movff	_voltage+3,?_sprintf+7
  1097  00213E  EC70  F015         	call	_sprintf	;wreg free
  1098                           
  1099                           ;main.c: 46:         Lcd_Set_Cursor(2,1);
  1100  002142  0E01               	movlw	1
  1101  002144  6E04               	movwf	Lcd_Set_Cursor@b,c
  1102  002146  0E02               	movlw	2
  1103  002148  ECC2  F015         	call	_Lcd_Set_Cursor
  1104                           
  1105                           ;main.c: 47:         Lcd_Write_String(datos);
  1106  00214C  0EE1               	movlw	low _datos
  1107  00214E  6E05               	movwf	Lcd_Write_String@a,c
  1108  002150  0E00               	movlw	high _datos
  1109  002152  6E06               	movwf	Lcd_Write_String@a+1,c
  1110  002154  ECD4  F014         	call	_Lcd_Write_String	;wreg free
  1111                           
  1112                           ;main.c: 48:         _delay((unsigned long)((500)*(16000000L/4000.0)));
  1113  002158  0E0B               	movlw	11
  1114  00215A  0100               	movlb	0	; () banked
  1115  00215C  6FCA               	movwf	(??_main+1)& (0+255),b
  1116  00215E  0E26               	movlw	38
  1117  002160  6FC9               	movwf	??_main& (0+255),b
  1118  002162  0E5D               	movlw	93
  1119  002164                     u4977:
  1120  002164  2EE8               	decfsz	wreg,f,c
  1121  002166  D7FE               	bra	u4977
  1122  002168  2FC9               	decfsz	??_main& (0+255),f,b
  1123  00216A  D7FC               	bra	u4977
  1124  00216C  2FCA               	decfsz	(??_main+1)& (0+255),f,b
  1125  00216E  D7FA               	bra	u4977
  1126  002170  D000               	nop2	
  1127  002172  D77D               	goto	l4014
  1128  002174                     __end_of_main:
  1129                           	opt callstack 0
  1130                           
  1131 ;; *************** function _sprintf *****************
  1132 ;; Defined at:
  1133 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;  s               2   87[BANK0 ] PTR unsigned char 
  1136 ;;		 -> datos(20), 
  1137 ;;  fmt             2   89[BANK0 ] PTR const unsigned char 
  1138 ;;		 -> STR_4(5), 
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;  f               6   99[BANK0 ] struct _IO_FILE
  1141 ;;  ap              2   97[BANK0 ] PTR void [1]
  1142 ;;		 -> ?_sprintf(2), 
  1143 ;;  ret             2    0        int 
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  2   87[BANK0 ] int 
  1146 ;; Registers used:
  1147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1153 ;;      Params:         0       8       0       0       0       0       0       0       0
  1154 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1156 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1157 ;;Total ram usage:       18 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; Hardware stack levels required when called:    7
  1160 ;; This function calls:
  1161 ;;		_vfprintf
  1162 ;; This function is called by:
  1163 ;;		_main
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text1
  1168  002AE0                     __ptext1:
  1169                           	opt callstack 0
  1170  002AE0                     _sprintf:
  1171                           	opt callstack 23
  1172                           
  1173                           ;incstack = 0
  1174  002AE0  0EBB               	movlw	low (?_sprintf+4)
  1175  002AE2  0100               	movlb	0	; () banked
  1176  002AE4  6FC1               	movwf	sprintf@ap& (0+255),b
  1177  002AE6  0E00               	movlw	high (?_sprintf+4)
  1178  002AE8  6FC2               	movwf	(sprintf@ap+1)& (0+255),b
  1179  002AEA  C0B7  F0C3         	movff	sprintf@s,sprintf@f
  1180  002AEE  C0B8  F0C4         	movff	sprintf@s+1,sprintf@f+1
  1181                           
  1182                           ; BSR set to: 0
  1183  002AF2  0E00               	movlw	0
  1184  002AF4  6FC6               	movwf	(sprintf@f+3)& (0+255),b
  1185  002AF6  0E00               	movlw	0
  1186  002AF8  6FC5               	movwf	(sprintf@f+2)& (0+255),b
  1187                           
  1188                           ; BSR set to: 0
  1189  002AFA  0E00               	movlw	0
  1190  002AFC  6FC8               	movwf	(sprintf@f+5)& (0+255),b
  1191  002AFE  0E00               	movlw	0
  1192  002B00  6FC7               	movwf	(sprintf@f+4)& (0+255),b
  1193                           
  1194                           ; BSR set to: 0
  1195  002B02  0EC3               	movlw	low sprintf@f
  1196  002B04  6FAF               	movwf	vfprintf@fp& (0+255),b
  1197  002B06  0E00               	movlw	high sprintf@f
  1198  002B08  6FB0               	movwf	(vfprintf@fp+1)& (0+255),b
  1199  002B0A  C0B9  F0B1         	movff	sprintf@fmt,vfprintf@fmt
  1200  002B0E  C0BA  F0B2         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1201  002B12  0EC1               	movlw	low sprintf@ap
  1202  002B14  6FB3               	movwf	vfprintf@ap& (0+255),b
  1203  002B16  0E00               	movlw	high sprintf@ap
  1204  002B18  6FB4               	movwf	(vfprintf@ap+1)& (0+255),b
  1205  002B1A  EC45  F015         	call	_vfprintf	;wreg free
  1206  002B1E  0100               	movlb	0	; () banked
  1207  002B20  51C5               	movf	(sprintf@f+2)& (0+255),w,b
  1208  002B22  25B7               	addwf	sprintf@s& (0+255),w,b
  1209  002B24  6ED9               	movwf	fsr2l,c
  1210  002B26  51C6               	movf	(sprintf@f+3)& (0+255),w,b
  1211  002B28  21B8               	addwfc	(sprintf@s+1)& (0+255),w,b
  1212  002B2A  6EDA               	movwf	fsr2h,c
  1213  002B2C  0E00               	movlw	0
  1214  002B2E  6EDF               	movwf	indf2,c
  1215                           
  1216                           ; BSR set to: 0
  1217  002B30  0012               	return		;funcret
  1218  002B32                     __end_of_sprintf:
  1219                           	opt callstack 0
  1220                           
  1221 ;; *************** function _vfprintf *****************
  1222 ;; Defined at:
  1223 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;  fp              2   79[BANK0 ] PTR struct _IO_FILE
  1226 ;;		 -> sprintf@f(6), 
  1227 ;;  fmt             2   81[BANK0 ] PTR const unsigned char 
  1228 ;;		 -> STR_4(5), 
  1229 ;;  ap              2   83[BANK0 ] PTR PTR void 
  1230 ;;		 -> sprintf@ap(2), 
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;  cfmt            2   85[BANK0 ] PTR unsigned char 
  1233 ;;		 -> STR_4(5), 
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  2   79[BANK0 ] int 
  1236 ;; Registers used:
  1237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1243 ;;      Params:         0       6       0       0       0       0       0       0       0
  1244 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1245 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1246 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1247 ;;Total ram usage:        8 bytes
  1248 ;; Hardware stack levels used:    1
  1249 ;; Hardware stack levels required when called:    6
  1250 ;; This function calls:
  1251 ;;		_vfpfcnvrt
  1252 ;; This function is called by:
  1253 ;;		_sprintf
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           	psect	text2
  1258  002A8A                     __ptext2:
  1259                           	opt callstack 0
  1260  002A8A                     _vfprintf:
  1261                           	opt callstack 23
  1262                           
  1263                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  1264                           
  1265                           ; BSR set to: 0
  1266                           ;incstack = 0
  1267  002A8A  C0B1  F0B5         	movff	vfprintf@fmt,vfprintf@cfmt
  1268  002A8E  C0B2  F0B6         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1269                           
  1270                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  1271  002A92  0E00               	movlw	0
  1272  002A94  0100               	movlb	0	; () banked
  1273  002A96  6FD8               	movwf	(_nout+1)& (0+255),b
  1274  002A98  0E00               	movlw	0
  1275  002A9A  6FD7               	movwf	_nout& (0+255),b
  1276                           
  1277                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1278  002A9C  D013               	goto	l3854
  1279  002A9E                     l3852:
  1280                           
  1281                           ; BSR set to: 0
  1282                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  1283  002A9E  C0AF  F09D         	movff	vfprintf@fp,vfpfcnvrt@fp
  1284  002AA2  C0B0  F09E         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1285  002AA6  0EB5               	movlw	low vfprintf@cfmt
  1286  002AA8  6F9F               	movwf	vfpfcnvrt@fmt& (0+255),b
  1287  002AAA  0E00               	movlw	high vfprintf@cfmt
  1288  002AAC  6FA0               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1289  002AAE  C0B3  F0A1         	movff	vfprintf@ap,vfpfcnvrt@ap
  1290  002AB2  C0B4  F0A2         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1291  002AB6  ECE2  F008         	call	_vfpfcnvrt	;wreg free
  1292  002ABA  0100               	movlb	0	; () banked
  1293  002ABC  519D               	movf	?_vfpfcnvrt& (0+255),w,b
  1294  002ABE  27D7               	addwf	_nout& (0+255),f,b
  1295  002AC0  519E               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1296  002AC2  23D8               	addwfc	(_nout+1)& (0+255),f,b
  1297  002AC4                     l3854:
  1298                           
  1299                           ; BSR set to: 0
  1300                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1301  002AC4  C0B5  FFF6         	movff	vfprintf@cfmt,tblptrl
  1302  002AC8  C0B6  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1303  002ACC                     	if	0	;tblptru may be non-zero
  1304  002ACC                     	endif
  1305  002ACC                     	if	0	;tblptru may be non-zero
  1306  002ACC                     	endif
  1307  002ACC  0008               	tblrd		*
  1308  002ACE  50F5               	movf	tablat,w,c
  1309  002AD0  0900               	iorlw	0
  1310  002AD2  A4D8               	btfss	status,2,c
  1311  002AD4  D7E4               	goto	l3852
  1312                           
  1313                           ; BSR set to: 0
  1314                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  1315  002AD6  C0D7  F0AF         	movff	_nout,?_vfprintf
  1316  002ADA  C0D8  F0B0         	movff	_nout+1,?_vfprintf+1
  1317                           
  1318                           ; BSR set to: 0
  1319  002ADE  0012               	return		;funcret
  1320  002AE0                     __end_of_vfprintf:
  1321                           	opt callstack 0
  1322                           
  1323 ;; *************** function _vfpfcnvrt *****************
  1324 ;; Defined at:
  1325 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;  fp              2   61[BANK0 ] PTR struct _IO_FILE
  1328 ;;		 -> sprintf@f(6), 
  1329 ;;  fmt             2   63[BANK0 ] PTR PTR unsigned char 
  1330 ;;		 -> vfprintf@cfmt(2), 
  1331 ;;  ap              2   65[BANK0 ] PTR PTR void 
  1332 ;;		 -> sprintf@ap(2), 
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  llu             8    0        unsigned long long 
  1335 ;;  ll              8    0        long long 
  1336 ;;  f               4   71[BANK0 ] long long 
  1337 ;;  ct              3   75[BANK0 ] unsigned char [3]
  1338 ;;  vp              3    0        PTR void 
  1339 ;;  cp              3    0        PTR unsigned char 
  1340 ;;  i               2    0        int 
  1341 ;;  done            2    0        int 
  1342 ;;  c               1   78[BANK0 ] unsigned char 
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  2   61[BANK0 ] int 
  1345 ;; Registers used:
  1346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1352 ;;      Params:         0       6       0       0       0       0       0       0       0
  1353 ;;      Locals:         0      12       0       0       0       0       0       0       0
  1354 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1355 ;;      Totals:         4      18       0       0       0       0       0       0       0
  1356 ;;Total ram usage:       22 bytes
  1357 ;; Hardware stack levels used:    1
  1358 ;; Hardware stack levels required when called:    5
  1359 ;; This function calls:
  1360 ;;		_atoi
  1361 ;;		_efgtoa
  1362 ;;		_fputc
  1363 ;;		_isdigit
  1364 ;;		_isupper
  1365 ;;		_strncmp
  1366 ;;		_tolower
  1367 ;; This function is called by:
  1368 ;;		_vfprintf
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           	psect	text3
  1373  0011C4                     __ptext3:
  1374                           	opt callstack 0
  1375  0011C4                     _vfpfcnvrt:
  1376                           	opt callstack 23
  1377                           
  1378                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  1379                           
  1380                           ; BSR set to: 0
  1381                           ;incstack = 0
  1382  0011C4  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1383  0011C8  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1384  0011CC  CFDE FFF6          	movff	postinc2,tblptrl
  1385  0011D0  CFDD FFF7          	movff	postdec2,tblptrh
  1386  0011D4                     	if	0	;tblptru may be non-zero
  1387  0011D4                     	endif
  1388  0011D4                     	if	0	;tblptru may be non-zero
  1389  0011D4                     	endif
  1390  0011D4  0008               	tblrd		*
  1391  0011D6  50F5               	movf	tablat,w,c
  1392  0011D8  0A25               	xorlw	37
  1393  0011DA  A4D8               	btfss	status,2,c
  1394  0011DC  D1B2               	goto	l3810
  1395                           
  1396                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  1397  0011DE  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1398  0011E2  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1399  0011E6  2ADE               	incf	postinc2,f,c
  1400  0011E8  0E00               	movlw	0
  1401  0011EA  22DD               	addwfc	postdec2,f,c
  1402                           
  1403                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  1404  0011EC  0E00               	movlw	0
  1405  0011EE  0100               	movlb	0	; () banked
  1406  0011F0  6FDA               	movwf	(_width+1)& (0+255),b
  1407  0011F2  0E00               	movlw	0
  1408  0011F4  6FD9               	movwf	_width& (0+255),b
  1409  0011F6  C0D9  F0DD         	movff	_width,_flags
  1410  0011FA  C0DA  F0DE         	movff	_width+1,_flags+1
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  1414  0011FE  69DB               	setf	_prec& (0+255),b
  1415  001200  69DC               	setf	(_prec+1)& (0+255),b
  1416                           
  1417                           ; BSR set to: 0
  1418                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  1419  001202  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1420  001206  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1421  00120A  CFDE FFF6          	movff	postinc2,tblptrl
  1422  00120E  CFDD FFF7          	movff	postdec2,tblptrh
  1423  001212                     	if	0	;tblptru may be non-zero
  1424  001212                     	endif
  1425  001212                     	if	0	;tblptru may be non-zero
  1426  001212                     	endif
  1427  001212  0008               	tblrd		*
  1428  001214  50F5               	movf	tablat,w,c
  1429  001216  0A2E               	xorlw	46
  1430  001218  A4D8               	btfss	status,2,c
  1431  00121A  D06E               	goto	u4680
  1432                           
  1433                           ; BSR set to: 0
  1434                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  1435  00121C  0E00               	movlw	0
  1436  00121E  6FDC               	movwf	(_prec+1)& (0+255),b
  1437  001220  0E00               	movlw	0
  1438  001222  6FDB               	movwf	_prec& (0+255),b
  1439                           
  1440                           ; BSR set to: 0
  1441                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  1442  001224  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1443  001228  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1444  00122C  2ADE               	incf	postinc2,f,c
  1445  00122E  0E00               	movlw	0
  1446  001230  22DD               	addwfc	postdec2,f,c
  1447                           
  1448                           ; BSR set to: 0
  1449                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  1450  001232  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1451  001236  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1452  00123A  CFDE FFF6          	movff	postinc2,tblptrl
  1453  00123E  CFDD FFF7          	movff	postdec2,tblptrh
  1454  001242                     	if	0	;tblptru may be non-zero
  1455  001242                     	endif
  1456  001242                     	if	0	;tblptru may be non-zero
  1457  001242                     	endif
  1458  001242  0008               	tblrd		*
  1459  001244  50F5               	movf	tablat,w,c
  1460  001246  0A2A               	xorlw	42
  1461  001248  A4D8               	btfss	status,2,c
  1462  00124A  D01C               	goto	l3746
  1463                           
  1464                           ; BSR set to: 0
  1465                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  1466  00124C  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1467  001250  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1468  001254  2ADE               	incf	postinc2,f,c
  1469  001256  0E00               	movlw	0
  1470  001258  22DD               	addwfc	postdec2,f,c
  1471                           
  1472                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  1473  00125A  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1474  00125E  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1475  001262  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  1476  001266  0E02               	movlw	2
  1477  001268  26DE               	addwf	postinc2,f,c
  1478  00126A  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  1479  00126E  0E00               	movlw	0
  1480  001270  22DD               	addwfc	postdec2,f,c
  1481  001272  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1482  001276  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1483  00127A  CFDE F0DB          	movff	postinc2,_prec
  1484  00127E  CFDD F0DC          	movff	postdec2,_prec+1
  1485                           
  1486                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 746:             } else {
  1487  001282  D03A               	goto	u4680
  1488  001284                     l3746:
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  1492  001284  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1493  001288  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1494  00128C  CFDE F008          	movff	postinc2,atoi@s
  1495  001290  CFDD F009          	movff	postdec2,atoi@s+1
  1496  001294  ECBA  F010         	call	_atoi	;wreg free
  1497  001298  C008  F0DB         	movff	?_atoi,_prec
  1498  00129C  C009  F0DC         	movff	?_atoi+1,_prec+1
  1499                           
  1500                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1501  0012A0  D007               	goto	l3750
  1502  0012A2                     l3748:
  1503                           
  1504                           ; BSR set to: 0
  1505                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  1506  0012A2  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1507  0012A6  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1508  0012AA  2ADE               	incf	postinc2,f,c
  1509  0012AC  0E00               	movlw	0
  1510  0012AE  22DD               	addwfc	postdec2,f,c
  1511  0012B0                     l3750:
  1512  0012B0  0ED0               	movlw	208
  1513  0012B2  6E5C               	movwf	??_vfpfcnvrt& (0+255),c
  1514  0012B4  0EFF               	movlw	255
  1515  0012B6  6E5D               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  1516  0012B8  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1517  0012BC  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1518  0012C0  CFDE FFF6          	movff	postinc2,tblptrl
  1519  0012C4  CFDD FFF7          	movff	postdec2,tblptrh
  1520  0012C8                     	if	0	;tblptru may be non-zero
  1521  0012C8                     	endif
  1522  0012C8                     	if	0	;tblptru may be non-zero
  1523  0012C8                     	endif
  1524  0012C8  0008               	tblrd		*
  1525  0012CA  50F5               	movf	tablat,w,c
  1526  0012CC  6E5E               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  1527  0012CE  6A5F               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  1528  0012D0  505C               	movf	??_vfpfcnvrt,w,c
  1529  0012D2  265E               	addwf	??_vfpfcnvrt+2,f,c
  1530  0012D4  505D               	movf	??_vfpfcnvrt+1,w,c
  1531  0012D6  225F               	addwfc	??_vfpfcnvrt+3,f,c
  1532  0012D8  505F               	movf	??_vfpfcnvrt+3,w,c
  1533  0012DA  E106               	bnz	u4660
  1534  0012DC  0E0A               	movlw	10
  1535  0012DE  5C5E               	subwf	??_vfpfcnvrt+2,w,c
  1536  0012E0  B0D8               	btfsc	status,0,c
  1537  0012E2  D002               	goto	u4660
  1538  0012E4  0E01               	movlw	1
  1539  0012E6  D001               	goto	u4670
  1540  0012E8                     u4660:
  1541  0012E8  0E00               	movlw	0
  1542  0012EA                     u4670:
  1543  0012EA  0100               	movlb	0	; () banked
  1544  0012EC  6FA3               	movwf	_vfpfcnvrt$418& (0+255),b
  1545  0012EE  6BA4               	clrf	(_vfpfcnvrt$418+1)& (0+255),b
  1546                           
  1547                           ; BSR set to: 0
  1548  0012F0  51A3               	movf	_vfpfcnvrt$418& (0+255),w,b
  1549  0012F2  11A4               	iorwf	(_vfpfcnvrt$418+1)& (0+255),w,b
  1550  0012F4  A4D8               	btfss	status,2,c
  1551  0012F6  D7D5               	goto	l3748
  1552  0012F8                     u4680:
  1553                           
  1554                           ; BSR set to: 0
  1555                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  1556  0012F8  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1557  0012FC  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1558  001300  CFDE FFF6          	movff	postinc2,tblptrl
  1559  001304  CFDD FFF7          	movff	postdec2,tblptrh
  1560  001308                     	if	0	;tblptru may be non-zero
  1561  001308                     	endif
  1562  001308                     	if	0	;tblptru may be non-zero
  1563  001308                     	endif
  1564  001308  0008               	tblrd		*
  1565  00130A  50F5               	movf	tablat,w,c
  1566  00130C  6E07               	movwf	tolower@c,c
  1567  00130E  6A08               	clrf	tolower@c+1,c
  1568  001310  ECEA  F015         	call	_tolower	;wreg free
  1569  001314  5007               	movf	?_tolower,w,c
  1570  001316  0100               	movlb	0	; () banked
  1571  001318  6FAB               	movwf	vfpfcnvrt@ct& (0+255),b
  1572                           
  1573                           ; BSR set to: 0
  1574                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  1575  00131A  51AB               	movf	vfpfcnvrt@ct& (0+255),w,b
  1576  00131C  B4D8               	btfsc	status,2,c
  1577  00131E  D035               	goto	l3766
  1578                           
  1579                           ; BSR set to: 0
  1580                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  1581  001320  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1582  001324  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1583  001328  CFDE F05C          	movff	postinc2,??_vfpfcnvrt
  1584  00132C  CFDD F05D          	movff	postdec2,??_vfpfcnvrt+1
  1585  001330  0E01               	movlw	1
  1586  001332  265C               	addwf	??_vfpfcnvrt,f,c
  1587  001334  0E00               	movlw	0
  1588  001336  225D               	addwfc	??_vfpfcnvrt+1,f,c
  1589  001338  C05C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1590  00133C  C05D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1591  001340                     	if	0	;tblptru may be non-zero
  1592  001340                     	endif
  1593  001340                     	if	0	;tblptru may be non-zero
  1594  001340                     	endif
  1595  001340  0008               	tblrd		*
  1596  001342  50F5               	movf	tablat,w,c
  1597  001344  6E07               	movwf	tolower@c,c
  1598  001346  6A08               	clrf	tolower@c+1,c
  1599  001348  ECEA  F015         	call	_tolower	;wreg free
  1600  00134C  5007               	movf	?_tolower,w,c
  1601  00134E  0100               	movlb	0	; () banked
  1602  001350  6FAC               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1603                           
  1604                           ; BSR set to: 0
  1605                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  1606  001352  51AC               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1607  001354  B4D8               	btfsc	status,2,c
  1608  001356  D019               	goto	l3766
  1609                           
  1610                           ; BSR set to: 0
  1611                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  1612  001358  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1613  00135C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1614  001360  CFDE F05C          	movff	postinc2,??_vfpfcnvrt
  1615  001364  CFDD F05D          	movff	postdec2,??_vfpfcnvrt+1
  1616  001368  0E02               	movlw	2
  1617  00136A  265C               	addwf	??_vfpfcnvrt,f,c
  1618  00136C  0E00               	movlw	0
  1619  00136E  225D               	addwfc	??_vfpfcnvrt+1,f,c
  1620  001370  C05C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1621  001374  C05D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1622  001378                     	if	0	;tblptru may be non-zero
  1623  001378                     	endif
  1624  001378                     	if	0	;tblptru may be non-zero
  1625  001378                     	endif
  1626  001378  0008               	tblrd		*
  1627  00137A  50F5               	movf	tablat,w,c
  1628  00137C  6E07               	movwf	tolower@c,c
  1629  00137E  6A08               	clrf	tolower@c+1,c
  1630  001380  ECEA  F015         	call	_tolower	;wreg free
  1631  001384  5007               	movf	?_tolower,w,c
  1632  001386  0100               	movlb	0	; () banked
  1633  001388  6FAD               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1634  00138A                     l3766:
  1635                           
  1636                           ; BSR set to: 0
  1637                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  1638  00138A  0E66               	movlw	102
  1639  00138C  19AB               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1640  00138E  A4D8               	btfss	status,2,c
  1641  001390  D03F               	goto	l3778
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  1645  001392  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1646  001396  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1647  00139A  CFDE FFF6          	movff	postinc2,tblptrl
  1648  00139E  CFDD FFF7          	movff	postdec2,tblptrh
  1649  0013A2                     	if	0	;tblptru may be non-zero
  1650  0013A2                     	endif
  1651  0013A2                     	if	0	;tblptru may be non-zero
  1652  0013A2                     	endif
  1653  0013A2  0008               	tblrd		*
  1654  0013A4  CFF5 F0AE          	movff	tablat,vfpfcnvrt@c
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  1658  0013A8  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1659  0013AC  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1660  0013B0  2ADE               	incf	postinc2,f,c
  1661  0013B2  0E00               	movlw	0
  1662  0013B4  22DD               	addwfc	postdec2,f,c
  1663                           
  1664                           ; BSR set to: 0
  1665                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  1666  0013B6  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1667  0013BA  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1668  0013BE  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  1669  0013C2  0E04               	movlw	4
  1670  0013C4  26DE               	addwf	postinc2,f,c
  1671  0013C6  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  1672  0013CA  0E00               	movlw	0
  1673  0013CC  22DD               	addwfc	postdec2,f,c
  1674  0013CE  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1675  0013D2  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1676  0013D6  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f
  1677  0013DA  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+1
  1678  0013DE  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+2
  1679  0013E2  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+3
  1680  0013E6                     l3774:
  1681                           
  1682                           ; BSR set to: 0
  1683                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  1684  0013E6  C09D  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  1685  0013EA  C09E  F056         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1686  0013EE  C0A7  F057         	movff	vfpfcnvrt@f,efgtoa@f
  1687  0013F2  C0A8  F058         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1688  0013F6  C0A9  F059         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1689  0013FA  C0AA  F05A         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1690  0013FE  C0AE  F05B         	movff	vfpfcnvrt@c,efgtoa@c
  1691  001402  EC24  F004         	call	_efgtoa	;wreg free
  1692  001406  C055  F09D         	movff	?_efgtoa,?_vfpfcnvrt
  1693  00140A  C056  F09E         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1694  00140E  0012               	return	
  1695  001410                     l3778:
  1696                           
  1697                           ; BSR set to: 0
  1698                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1699  001410  0EAB               	movlw	low vfpfcnvrt@ct
  1700  001412  6E01               	movwf	strncmp@_l,c
  1701  001414  0E00               	movlw	high vfpfcnvrt@ct
  1702  001416  6E02               	movwf	strncmp@_l+1,c
  1703  001418  0E43               	movlw	low STR_13
  1704  00141A  6E03               	movwf	strncmp@_r,c
  1705  00141C  0E08               	movlw	high STR_13
  1706  00141E  6E04               	movwf	strncmp@_r+1,c
  1707  001420  0E00               	movlw	0
  1708  001422  6E06               	movwf	strncmp@n+1,c
  1709  001424  0E02               	movlw	2
  1710  001426  6E05               	movwf	strncmp@n,c
  1711  001428  EC25  F013         	call	_strncmp	;wreg free
  1712  00142C  5001               	movf	?_strncmp,w,c
  1713  00142E  1002               	iorwf	?_strncmp+1,w,c
  1714  001430  A4D8               	btfss	status,2,c
  1715  001432  D056               	goto	l3794
  1716                           
  1717                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1718  001434  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1719  001438  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1720  00143C  CFDE F05C          	movff	postinc2,??_vfpfcnvrt
  1721  001440  CFDD F05D          	movff	postdec2,??_vfpfcnvrt+1
  1722  001444  0E01               	movlw	1
  1723  001446  265C               	addwf	??_vfpfcnvrt,f,c
  1724  001448  0E00               	movlw	0
  1725  00144A  225D               	addwfc	??_vfpfcnvrt+1,f,c
  1726  00144C  C05C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1727  001450  C05D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1728  001454                     	if	0	;tblptru may be non-zero
  1729  001454                     	endif
  1730  001454                     	if	0	;tblptru may be non-zero
  1731  001454                     	endif
  1732  001454  0008               	tblrd		*
  1733  001456  CFF5 F0AE          	movff	tablat,vfpfcnvrt@c
  1734  00145A  0EBF               	movlw	191
  1735  00145C  6E5C               	movwf	??_vfpfcnvrt& (0+255),c
  1736  00145E  0EFF               	movlw	255
  1737  001460  6E5D               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  1738  001462  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1739  001466  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1740  00146A  CFDE FFF6          	movff	postinc2,tblptrl
  1741  00146E  CFDD FFF7          	movff	postdec2,tblptrh
  1742  001472                     	if	0	;tblptru may be non-zero
  1743  001472                     	endif
  1744  001472                     	if	0	;tblptru may be non-zero
  1745  001472                     	endif
  1746  001472  0008               	tblrd		*
  1747  001474  50F5               	movf	tablat,w,c
  1748  001476  6E5E               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  1749  001478  6A5F               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  1750  00147A  505C               	movf	??_vfpfcnvrt,w,c
  1751  00147C  265E               	addwf	??_vfpfcnvrt+2,f,c
  1752  00147E  505D               	movf	??_vfpfcnvrt+1,w,c
  1753  001480  225F               	addwfc	??_vfpfcnvrt+3,f,c
  1754  001482  505F               	movf	??_vfpfcnvrt+3,w,c
  1755  001484  E106               	bnz	u4730
  1756  001486  0E1A               	movlw	26
  1757  001488  5C5E               	subwf	??_vfpfcnvrt+2,w,c
  1758  00148A  B0D8               	btfsc	status,0,c
  1759  00148C  D002               	goto	u4730
  1760  00148E  0E01               	movlw	1
  1761  001490  D001               	goto	u4740
  1762  001492                     u4730:
  1763  001492  0E00               	movlw	0
  1764  001494                     u4740:
  1765  001494  0100               	movlb	0	; () banked
  1766  001496  6FA5               	movwf	_vfpfcnvrt$422& (0+255),b
  1767  001498  6BA6               	clrf	(_vfpfcnvrt$422+1)& (0+255),b
  1768                           
  1769                           ; BSR set to: 0
  1770  00149A  51A5               	movf	_vfpfcnvrt$422& (0+255),w,b
  1771  00149C  11A6               	iorwf	(_vfpfcnvrt$422+1)& (0+255),w,b
  1772                           
  1773                           ; BSR set to: 0
  1774                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1775                           
  1776                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 933:             } else {
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  1780  00149E  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1781  0014A2  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1782  0014A6  CFDF F05C          	movff	indf2,??_vfpfcnvrt
  1783  0014AA  0E04               	movlw	4
  1784  0014AC  26DE               	addwf	postinc2,f,c
  1785  0014AE  CFDF F05D          	movff	indf2,??_vfpfcnvrt+1
  1786  0014B2  0E00               	movlw	0
  1787  0014B4  22DD               	addwfc	postdec2,f,c
  1788  0014B6  C05C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1789  0014BA  C05D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1790  0014BE  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f
  1791  0014C2  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+1
  1792  0014C6  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+2
  1793  0014CA  CFDE F0AA          	movff	postinc2,vfpfcnvrt@f+3
  1794                           
  1795                           ; BSR set to: 0
  1796                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  1797                           
  1798                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 935:             }
  1799  0014CE  0E02               	movlw	2
  1800  0014D0  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1801  0014D4  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1802  0014D8  26DE               	addwf	postinc2,f,c
  1803  0014DA  0E00               	movlw	0
  1804  0014DC  22DD               	addwfc	postdec2,f,c
  1805  0014DE  D783               	goto	l3774
  1806  0014E0                     l3794:
  1807                           
  1808                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  1809  0014E0  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1810  0014E4  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1811  0014E8  CFDE FFF6          	movff	postinc2,tblptrl
  1812  0014EC  CFDD FFF7          	movff	postdec2,tblptrh
  1813  0014F0                     	if	0	;tblptru may be non-zero
  1814  0014F0                     	endif
  1815  0014F0                     	if	0	;tblptru may be non-zero
  1816  0014F0                     	endif
  1817  0014F0  0008               	tblrd		*
  1818  0014F2  50F5               	movf	tablat,w,c
  1819  0014F4  0A25               	xorlw	37
  1820  0014F6  A4D8               	btfss	status,2,c
  1821  0014F8  D017               	goto	l3804
  1822                           
  1823                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  1824  0014FA  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1825  0014FE  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1826  001502  2ADE               	incf	postinc2,f,c
  1827  001504  0E00               	movlw	0
  1828  001506  22DD               	addwfc	postdec2,f,c
  1829                           
  1830                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  1831  001508  0E00               	movlw	0
  1832  00150A  6E02               	movwf	fputc@c+1,c
  1833  00150C  0E25               	movlw	37
  1834  00150E  6E01               	movwf	fputc@c,c
  1835  001510  C09D  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1836  001514  C09E  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1837  001518  EC76  F013         	call	_fputc	;wreg free
  1838  00151C                     l3800:
  1839                           
  1840                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  1841  00151C  0E00               	movlw	0
  1842  00151E  0100               	movlb	0	; () banked
  1843  001520  6F9E               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1844  001522  0E01               	movlw	1
  1845  001524  6F9D               	movwf	?_vfpfcnvrt& (0+255),b
  1846  001526  0012               	return	
  1847  001528                     l3804:
  1848                           
  1849                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  1850  001528  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1851  00152C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1852  001530  2ADE               	incf	postinc2,f,c
  1853  001532  0E00               	movlw	0
  1854  001534  22DD               	addwfc	postdec2,f,c
  1855                           
  1856                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  1857  001536  0E00               	movlw	0
  1858  001538  0100               	movlb	0	; () banked
  1859  00153A  6F9E               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1860  00153C  0E00               	movlw	0
  1861  00153E  6F9D               	movwf	?_vfpfcnvrt& (0+255),b
  1862  001540  0012               	return	
  1863  001542                     l3810:
  1864                           
  1865                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  1866  001542  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1867  001546  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1868  00154A  CFDE FFF6          	movff	postinc2,tblptrl
  1869  00154E  CFDD FFF7          	movff	postdec2,tblptrh
  1870  001552                     	if	0	;tblptru may be non-zero
  1871  001552                     	endif
  1872  001552                     	if	0	;tblptru may be non-zero
  1873  001552                     	endif
  1874  001552  0008               	tblrd		*
  1875  001554  50F5               	movf	tablat,w,c
  1876  001556  6E01               	movwf	fputc@c,c
  1877  001558  6A02               	clrf	fputc@c+1,c
  1878  00155A  C09D  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1879  00155E  C09E  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1880  001562  EC76  F013         	call	_fputc	;wreg free
  1881                           
  1882                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  1883  001566  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1884  00156A  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1885  00156E  2ADE               	incf	postinc2,f,c
  1886  001570  0E00               	movlw	0
  1887  001572  22DD               	addwfc	postdec2,f,c
  1888  001574  D7D3               	goto	l3800
  1889  001576                     __end_of_vfpfcnvrt:
  1890                           	opt callstack 0
  1891                           
  1892 ;; *************** function _strncmp *****************
  1893 ;; Defined at:
  1894 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  1897 ;;		 -> vfpfcnvrt@ct(3), 
  1898 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  1899 ;;		 -> STR_15(3), 
  1900 ;;  n               2    4[COMRAM] unsigned int 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  r               2    9[COMRAM] PTR const unsigned char 
  1903 ;;		 -> STR_15(3), 
  1904 ;;  l               2    7[COMRAM] PTR const unsigned char 
  1905 ;;		 -> vfpfcnvrt@ct(3), 
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  2    0[COMRAM] int 
  1908 ;; Registers used:
  1909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1915 ;;      Params:         6       0       0       0       0       0       0       0       0
  1916 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1917 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1918 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1919 ;;Total ram usage:       11 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; This function calls:
  1922 ;;		Nothing
  1923 ;; This function is called by:
  1924 ;;		_vfpfcnvrt
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text4
  1929  00264A                     __ptext4:
  1930                           	opt callstack 0
  1931  00264A                     _strncmp:
  1932                           	opt callstack 27
  1933                           
  1934                           ;incstack = 0
  1935  00264A  C001  F008         	movff	strncmp@_l,strncmp@l
  1936  00264E  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  1937  002652  C003  F00A         	movff	strncmp@_r,strncmp@r
  1938  002656  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  1939  00265A  0605               	decf	strncmp@n,f,c
  1940  00265C  A0D8               	btfss	status,0,c
  1941  00265E  0606               	decf	strncmp@n+1,f,c
  1942  002660  2805               	incf	strncmp@n,w,c
  1943  002662  E10F               	bnz	l3700
  1944  002664  2806               	incf	strncmp@n+1,w,c
  1945  002666  A4D8               	btfss	status,2,c
  1946  002668  D00C               	goto	l3700
  1947  00266A  0E00               	movlw	0
  1948  00266C  6E02               	movwf	?_strncmp+1,c
  1949  00266E  0E00               	movlw	0
  1950  002670  6E01               	movwf	?_strncmp,c
  1951  002672  0012               	return	
  1952  002674                     l3698:
  1953  002674  4A08               	infsnz	strncmp@l,f,c
  1954  002676  2A09               	incf	strncmp@l+1,f,c
  1955  002678  4A0A               	infsnz	strncmp@r,f,c
  1956  00267A  2A0B               	incf	strncmp@r+1,f,c
  1957  00267C  0605               	decf	strncmp@n,f,c
  1958  00267E  A0D8               	btfss	status,0,c
  1959  002680  0606               	decf	strncmp@n+1,f,c
  1960  002682                     l3700:
  1961  002682  C008  FFD9         	movff	strncmp@l,fsr2l
  1962  002686  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1963  00268A  50DF               	movf	indf2,w,c
  1964  00268C  B4D8               	btfsc	status,2,c
  1965  00268E  D01C               	goto	u4580
  1966  002690  C00A  FFF6         	movff	strncmp@r,tblptrl
  1967  002694  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1968  002698                     	if	0	;tblptru may be non-zero
  1969  002698                     	endif
  1970  002698                     	if	0	;tblptru may be non-zero
  1971  002698                     	endif
  1972  002698  0008               	tblrd		*
  1973  00269A  50F5               	movf	tablat,w,c
  1974  00269C  0900               	iorlw	0
  1975  00269E  B4D8               	btfsc	status,2,c
  1976  0026A0  D013               	goto	u4580
  1977  0026A2  5005               	movf	strncmp@n,w,c
  1978  0026A4  1006               	iorwf	strncmp@n+1,w,c
  1979  0026A6  B4D8               	btfsc	status,2,c
  1980  0026A8  D00F               	goto	u4580
  1981  0026AA  C008  FFD9         	movff	strncmp@l,fsr2l
  1982  0026AE  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1983  0026B2  50DF               	movf	indf2,w,c
  1984  0026B4  6E07               	movwf	??_strncmp& (0+255),c
  1985  0026B6  C00A  FFF6         	movff	strncmp@r,tblptrl
  1986  0026BA  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1987  0026BE                     	if	0	;tblptru may be non-zero
  1988  0026BE                     	endif
  1989  0026BE                     	if	0	;tblptru may be non-zero
  1990  0026BE                     	endif
  1991  0026BE  0008               	tblrd		*
  1992  0026C0  50F5               	movf	tablat,w,c
  1993  0026C2  1807               	xorwf	??_strncmp,w,c
  1994  0026C4  B4D8               	btfsc	status,2,c
  1995  0026C6  D7D6               	goto	l3698
  1996  0026C8                     u4580:
  1997  0026C8  C008  FFD9         	movff	strncmp@l,fsr2l
  1998  0026CC  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1999  0026D0  50DF               	movf	indf2,w,c
  2000  0026D2  6E07               	movwf	??_strncmp& (0+255),c
  2001  0026D4  C00A  FFF6         	movff	strncmp@r,tblptrl
  2002  0026D8  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2003  0026DC                     	if	0	;tblptru may be non-zero
  2004  0026DC                     	endif
  2005  0026DC                     	if	0	;tblptru may be non-zero
  2006  0026DC                     	endif
  2007  0026DC  0008               	tblrd		*
  2008  0026DE  50F5               	movf	tablat,w,c
  2009  0026E0  5C07               	subwf	??_strncmp,w,c
  2010  0026E2  6E01               	movwf	?_strncmp,c
  2011  0026E4  6A02               	clrf	?_strncmp+1,c
  2012  0026E6  A0D8               	btfss	status,0,c
  2013  0026E8  0602               	decf	?_strncmp+1,f,c
  2014  0026EA  0012               	return		;funcret
  2015  0026EC                     __end_of_strncmp:
  2016                           	opt callstack 0
  2017                           
  2018 ;; *************** function _efgtoa *****************
  2019 ;; Defined at:
  2020 ;;		line 319 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
  2023 ;;		 -> sprintf@f(6), 
  2024 ;;  f               4   86[COMRAM] PTR struct _IO_FILE
  2025 ;;  c               1   90[COMRAM] unsigned char 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  u               4   57[BANK0 ] unsigned char 
  2028 ;;  g               4   49[BANK0 ] unsigned char 
  2029 ;;  l               4   43[BANK0 ] unsigned char 
  2030 ;;  h               4   39[BANK0 ] unsigned char 
  2031 ;;  ou              4    5[BANK0 ] unsigned char 
  2032 ;;  n               2   55[BANK0 ] int 
  2033 ;;  e               2   53[BANK0 ] int 
  2034 ;;  i               2   47[BANK0 ] int 
  2035 ;;  w               2   36[BANK0 ] int 
  2036 ;;  p               2   33[BANK0 ] int 
  2037 ;;  sign            2   31[BANK0 ] int 
  2038 ;;  d               2   29[BANK0 ] int 
  2039 ;;  ne              2   27[BANK0 ] int 
  2040 ;;  m               2   25[BANK0 ] int 
  2041 ;;  pp              2   23[BANK0 ] int 
  2042 ;;  t               2   21[BANK0 ] int 
  2043 ;;  mode            1   38[BANK0 ] unsigned char 
  2044 ;;  nmode           1   35[BANK0 ] unsigned char 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  2   84[COMRAM] int 
  2047 ;; Registers used:
  2048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2054 ;;      Params:         7       0       0       0       0       0       0       0       0
  2055 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2056 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2057 ;;      Totals:         7      61       0       0       0       0       0       0       0
  2058 ;;Total ram usage:       68 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; Hardware stack levels required when called:    4
  2061 ;; This function calls:
  2062 ;;		___awdiv
  2063 ;;		___awmod
  2064 ;;		___fladd
  2065 ;;		___fldiv
  2066 ;;		___fleq
  2067 ;;		___flge
  2068 ;;		___flmul
  2069 ;;		___flneg
  2070 ;;		___flsub
  2071 ;;		___fltol
  2072 ;;		___fpclassifyf
  2073 ;;		_floorf
  2074 ;;		_isupper
  2075 ;;		_pad
  2076 ;;		_strcpy
  2077 ;;		_tolower
  2078 ;; This function is called by:
  2079 ;;		_vfpfcnvrt
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           	psect	text5
  2084  000848                     __ptext5:
  2085                           	opt callstack 0
  2086  000848                     _efgtoa:
  2087                           	opt callstack 23
  2088                           
  2089                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
  2090                           
  2091                           ;incstack = 0
  2092  000848  0E00               	movlw	0
  2093  00084A  0100               	movlb	0	; () banked
  2094  00084C  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  2095  00084E  0E00               	movlw	0
  2096  000850  6F7F               	movwf	efgtoa@sign& (0+255),b
  2097                           
  2098                           ; BSR set to: 0
  2099                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 327:     g = f;
  2100  000852  C057  F091         	movff	efgtoa@f,efgtoa@g
  2101  000856  C058  F092         	movff	efgtoa@f+1,efgtoa@g+1
  2102  00085A  C059  F093         	movff	efgtoa@f+2,efgtoa@g+2
  2103  00085E  C05A  F094         	movff	efgtoa@f+3,efgtoa@g+3
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
  2107  000862  AF94               	btfss	(efgtoa@g+3)& (0+255),7,b
  2108  000864  D016               	goto	l3362
  2109                           
  2110                           ; BSR set to: 0
  2111                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
  2112  000866  0E00               	movlw	0
  2113  000868  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  2114  00086A  0E01               	movlw	1
  2115  00086C  6F7F               	movwf	efgtoa@sign& (0+255),b
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  2119  00086E  C091  F001         	movff	efgtoa@g,___flneg@f1
  2120  000872  C092  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2121  000876  C093  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2122  00087A  C094  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2123  00087E  ECD3  F016         	call	___flneg	;wreg free
  2124  000882  C001  F091         	movff	?___flneg,efgtoa@g
  2125  000886  C002  F092         	movff	?___flneg+1,efgtoa@g+1
  2126  00088A  C003  F093         	movff	?___flneg+2,efgtoa@g+2
  2127  00088E  C004  F094         	movff	?___flneg+3,efgtoa@g+3
  2128  000892                     l3362:
  2129                           
  2130                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  2131  000892  0E00               	movlw	0
  2132  000894  0100               	movlb	0	; () banked
  2133  000896  6F98               	movwf	(efgtoa@n+1)& (0+255),b
  2134  000898  0E00               	movlw	0
  2135  00089A  6F97               	movwf	efgtoa@n& (0+255),b
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 335:     w = width;
  2139  00089C  C0D9  F084         	movff	_width,efgtoa@w
  2140  0008A0  C0DA  F085         	movff	_width+1,efgtoa@w+1
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
  2144  0008A4  517F               	movf	efgtoa@sign& (0+255),w,b
  2145  0008A6  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2146  0008A8  A4D8               	btfss	status,2,c
  2147  0008AA  D002               	goto	u3970
  2148                           
  2149                           ; BSR set to: 0
  2150  0008AC  A5DD               	btfss	_flags& (0+255),2,b
  2151  0008AE  D013               	goto	l3382
  2152  0008B0                     u3970:
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
  2156  0008B0  517F               	movf	efgtoa@sign& (0+255),w,b
  2157  0008B2  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2158  0008B4  A4D8               	btfss	status,2,c
  2159  0008B6  D004               	goto	l3374
  2160                           
  2161                           ; BSR set to: 0
  2162  0008B8  0E00               	movlw	0
  2163  0008BA  6F6A               	movwf	(_efgtoa$392+1)& (0+255),b
  2164  0008BC  0E2B               	movlw	43
  2165  0008BE  D003               	goto	L1
  2166  0008C0                     l3374:
  2167                           
  2168                           ; BSR set to: 0
  2169  0008C0  0E00               	movlw	0
  2170  0008C2  6F6A               	movwf	(_efgtoa$392+1)& (0+255),b
  2171  0008C4  0E2D               	movlw	45
  2172  0008C6                     L1:
  2173  0008C6  6F69               	movwf	_efgtoa$392& (0+255),b
  2174                           
  2175                           ; BSR set to: 0
  2176  0008C8  C069  F100         	movff	_efgtoa$392,_dbuf
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 338:         ++n;
  2180  0008CC  4B97               	infsnz	efgtoa@n& (0+255),f,b
  2181  0008CE  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  2182                           
  2183                           ; BSR set to: 0
  2184                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 339:         --w;
  2185  0008D0  0784               	decf	efgtoa@w& (0+255),f,b
  2186  0008D2  A0D8               	btfss	status,0,c
  2187  0008D4  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  2188  0008D6                     l3382:
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2192  0008D6  C091  F001         	movff	efgtoa@g,___fpclassifyf@x
  2193  0008DA  C092  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2194  0008DE  C093  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2195  0008E2  C094  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2196  0008E6  EC62  F012         	call	___fpclassifyf	;wreg free
  2197  0008EA  0401               	decf	?___fpclassifyf,w,c
  2198  0008EC  1002               	iorwf	?___fpclassifyf+1,w,c
  2199  0008EE  A4D8               	btfss	status,2,c
  2200  0008F0  D04C               	goto	l3400
  2201  0008F2  0EBF               	movlw	191
  2202  0008F4  0100               	movlb	0	; () banked
  2203  0008F6  6F60               	movwf	??_efgtoa& (0+255),b
  2204  0008F8  0EFF               	movlw	255
  2205  0008FA  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  2206  0008FC  505B               	movf	efgtoa@c,w,c
  2207  0008FE  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  2208  000900  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  2209  000902  5160               	movf	??_efgtoa& (0+255),w,b
  2210  000904  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  2211  000906  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  2212  000908  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2213  00090A  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  2214  00090C  E106               	bnz	u4000
  2215  00090E  0E1A               	movlw	26
  2216  000910  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  2217  000912  B0D8               	btfsc	status,0,c
  2218  000914  D002               	goto	u4000
  2219  000916  0E01               	movlw	1
  2220  000918  D001               	goto	u4010
  2221  00091A                     u4000:
  2222  00091A  0E00               	movlw	0
  2223  00091C                     u4010:
  2224  00091C  6F6B               	movwf	_efgtoa$393& (0+255),b
  2225  00091E  6B6C               	clrf	(_efgtoa$393+1)& (0+255),b
  2226                           
  2227                           ; BSR set to: 0
  2228  000920  516B               	movf	_efgtoa$393& (0+255),w,b
  2229  000922  116C               	iorwf	(_efgtoa$393+1)& (0+255),w,b
  2230  000924  B4D8               	btfsc	status,2,c
  2231  000926  D00D               	goto	l3392
  2232                           
  2233                           ; BSR set to: 0
  2234                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
  2235  000928  0E00               	movlw	low _dbuf
  2236  00092A  2597               	addwf	efgtoa@n& (0+255),w,b
  2237  00092C  6E01               	movwf	strcpy@dest,c
  2238  00092E  0E01               	movlw	high _dbuf
  2239  000930  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2240  000932  6E02               	movwf	strcpy@dest+1,c
  2241  000934  0E33               	movlw	low STR_5
  2242  000936  6E03               	movwf	strcpy@src,c
  2243  000938  0E08               	movlw	high STR_5
  2244  00093A  6E04               	movwf	strcpy@src+1,c
  2245  00093C  EC99  F015         	call	_strcpy	;wreg free
  2246                           
  2247                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 346:         } else {
  2248  000940  D00C               	goto	l3394
  2249  000942                     l3392:
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
  2253  000942  0E00               	movlw	low _dbuf
  2254  000944  2597               	addwf	efgtoa@n& (0+255),w,b
  2255  000946  6E01               	movwf	strcpy@dest,c
  2256  000948  0E01               	movlw	high _dbuf
  2257  00094A  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2258  00094C  6E02               	movwf	strcpy@dest+1,c
  2259  00094E  0E3B               	movlw	low STR_6
  2260  000950  6E03               	movwf	strcpy@src,c
  2261  000952  0E08               	movlw	high STR_6
  2262  000954  6E04               	movwf	strcpy@src+1,c
  2263  000956  EC99  F015         	call	_strcpy	;wreg free
  2264  00095A                     l3394:
  2265                           
  2266                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  2267  00095A  0100               	movlb	0	; () banked
  2268  00095C  0EFD               	movlw	253
  2269  00095E  2784               	addwf	efgtoa@w& (0+255),f,b
  2270  000960  0EFF               	movlw	255
  2271  000962  2385               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2272  000964                     l3396:
  2273                           
  2274                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
  2275  000964  C055  F011         	movff	efgtoa@fp,pad@fp
  2276  000968  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  2277  00096C  0E00               	movlw	low _dbuf
  2278  00096E  6E13               	movwf	pad@buf,c
  2279  000970  0E01               	movlw	high _dbuf
  2280  000972  6E14               	movwf	pad@buf+1,c
  2281  000974  C084  F015         	movff	efgtoa@w,pad@p
  2282  000978  C085  F016         	movff	efgtoa@w+1,pad@p+1
  2283  00097C  ECC6  F013         	call	_pad	;wreg free
  2284  000980  C011  F055         	movff	?_pad,?_efgtoa
  2285  000984  C012  F056         	movff	?_pad+1,?_efgtoa+1
  2286  000988  0012               	return	
  2287  00098A                     l3400:
  2288                           
  2289                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2290  00098A  C091  F001         	movff	efgtoa@g,___fpclassifyf@x
  2291  00098E  C092  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2292  000992  C093  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2293  000996  C094  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2294  00099A  EC62  F012         	call	___fpclassifyf	;wreg free
  2295  00099E  5001               	movf	?___fpclassifyf,w,c
  2296  0009A0  1002               	iorwf	?___fpclassifyf+1,w,c
  2297  0009A2  A4D8               	btfss	status,2,c
  2298  0009A4  D035               	goto	l3418
  2299  0009A6  0EBF               	movlw	191
  2300  0009A8  0100               	movlb	0	; () banked
  2301  0009AA  6F60               	movwf	??_efgtoa& (0+255),b
  2302  0009AC  0EFF               	movlw	255
  2303  0009AE  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  2304  0009B0  505B               	movf	efgtoa@c,w,c
  2305  0009B2  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  2306  0009B4  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  2307  0009B6  5160               	movf	??_efgtoa& (0+255),w,b
  2308  0009B8  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  2309  0009BA  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  2310  0009BC  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2311  0009BE  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  2312  0009C0  E106               	bnz	u4040
  2313  0009C2  0E1A               	movlw	26
  2314  0009C4  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  2315  0009C6  B0D8               	btfsc	status,0,c
  2316  0009C8  D002               	goto	u4040
  2317  0009CA  0E01               	movlw	1
  2318  0009CC  D001               	goto	u4050
  2319  0009CE                     u4040:
  2320  0009CE  0E00               	movlw	0
  2321  0009D0                     u4050:
  2322  0009D0  6F6D               	movwf	_efgtoa$398& (0+255),b
  2323  0009D2  6B6E               	clrf	(_efgtoa$398+1)& (0+255),b
  2324                           
  2325                           ; BSR set to: 0
  2326  0009D4  516D               	movf	_efgtoa$398& (0+255),w,b
  2327  0009D6  116E               	iorwf	(_efgtoa$398+1)& (0+255),w,b
  2328  0009D8  B4D8               	btfsc	status,2,c
  2329  0009DA  D00D               	goto	l3410
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
  2333  0009DC  0E00               	movlw	low _dbuf
  2334  0009DE  2597               	addwf	efgtoa@n& (0+255),w,b
  2335  0009E0  6E01               	movwf	strcpy@dest,c
  2336  0009E2  0E01               	movlw	high _dbuf
  2337  0009E4  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2338  0009E6  6E02               	movwf	strcpy@dest+1,c
  2339  0009E8  0E37               	movlw	low STR_9
  2340  0009EA  6E03               	movwf	strcpy@src,c
  2341  0009EC  0E08               	movlw	high STR_9
  2342  0009EE  6E04               	movwf	strcpy@src+1,c
  2343  0009F0  EC99  F015         	call	_strcpy	;wreg free
  2344                           
  2345                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 355:         } else {
  2346  0009F4  D7B2               	goto	l3394
  2347  0009F6                     l3410:
  2348                           
  2349                           ; BSR set to: 0
  2350                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
  2351  0009F6  0E00               	movlw	low _dbuf
  2352  0009F8  2597               	addwf	efgtoa@n& (0+255),w,b
  2353  0009FA  6E01               	movwf	strcpy@dest,c
  2354  0009FC  0E01               	movlw	high _dbuf
  2355  0009FE  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2356  000A00  6E02               	movwf	strcpy@dest+1,c
  2357  000A02  0E3F               	movlw	low STR_10
  2358  000A04  6E03               	movwf	strcpy@src,c
  2359  000A06  0E08               	movlw	high STR_10
  2360  000A08  6E04               	movwf	strcpy@src+1,c
  2361  000A0A  EC99  F015         	call	_strcpy	;wreg free
  2362  000A0E  D7A5               	goto	l3394
  2363  000A10                     l3418:
  2364                           
  2365                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  2366  000A10  0E00               	movlw	0
  2367  000A12  0100               	movlb	0	; () banked
  2368  000A14  6F99               	movwf	efgtoa@u& (0+255),b
  2369  000A16  0E00               	movlw	0
  2370  000A18  6F9A               	movwf	(efgtoa@u+1)& (0+255),b
  2371  000A1A  0E80               	movlw	128
  2372  000A1C  6F9B               	movwf	(efgtoa@u+2)& (0+255),b
  2373  000A1E  0E3F               	movlw	63
  2374  000A20  6F9C               	movwf	(efgtoa@u+3)& (0+255),b
  2375                           
  2376                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  2377  000A22  0E00               	movlw	0
  2378  000A24  6F96               	movwf	(efgtoa@e+1)& (0+255),b
  2379  000A26  0E00               	movlw	0
  2380  000A28  6F95               	movwf	efgtoa@e& (0+255),b
  2381                           
  2382                           ; BSR set to: 0
  2383                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
  2384  000A2A  C091  F001         	movff	efgtoa@g,___fleq@ff1
  2385  000A2E  C092  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2386  000A32  C093  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2387  000A36  C094  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2388  000A3A  0E00               	movlw	0
  2389  000A3C  6E05               	movwf	___fleq@ff2,c
  2390  000A3E  0E00               	movlw	0
  2391  000A40  6E06               	movwf	___fleq@ff2+1,c
  2392  000A42  0E00               	movlw	0
  2393  000A44  6E07               	movwf	___fleq@ff2+2,c
  2394  000A46  0E00               	movlw	0
  2395  000A48  6E08               	movwf	___fleq@ff2+3,c
  2396  000A4A  EC13  F014         	call	___fleq	;wreg free
  2397  000A4E  A0D8               	btfss	status,0,c
  2398  000A50  D01E               	goto	l3428
  2399  000A52  D076               	goto	u4090
  2400  000A54                     l3424:
  2401                           
  2402                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
  2403  000A54  C099  F00F         	movff	efgtoa@u,___flmul@b
  2404  000A58  C09A  F010         	movff	efgtoa@u+1,___flmul@b+1
  2405  000A5C  C09B  F011         	movff	efgtoa@u+2,___flmul@b+2
  2406  000A60  C09C  F012         	movff	efgtoa@u+3,___flmul@b+3
  2407  000A64  0E00               	movlw	0
  2408  000A66  6E13               	movwf	___flmul@a,c
  2409  000A68  0E00               	movlw	0
  2410  000A6A  6E14               	movwf	___flmul@a+1,c
  2411  000A6C  0E20               	movlw	32
  2412  000A6E  6E15               	movwf	___flmul@a+2,c
  2413  000A70  0E41               	movlw	65
  2414  000A72  6E16               	movwf	___flmul@a+3,c
  2415  000A74  ECBB  F00A         	call	___flmul	;wreg free
  2416  000A78  C00F  F099         	movff	?___flmul,efgtoa@u
  2417  000A7C  C010  F09A         	movff	?___flmul+1,efgtoa@u+1
  2418  000A80  C011  F09B         	movff	?___flmul+2,efgtoa@u+2
  2419  000A84  C012  F09C         	movff	?___flmul+3,efgtoa@u+3
  2420                           
  2421                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 368:             ++e;
  2422  000A88  0100               	movlb	0	; () banked
  2423  000A8A  4B95               	infsnz	efgtoa@e& (0+255),f,b
  2424  000A8C  2B96               	incf	(efgtoa@e+1)& (0+255),f,b
  2425  000A8E                     l3428:
  2426                           
  2427                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
  2428  000A8E  C091  F028         	movff	efgtoa@g,___flge@ff1
  2429  000A92  C092  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2430  000A96  C093  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2431  000A9A  C094  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2432  000A9E  0E00               	movlw	0
  2433  000AA0  6E13               	movwf	___flmul@a,c
  2434  000AA2  0E00               	movlw	0
  2435  000AA4  6E14               	movwf	___flmul@a+1,c
  2436  000AA6  0E20               	movlw	32
  2437  000AA8  6E15               	movwf	___flmul@a+2,c
  2438  000AAA  0E41               	movlw	65
  2439  000AAC  6E16               	movwf	___flmul@a+3,c
  2440  000AAE  C099  F00F         	movff	efgtoa@u,___flmul@b
  2441  000AB2  C09A  F010         	movff	efgtoa@u+1,___flmul@b+1
  2442  000AB6  C09B  F011         	movff	efgtoa@u+2,___flmul@b+2
  2443  000ABA  C09C  F012         	movff	efgtoa@u+3,___flmul@b+3
  2444  000ABE  ECBB  F00A         	call	___flmul	;wreg free
  2445  000AC2  C00F  F02C         	movff	?___flmul,___flge@ff2
  2446  000AC6  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  2447  000ACA  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  2448  000ACE  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  2449  000AD2  ECFA  F011         	call	___flge	;wreg free
  2450  000AD6  A0D8               	btfss	status,0,c
  2451  000AD8  D01F               	goto	l3434
  2452  000ADA  D7BC               	goto	l3424
  2453  000ADC                     l3430:
  2454                           
  2455                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
  2456  000ADC  C099  F028         	movff	efgtoa@u,___fldiv@b
  2457  000AE0  C09A  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2458  000AE4  C09B  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2459  000AE8  C09C  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2460  000AEC  0E00               	movlw	0
  2461  000AEE  6E2C               	movwf	___fldiv@a,c
  2462  000AF0  0E00               	movlw	0
  2463  000AF2  6E2D               	movwf	___fldiv@a+1,c
  2464  000AF4  0E20               	movlw	32
  2465  000AF6  6E2E               	movwf	___fldiv@a+2,c
  2466  000AF8  0E41               	movlw	65
  2467  000AFA  6E2F               	movwf	___fldiv@a+3,c
  2468  000AFC  ECEA  F00D         	call	___fldiv	;wreg free
  2469  000B00  C028  F099         	movff	?___fldiv,efgtoa@u
  2470  000B04  C029  F09A         	movff	?___fldiv+1,efgtoa@u+1
  2471  000B08  C02A  F09B         	movff	?___fldiv+2,efgtoa@u+2
  2472  000B0C  C02B  F09C         	movff	?___fldiv+3,efgtoa@u+3
  2473                           
  2474                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 372:             --e;
  2475  000B10  0100               	movlb	0	; () banked
  2476  000B12  0795               	decf	efgtoa@e& (0+255),f,b
  2477  000B14  A0D8               	btfss	status,0,c
  2478  000B16  0796               	decf	(efgtoa@e+1)& (0+255),f,b
  2479  000B18                     l3434:
  2480                           
  2481                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
  2482  000B18  C091  F028         	movff	efgtoa@g,___flge@ff1
  2483  000B1C  C092  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2484  000B20  C093  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2485  000B24  C094  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2486  000B28  C099  F02C         	movff	efgtoa@u,___flge@ff2
  2487  000B2C  C09A  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2488  000B30  C09B  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2489  000B34  C09C  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2490  000B38  ECFA  F011         	call	___flge	;wreg free
  2491  000B3C  A0D8               	btfss	status,0,c
  2492  000B3E  D7CE               	goto	l3430
  2493  000B40                     u4090:
  2494                           
  2495                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
  2496  000B40  C05B  F007         	movff	efgtoa@c,tolower@c
  2497  000B44  6A08               	clrf	tolower@c+1,c
  2498  000B46  ECEA  F015         	call	_tolower	;wreg free
  2499  000B4A  5007               	movf	?_tolower,w,c
  2500  000B4C  0100               	movlb	0	; () banked
  2501  000B4E  6F86               	movwf	efgtoa@mode& (0+255),b
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
  2505  000B50  C086  F083         	movff	efgtoa@mode,efgtoa@nmode
  2506                           
  2507                           ; BSR set to: 0
  2508                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
  2509  000B54  0E67               	movlw	103
  2510  000B56  1986               	xorwf	efgtoa@mode& (0+255),w,b
  2511  000B58  A4D8               	btfss	status,2,c
  2512  000B5A  D019               	goto	l3450
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
  2516  000B5C  51DB               	movf	_prec& (0+255),w,b
  2517  000B5E  11DC               	iorwf	(_prec+1)& (0+255),w,b
  2518  000B60  A4D8               	btfss	status,2,c
  2519  000B62  D004               	goto	l3446
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
  2523  000B64  0E00               	movlw	0
  2524  000B66  6FDC               	movwf	(_prec+1)& (0+255),b
  2525  000B68  0E01               	movlw	1
  2526  000B6A  6FDB               	movwf	_prec& (0+255),b
  2527  000B6C                     l3446:
  2528                           
  2529                           ; BSR set to: 0
  2530                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
  2531  000B6C  BFDC               	btfsc	(_prec+1)& (0+255),7,b
  2532  000B6E  D005               	goto	u4120
  2533  000B70  51DC               	movf	(_prec+1)& (0+255),w,b
  2534  000B72  E108               	bnz	l171
  2535  000B74  05DB               	decf	_prec& (0+255),w,b
  2536  000B76  B0D8               	btfsc	status,0,c
  2537  000B78  D005               	goto	l171
  2538  000B7A                     u4120:
  2539                           
  2540                           ; BSR set to: 0
  2541  000B7A  0E00               	movlw	0
  2542  000B7C  6F82               	movwf	(efgtoa@p+1)& (0+255),b
  2543  000B7E  0E06               	movlw	6
  2544  000B80  6F81               	movwf	efgtoa@p& (0+255),b
  2545  000B82  D008               	goto	l3456
  2546  000B84                     l171:
  2547                           
  2548                           ; BSR set to: 0
  2549  000B84  C0DB  F081         	movff	_prec,efgtoa@p
  2550  000B88  C0DC  F082         	movff	_prec+1,efgtoa@p+1
  2551  000B8C  D003               	goto	l3456
  2552  000B8E                     l3450:
  2553                           
  2554                           ; BSR set to: 0
  2555                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
  2556  000B8E  AFDC               	btfss	(_prec+1)& (0+255),7,b
  2557  000B90  D7F9               	goto	l171
  2558  000B92  D7F3               	goto	u4120
  2559  000B94                     l3456:
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
  2563  000B94  0E67               	movlw	103
  2564  000B96  1986               	xorwf	efgtoa@mode& (0+255),w,b
  2565  000B98  A4D8               	btfss	status,2,c
  2566  000B9A  D022               	goto	l3466
  2567                           
  2568                           ; BSR set to: 0
  2569                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  2570  000B9C  AF96               	btfss	(efgtoa@e+1)& (0+255),7,b
  2571  000B9E  D006               	goto	u4150
  2572  000BA0  0EFC               	movlw	252
  2573  000BA2  5D95               	subwf	efgtoa@e& (0+255),w,b
  2574  000BA4  0EFF               	movlw	255
  2575  000BA6  5996               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2576  000BA8  A0D8               	btfss	status,0,c
  2577  000BAA  D018               	goto	l3464
  2578  000BAC                     u4150:
  2579                           
  2580                           ; BSR set to: 0
  2581  000BAC  0EFF               	movlw	255
  2582  000BAE  6F60               	movwf	??_efgtoa& (0+255),b
  2583  000BB0  0EFF               	movlw	255
  2584  000BB2  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  2585  000BB4  C081  F062         	movff	efgtoa@p,??_efgtoa+2
  2586  000BB8  C082  F063         	movff	efgtoa@p+1,??_efgtoa+3
  2587  000BBC  5160               	movf	??_efgtoa& (0+255),w,b
  2588  000BBE  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  2589  000BC0  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  2590  000BC2  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2591  000BC4  5195               	movf	efgtoa@e& (0+255),w,b
  2592  000BC6  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  2593  000BC8  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  2594  000BCA  0A80               	xorlw	128
  2595  000BCC  6F64               	movwf	(??_efgtoa+4)& (0+255),b
  2596  000BCE  5196               	movf	(efgtoa@e+1)& (0+255),w,b
  2597  000BD0  0A80               	xorlw	128
  2598  000BD2  5964               	subwfb	(??_efgtoa+4)& (0+255),w,b
  2599  000BD4  A0D8               	btfss	status,0,c
  2600  000BD6  D002               	goto	l3464
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
  2604  000BD8  0E66               	movlw	102
  2605  000BDA  D001               	goto	L2
  2606  000BDC                     l3464:
  2607                           
  2608                           ; BSR set to: 0
  2609                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
  2610  000BDC  0E65               	movlw	101
  2611  000BDE                     L2:
  2612  000BDE  6F83               	movwf	efgtoa@nmode& (0+255),b
  2613  000BE0                     l3466:
  2614                           
  2615                           ; BSR set to: 0
  2616                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 398:     m = p;
  2617  000BE0  C081  F079         	movff	efgtoa@p,efgtoa@m
  2618  000BE4  C082  F07A         	movff	efgtoa@p+1,efgtoa@m+1
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  2622  000BE8  0E67               	movlw	103
  2623  000BEA  1986               	xorwf	efgtoa@mode& (0+255),w,b
  2624  000BEC  A4D8               	btfss	status,2,c
  2625  000BEE  D005               	goto	u4190
  2626                           
  2627                           ; BSR set to: 0
  2628  000BF0  0E66               	movlw	102
  2629  000BF2  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  2630  000BF4  B4D8               	btfsc	status,2,c
  2631                           
  2632                           ; BSR set to: 0
  2633  000BF6  AF96               	btfss	(efgtoa@e+1)& (0+255),7,b
  2634  000BF8  D002               	goto	l3476
  2635  000BFA                     u4190:
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 400:         ++m;
  2639  000BFA  4B79               	infsnz	efgtoa@m& (0+255),f,b
  2640  000BFC  2B7A               	incf	(efgtoa@m+1)& (0+255),f,b
  2641  000BFE                     l3476:
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
  2645  000BFE  0E66               	movlw	102
  2646  000C00  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  2647  000C02  A4D8               	btfss	status,2,c
  2648  000C04  D016               	goto	l3486
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
  2652  000C06  AF96               	btfss	(efgtoa@e+1)& (0+255),7,b
  2653  000C08  D00C               	goto	l3482
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
  2657  000C0A  0E00               	movlw	0
  2658  000C0C  6F99               	movwf	efgtoa@u& (0+255),b
  2659  000C0E  0E00               	movlw	0
  2660  000C10  6F9A               	movwf	(efgtoa@u+1)& (0+255),b
  2661  000C12  0E80               	movlw	128
  2662  000C14  6F9B               	movwf	(efgtoa@u+2)& (0+255),b
  2663  000C16  0E3F               	movlw	63
  2664  000C18  6F9C               	movwf	(efgtoa@u+3)& (0+255),b
  2665                           
  2666                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 407:             e = 0;
  2667  000C1A  0E00               	movlw	0
  2668  000C1C  6F96               	movwf	(efgtoa@e+1)& (0+255),b
  2669  000C1E  0E00               	movlw	0
  2670  000C20  6F95               	movwf	efgtoa@e& (0+255),b
  2671  000C22                     l3482:
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
  2675  000C22  0E67               	movlw	103
  2676  000C24  1986               	xorwf	efgtoa@mode& (0+255),w,b
  2677  000C26  B4D8               	btfsc	status,2,c
  2678  000C28  D004               	goto	l3486
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 410:             m += e;
  2682  000C2A  5195               	movf	efgtoa@e& (0+255),w,b
  2683  000C2C  2779               	addwf	efgtoa@m& (0+255),f,b
  2684  000C2E  5196               	movf	(efgtoa@e+1)& (0+255),w,b
  2685  000C30  237A               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2686  000C32                     l3486:
  2687                           
  2688                           ; BSR set to: 0
  2689                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 415:     i = 0;
  2690  000C32  0E00               	movlw	0
  2691  000C34  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  2692  000C36  0E00               	movlw	0
  2693  000C38  6F8F               	movwf	efgtoa@i& (0+255),b
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 416:     h = g;
  2697  000C3A  C091  F087         	movff	efgtoa@g,efgtoa@h
  2698  000C3E  C092  F088         	movff	efgtoa@g+1,efgtoa@h+1
  2699  000C42  C093  F089         	movff	efgtoa@g+2,efgtoa@h+2
  2700  000C46  C094  F08A         	movff	efgtoa@g+3,efgtoa@h+3
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 417:     ou = u;
  2704  000C4A  C099  F065         	movff	efgtoa@u,efgtoa@ou
  2705  000C4E  C09A  F066         	movff	efgtoa@u+1,efgtoa@ou+1
  2706  000C52  C09B  F067         	movff	efgtoa@u+2,efgtoa@ou+2
  2707  000C56  C09C  F068         	movff	efgtoa@u+3,efgtoa@ou+3
  2708                           
  2709                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  2710  000C5A  D07B               	goto	l3500
  2711  000C5C                     l3492:
  2712                           
  2713                           ; BSR set to: 0
  2714                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
  2715  000C5C  C087  F028         	movff	efgtoa@h,___fldiv@b
  2716  000C60  C088  F029         	movff	efgtoa@h+1,___fldiv@b+1
  2717  000C64  C089  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  2718  000C68  C08A  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  2719  000C6C  C099  F02C         	movff	efgtoa@u,___fldiv@a
  2720  000C70  C09A  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  2721  000C74  C09B  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  2722  000C78  C09C  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  2723  000C7C  ECEA  F00D         	call	___fldiv	;wreg free
  2724  000C80  C028  F041         	movff	?___fldiv,floorf@x
  2725  000C84  C029  F042         	movff	?___fldiv+1,floorf@x+1
  2726  000C88  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  2727  000C8C  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  2728  000C90  EC2E  F00F         	call	_floorf	;wreg free
  2729  000C94  C041  F08B         	movff	?_floorf,efgtoa@l
  2730  000C98  C042  F08C         	movff	?_floorf+1,efgtoa@l+1
  2731  000C9C  C043  F08D         	movff	?_floorf+2,efgtoa@l+2
  2732  000CA0  C044  F08E         	movff	?_floorf+3,efgtoa@l+3
  2733                           
  2734                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
  2735  000CA4  C08B  F001         	movff	efgtoa@l,___fltol@f1
  2736  000CA8  C08C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2737  000CAC  C08D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2738  000CB0  C08E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2739  000CB4  ECC8  F012         	call	___fltol	;wreg free
  2740  000CB8  C001  F07D         	movff	?___fltol,efgtoa@d
  2741  000CBC  C002  F07E         	movff	?___fltol+1,efgtoa@d+1
  2742                           
  2743                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
  2744  000CC0  C087  F028         	movff	efgtoa@h,___flsub@b
  2745  000CC4  C088  F029         	movff	efgtoa@h+1,___flsub@b+1
  2746  000CC8  C089  F02A         	movff	efgtoa@h+2,___flsub@b+2
  2747  000CCC  C08A  F02B         	movff	efgtoa@h+3,___flsub@b+3
  2748  000CD0  C099  F013         	movff	efgtoa@u,___flmul@a
  2749  000CD4  C09A  F014         	movff	efgtoa@u+1,___flmul@a+1
  2750  000CD8  C09B  F015         	movff	efgtoa@u+2,___flmul@a+2
  2751  000CDC  C09C  F016         	movff	efgtoa@u+3,___flmul@a+3
  2752  000CE0  C08B  F00F         	movff	efgtoa@l,___flmul@b
  2753  000CE4  C08C  F010         	movff	efgtoa@l+1,___flmul@b+1
  2754  000CE8  C08D  F011         	movff	efgtoa@l+2,___flmul@b+2
  2755  000CEC  C08E  F012         	movff	efgtoa@l+3,___flmul@b+3
  2756  000CF0  ECBB  F00A         	call	___flmul	;wreg free
  2757  000CF4  C00F  F02C         	movff	?___flmul,___flsub@a
  2758  000CF8  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2759  000CFC  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2760  000D00  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2761  000D04  EC10  F016         	call	___flsub	;wreg free
  2762  000D08  C028  F087         	movff	?___flsub,efgtoa@h
  2763  000D0C  C029  F088         	movff	?___flsub+1,efgtoa@h+1
  2764  000D10  C02A  F089         	movff	?___flsub+2,efgtoa@h+2
  2765  000D14  C02B  F08A         	movff	?___flsub+3,efgtoa@h+3
  2766                           
  2767                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
  2768  000D18  C099  F028         	movff	efgtoa@u,___fldiv@b
  2769  000D1C  C09A  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2770  000D20  C09B  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2771  000D24  C09C  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2772  000D28  0E00               	movlw	0
  2773  000D2A  6E2C               	movwf	___fldiv@a,c
  2774  000D2C  0E00               	movlw	0
  2775  000D2E  6E2D               	movwf	___fldiv@a+1,c
  2776  000D30  0E20               	movlw	32
  2777  000D32  6E2E               	movwf	___fldiv@a+2,c
  2778  000D34  0E41               	movlw	65
  2779  000D36  6E2F               	movwf	___fldiv@a+3,c
  2780  000D38  ECEA  F00D         	call	___fldiv	;wreg free
  2781  000D3C  C028  F099         	movff	?___fldiv,efgtoa@u
  2782  000D40  C029  F09A         	movff	?___fldiv+1,efgtoa@u+1
  2783  000D44  C02A  F09B         	movff	?___fldiv+2,efgtoa@u+2
  2784  000D48  C02B  F09C         	movff	?___fldiv+3,efgtoa@u+3
  2785                           
  2786                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 423:         ++i;
  2787  000D4C  0100               	movlb	0	; () banked
  2788  000D4E  4B8F               	infsnz	efgtoa@i& (0+255),f,b
  2789  000D50  2B90               	incf	(efgtoa@i+1)& (0+255),f,b
  2790  000D52                     l3500:
  2791                           
  2792                           ; BSR set to: 0
  2793                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  2794  000D52  5179               	movf	efgtoa@m& (0+255),w,b
  2795  000D54  5D8F               	subwf	efgtoa@i& (0+255),w,b
  2796  000D56  5190               	movf	(efgtoa@i+1)& (0+255),w,b
  2797  000D58  0A80               	xorlw	128
  2798  000D5A  6F60               	movwf	??_efgtoa& (0+255),b
  2799  000D5C  517A               	movf	(efgtoa@m+1)& (0+255),w,b
  2800  000D5E  0A80               	xorlw	128
  2801  000D60  5960               	subwfb	??_efgtoa& (0+255),w,b
  2802  000D62  A0D8               	btfss	status,0,c
  2803  000D64  D77B               	goto	l3492
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
  2807  000D66  C099  F00F         	movff	efgtoa@u,___flmul@b
  2808  000D6A  C09A  F010         	movff	efgtoa@u+1,___flmul@b+1
  2809  000D6E  C09B  F011         	movff	efgtoa@u+2,___flmul@b+2
  2810  000D72  C09C  F012         	movff	efgtoa@u+3,___flmul@b+3
  2811  000D76  0E00               	movlw	0
  2812  000D78  6E13               	movwf	___flmul@a,c
  2813  000D7A  0E00               	movlw	0
  2814  000D7C  6E14               	movwf	___flmul@a+1,c
  2815  000D7E  0EA0               	movlw	160
  2816  000D80  6E15               	movwf	___flmul@a+2,c
  2817  000D82  0E40               	movlw	64
  2818  000D84  6E16               	movwf	___flmul@a+3,c
  2819  000D86  ECBB  F00A         	call	___flmul	;wreg free
  2820  000D8A  C00F  F08B         	movff	?___flmul,efgtoa@l
  2821  000D8E  C010  F08C         	movff	?___flmul+1,efgtoa@l+1
  2822  000D92  C011  F08D         	movff	?___flmul+2,efgtoa@l+2
  2823  000D96  C012  F08E         	movff	?___flmul+3,efgtoa@l+3
  2824                           
  2825                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
  2826  000D9A  C087  F028         	movff	efgtoa@h,___flge@ff1
  2827  000D9E  C088  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2828  000DA2  C089  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2829  000DA6  C08A  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2830  000DAA  C08B  F02C         	movff	efgtoa@l,___flge@ff2
  2831  000DAE  C08C  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  2832  000DB2  C08D  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  2833  000DB6  C08E  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  2834  000DBA  ECFA  F011         	call	___flge	;wreg free
  2835  000DBE  B0D8               	btfsc	status,0,c
  2836  000DC0  D003               	goto	l3508
  2837                           
  2838                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
  2839  000DC2  0E00               	movlw	0
  2840  000DC4  0100               	movlb	0	; () banked
  2841  000DC6  D018               	goto	L3
  2842  000DC8                     l3508:
  2843                           
  2844                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
  2845  000DC8  C087  F001         	movff	efgtoa@h,___fleq@ff1
  2846  000DCC  C088  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2847  000DD0  C089  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2848  000DD4  C08A  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2849  000DD8  C08B  F005         	movff	efgtoa@l,___fleq@ff2
  2850  000DDC  C08C  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2851  000DE0  C08D  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2852  000DE4  C08E  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2853  000DE8  EC13  F014         	call	___fleq	;wreg free
  2854  000DEC  A0D8               	btfss	status,0,c
  2855  000DEE  D00B               	goto	l3514
  2856  000DF0  0100               	movlb	0	; () banked
  2857  000DF2  B17D               	btfsc	efgtoa@d& (0+255),0,b
  2858  000DF4  D008               	goto	l3514
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
  2862  000DF6  0E00               	movlw	0
  2863  000DF8                     L3:
  2864  000DF8  6F8B               	movwf	efgtoa@l& (0+255),b
  2865  000DFA  0E00               	movlw	0
  2866  000DFC  6F8C               	movwf	(efgtoa@l+1)& (0+255),b
  2867  000DFE  0E00               	movlw	0
  2868  000E00  6F8D               	movwf	(efgtoa@l+2)& (0+255),b
  2869  000E02  0E00               	movlw	0
  2870  000E04  6F8E               	movwf	(efgtoa@l+3)& (0+255),b
  2871  000E06                     l3514:
  2872                           
  2873                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
  2874  000E06  C091  F001         	movff	efgtoa@g,___fladd@b
  2875  000E0A  C092  F002         	movff	efgtoa@g+1,___fladd@b+1
  2876  000E0E  C093  F003         	movff	efgtoa@g+2,___fladd@b+2
  2877  000E12  C094  F004         	movff	efgtoa@g+3,___fladd@b+3
  2878  000E16  C08B  F005         	movff	efgtoa@l,___fladd@a
  2879  000E1A  C08C  F006         	movff	efgtoa@l+1,___fladd@a+1
  2880  000E1E  C08D  F007         	movff	efgtoa@l+2,___fladd@a+2
  2881  000E22  C08E  F008         	movff	efgtoa@l+3,___fladd@a+3
  2882  000E26  EC64  F00C         	call	___fladd	;wreg free
  2883  000E2A  C001  F087         	movff	?___fladd,efgtoa@h
  2884  000E2E  C002  F088         	movff	?___fladd+1,efgtoa@h+1
  2885  000E32  C003  F089         	movff	?___fladd+2,efgtoa@h+2
  2886  000E36  C004  F08A         	movff	?___fladd+3,efgtoa@h+3
  2887                           
  2888                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 441:     u = ou;
  2889  000E3A  C065  F099         	movff	efgtoa@ou,efgtoa@u
  2890  000E3E  C066  F09A         	movff	efgtoa@ou+1,efgtoa@u+1
  2891  000E42  C067  F09B         	movff	efgtoa@ou+2,efgtoa@u+2
  2892  000E46  C068  F09C         	movff	efgtoa@ou+3,efgtoa@u+3
  2893                           
  2894                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  2895  000E4A  0E65               	movlw	101
  2896  000E4C  0100               	movlb	0	; () banked
  2897  000E4E  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  2898  000E50  B4D8               	btfsc	status,2,c
  2899  000E52  D005               	goto	l3522
  2900                           
  2901                           ; BSR set to: 0
  2902  000E54  C095  F07B         	movff	efgtoa@e,efgtoa@ne
  2903  000E58  C096  F07C         	movff	efgtoa@e+1,efgtoa@ne+1
  2904  000E5C  D004               	goto	l197
  2905  000E5E                     l3522:
  2906                           
  2907                           ; BSR set to: 0
  2908  000E5E  0E00               	movlw	0
  2909  000E60  6F7C               	movwf	(efgtoa@ne+1)& (0+255),b
  2910  000E62  0E00               	movlw	0
  2911  000E64  6F7B               	movwf	efgtoa@ne& (0+255),b
  2912  000E66                     l197:
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
  2916  000E66  0E00               	movlw	0
  2917  000E68  6F78               	movwf	(efgtoa@pp+1)& (0+255),b
  2918  000E6A  0E00               	movlw	0
  2919  000E6C  6F77               	movwf	efgtoa@pp& (0+255),b
  2920                           
  2921                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 444:     t = 0;
  2922  000E6E  0E00               	movlw	0
  2923  000E70  6F76               	movwf	(efgtoa@t+1)& (0+255),b
  2924  000E72  0E00               	movlw	0
  2925  000E74  6F75               	movwf	efgtoa@t& (0+255),b
  2926                           
  2927                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 445:     i = 0;
  2928  000E76  0E00               	movlw	0
  2929  000E78  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  2930  000E7A  0E00               	movlw	0
  2931  000E7C  6F8F               	movwf	efgtoa@i& (0+255),b
  2932                           
  2933                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  2934  000E7E  D0C6               	goto	l3572
  2935  000E80                     l3524:
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
  2939  000E80  C087  F028         	movff	efgtoa@h,___fldiv@b
  2940  000E84  C088  F029         	movff	efgtoa@h+1,___fldiv@b+1
  2941  000E88  C089  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  2942  000E8C  C08A  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  2943  000E90  C099  F02C         	movff	efgtoa@u,___fldiv@a
  2944  000E94  C09A  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  2945  000E98  C09B  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  2946  000E9C  C09C  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  2947  000EA0  ECEA  F00D         	call	___fldiv	;wreg free
  2948  000EA4  C028  F041         	movff	?___fldiv,floorf@x
  2949  000EA8  C029  F042         	movff	?___fldiv+1,floorf@x+1
  2950  000EAC  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  2951  000EB0  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  2952  000EB4  EC2E  F00F         	call	_floorf	;wreg free
  2953  000EB8  C041  F08B         	movff	?_floorf,efgtoa@l
  2954  000EBC  C042  F08C         	movff	?_floorf+1,efgtoa@l+1
  2955  000EC0  C043  F08D         	movff	?_floorf+2,efgtoa@l+2
  2956  000EC4  C044  F08E         	movff	?_floorf+3,efgtoa@l+3
  2957                           
  2958                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
  2959  000EC8  C08B  F001         	movff	efgtoa@l,___fltol@f1
  2960  000ECC  C08C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2961  000ED0  C08D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2962  000ED4  C08E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2963  000ED8  ECC8  F012         	call	___fltol	;wreg free
  2964  000EDC  C001  F07D         	movff	?___fltol,efgtoa@d
  2965  000EE0  C002  F07E         	movff	?___fltol+1,efgtoa@d+1
  2966                           
  2967                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  2968  000EE4  0100               	movlb	0	; () banked
  2969  000EE6  B9DD               	btfsc	_flags& (0+255),4,b
  2970  000EE8  D00C               	goto	l3536
  2971                           
  2972                           ; BSR set to: 0
  2973  000EEA  517D               	movf	efgtoa@d& (0+255),w,b
  2974  000EEC  117E               	iorwf	(efgtoa@d+1)& (0+255),w,b
  2975  000EEE  A4D8               	btfss	status,2,c
  2976  000EF0  D008               	goto	l3536
  2977                           
  2978                           ; BSR set to: 0
  2979  000EF2  0E67               	movlw	103
  2980  000EF4  1986               	xorwf	efgtoa@mode& (0+255),w,b
  2981  000EF6  B4D8               	btfsc	status,2,c
  2982                           
  2983                           ; BSR set to: 0
  2984  000EF8  AF7C               	btfss	(efgtoa@ne+1)& (0+255),7,b
  2985  000EFA  D003               	goto	l3536
  2986                           
  2987                           ; BSR set to: 0
  2988                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 450:             ++t;
  2989  000EFC  4B75               	infsnz	efgtoa@t& (0+255),f,b
  2990  000EFE  2B76               	incf	(efgtoa@t+1)& (0+255),f,b
  2991                           
  2992                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 451:         } else {
  2993  000F00  D039               	goto	l3564
  2994  000F02                     l3536:
  2995                           
  2996                           ; BSR set to: 0
  2997                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
  2998  000F02  5177               	movf	efgtoa@pp& (0+255),w,b
  2999  000F04  1178               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3000  000F06  B4D8               	btfsc	status,2,c
  3001                           
  3002                           ; BSR set to: 0
  3003  000F08  AF7C               	btfss	(efgtoa@ne+1)& (0+255),7,b
  3004  000F0A  D022               	goto	l3556
  3005                           
  3006                           ; BSR set to: 0
  3007                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
  3008  000F0C  0E00               	movlw	low _dbuf
  3009  000F0E  2597               	addwf	efgtoa@n& (0+255),w,b
  3010  000F10  6ED9               	movwf	fsr2l,c
  3011  000F12  0E01               	movlw	high _dbuf
  3012  000F14  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3013  000F16  6EDA               	movwf	fsr2h,c
  3014  000F18  0E2E               	movlw	46
  3015  000F1A  6EDF               	movwf	indf2,c
  3016                           
  3017                           ; BSR set to: 0
  3018  000F1C  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3019  000F1E  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 454:                 --w;
  3023  000F20  0784               	decf	efgtoa@w& (0+255),f,b
  3024  000F22  A0D8               	btfss	status,0,c
  3025  000F24  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3026                           
  3027                           ; BSR set to: 0
  3028                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
  3029  000F26  0E00               	movlw	0
  3030  000F28  6F78               	movwf	(efgtoa@pp+1)& (0+255),b
  3031  000F2A  0E01               	movlw	1
  3032  000F2C  6F77               	movwf	efgtoa@pp& (0+255),b
  3033  000F2E  D010               	goto	l3556
  3034  000F30                     l3548:
  3035                           
  3036                           ; BSR set to: 0
  3037                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
  3038  000F30  0E00               	movlw	low _dbuf
  3039  000F32  2597               	addwf	efgtoa@n& (0+255),w,b
  3040  000F34  6ED9               	movwf	fsr2l,c
  3041  000F36  0E01               	movlw	high _dbuf
  3042  000F38  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3043  000F3A  6EDA               	movwf	fsr2h,c
  3044  000F3C  0E30               	movlw	48
  3045  000F3E  6EDF               	movwf	indf2,c
  3046                           
  3047                           ; BSR set to: 0
  3048  000F40  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3049  000F42  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 459:                 --w;
  3053  000F44  0784               	decf	efgtoa@w& (0+255),f,b
  3054  000F46  A0D8               	btfss	status,0,c
  3055  000F48  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3056                           
  3057                           ; BSR set to: 0
  3058                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 460:                 --t;
  3059  000F4A  0775               	decf	efgtoa@t& (0+255),f,b
  3060  000F4C  A0D8               	btfss	status,0,c
  3061  000F4E  0776               	decf	(efgtoa@t+1)& (0+255),f,b
  3062  000F50                     l3556:
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 457:             while (t) {
  3066  000F50  5175               	movf	efgtoa@t& (0+255),w,b
  3067  000F52  1176               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3068  000F54  A4D8               	btfss	status,2,c
  3069  000F56  D7EC               	goto	l3548
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
  3073  000F58  0E00               	movlw	low _dbuf
  3074  000F5A  2597               	addwf	efgtoa@n& (0+255),w,b
  3075  000F5C  6ED9               	movwf	fsr2l,c
  3076  000F5E  0E01               	movlw	high _dbuf
  3077  000F60  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3078  000F62  6EDA               	movwf	fsr2h,c
  3079  000F64  517D               	movf	efgtoa@d& (0+255),w,b
  3080  000F66  0F30               	addlw	48
  3081  000F68  6EDF               	movwf	indf2,c
  3082                           
  3083                           ; BSR set to: 0
  3084  000F6A  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3085  000F6C  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3086                           
  3087                           ; BSR set to: 0
  3088                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 463:             --w;
  3089  000F6E  0784               	decf	efgtoa@w& (0+255),f,b
  3090  000F70  A0D8               	btfss	status,0,c
  3091  000F72  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3092  000F74                     l3564:
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
  3096  000F74  C087  F028         	movff	efgtoa@h,___flsub@b
  3097  000F78  C088  F029         	movff	efgtoa@h+1,___flsub@b+1
  3098  000F7C  C089  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3099  000F80  C08A  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3100  000F84  C099  F013         	movff	efgtoa@u,___flmul@a
  3101  000F88  C09A  F014         	movff	efgtoa@u+1,___flmul@a+1
  3102  000F8C  C09B  F015         	movff	efgtoa@u+2,___flmul@a+2
  3103  000F90  C09C  F016         	movff	efgtoa@u+3,___flmul@a+3
  3104  000F94  C08B  F00F         	movff	efgtoa@l,___flmul@b
  3105  000F98  C08C  F010         	movff	efgtoa@l+1,___flmul@b+1
  3106  000F9C  C08D  F011         	movff	efgtoa@l+2,___flmul@b+2
  3107  000FA0  C08E  F012         	movff	efgtoa@l+3,___flmul@b+3
  3108  000FA4  ECBB  F00A         	call	___flmul	;wreg free
  3109  000FA8  C00F  F02C         	movff	?___flmul,___flsub@a
  3110  000FAC  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3111  000FB0  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3112  000FB4  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3113  000FB8  EC10  F016         	call	___flsub	;wreg free
  3114  000FBC  C028  F087         	movff	?___flsub,efgtoa@h
  3115  000FC0  C029  F088         	movff	?___flsub+1,efgtoa@h+1
  3116  000FC4  C02A  F089         	movff	?___flsub+2,efgtoa@h+2
  3117  000FC8  C02B  F08A         	movff	?___flsub+3,efgtoa@h+3
  3118                           
  3119                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
  3120  000FCC  C099  F028         	movff	efgtoa@u,___fldiv@b
  3121  000FD0  C09A  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3122  000FD4  C09B  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3123  000FD8  C09C  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3124  000FDC  0E00               	movlw	0
  3125  000FDE  6E2C               	movwf	___fldiv@a,c
  3126  000FE0  0E00               	movlw	0
  3127  000FE2  6E2D               	movwf	___fldiv@a+1,c
  3128  000FE4  0E20               	movlw	32
  3129  000FE6  6E2E               	movwf	___fldiv@a+2,c
  3130  000FE8  0E41               	movlw	65
  3131  000FEA  6E2F               	movwf	___fldiv@a+3,c
  3132  000FEC  ECEA  F00D         	call	___fldiv	;wreg free
  3133  000FF0  C028  F099         	movff	?___fldiv,efgtoa@u
  3134  000FF4  C029  F09A         	movff	?___fldiv+1,efgtoa@u+1
  3135  000FF8  C02A  F09B         	movff	?___fldiv+2,efgtoa@u+2
  3136  000FFC  C02B  F09C         	movff	?___fldiv+3,efgtoa@u+3
  3137                           
  3138                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 467:         --ne;
  3139  001000  0100               	movlb	0	; () banked
  3140  001002  077B               	decf	efgtoa@ne& (0+255),f,b
  3141  001004  A0D8               	btfss	status,0,c
  3142  001006  077C               	decf	(efgtoa@ne+1)& (0+255),f,b
  3143                           
  3144                           ; BSR set to: 0
  3145                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 468:         ++i;
  3146  001008  4B8F               	infsnz	efgtoa@i& (0+255),f,b
  3147  00100A  2B90               	incf	(efgtoa@i+1)& (0+255),f,b
  3148  00100C                     l3572:
  3149                           
  3150                           ; BSR set to: 0
  3151                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  3152  00100C  5179               	movf	efgtoa@m& (0+255),w,b
  3153  00100E  5D8F               	subwf	efgtoa@i& (0+255),w,b
  3154  001010  5190               	movf	(efgtoa@i+1)& (0+255),w,b
  3155  001012  0A80               	xorlw	128
  3156  001014  6F60               	movwf	??_efgtoa& (0+255),b
  3157  001016  517A               	movf	(efgtoa@m+1)& (0+255),w,b
  3158  001018  0A80               	xorlw	128
  3159  00101A  5960               	subwfb	??_efgtoa& (0+255),w,b
  3160  00101C  B0D8               	btfsc	status,0,c
  3161  00101E  D008               	goto	u4360
  3162                           
  3163                           ; BSR set to: 0
  3164  001020  BF98               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3165  001022  D72E               	goto	l3524
  3166  001024  5198               	movf	(efgtoa@n+1)& (0+255),w,b
  3167  001026  E104               	bnz	u4360
  3168  001028  0E4B               	movlw	75
  3169  00102A  5D97               	subwf	efgtoa@n& (0+255),w,b
  3170  00102C  A0D8               	btfss	status,0,c
  3171  00102E  D728               	goto	l3524
  3172  001030                     u4360:
  3173                           
  3174                           ; BSR set to: 0
  3175                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
  3176  001030  5177               	movf	efgtoa@pp& (0+255),w,b
  3177  001032  1178               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3178  001034  B4D8               	btfsc	status,2,c
  3179                           
  3180                           ; BSR set to: 0
  3181  001036  A9DD               	btfss	_flags& (0+255),4,b
  3182  001038  D00A               	goto	l3584
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
  3186  00103A  0E00               	movlw	low _dbuf
  3187  00103C  2597               	addwf	efgtoa@n& (0+255),w,b
  3188  00103E  6ED9               	movwf	fsr2l,c
  3189  001040  0E01               	movlw	high _dbuf
  3190  001042  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3191  001044  6EDA               	movwf	fsr2h,c
  3192  001046  0E2E               	movlw	46
  3193  001048  6EDF               	movwf	indf2,c
  3194                           
  3195                           ; BSR set to: 0
  3196  00104A  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3197  00104C  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3198  00104E                     l3584:
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
  3202  00104E  0E00               	movlw	low _dbuf
  3203  001050  2597               	addwf	efgtoa@n& (0+255),w,b
  3204  001052  6ED9               	movwf	fsr2l,c
  3205  001054  0E01               	movlw	high _dbuf
  3206  001056  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3207  001058  6EDA               	movwf	fsr2h,c
  3208  00105A  0E00               	movlw	0
  3209  00105C  6EDF               	movwf	indf2,c
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
  3213  00105E  0E65               	movlw	101
  3214  001060  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  3215  001062  A4D8               	btfss	status,2,c
  3216  001064  D47F               	goto	l3396
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
  3220  001066  0E00               	movlw	0
  3221  001068  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  3222  00106A  0E4F               	movlw	79
  3223  00106C  6F8F               	movwf	efgtoa@i& (0+255),b
  3224                           
  3225                           ; BSR set to: 0
  3226                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
  3227  00106E  0E00               	movlw	low _dbuf
  3228  001070  258F               	addwf	efgtoa@i& (0+255),w,b
  3229  001072  6ED9               	movwf	fsr2l,c
  3230  001074  0E01               	movlw	high _dbuf
  3231  001076  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3232  001078  6EDA               	movwf	fsr2h,c
  3233  00107A  0E00               	movlw	0
  3234  00107C  6EDF               	movwf	indf2,c
  3235                           
  3236                           ; BSR set to: 0
  3237                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
  3238  00107E  0E00               	movlw	0
  3239  001080  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  3240  001082  0E00               	movlw	0
  3241  001084  6F7F               	movwf	efgtoa@sign& (0+255),b
  3242                           
  3243                           ; BSR set to: 0
  3244                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
  3245  001086  AF96               	btfss	(efgtoa@e+1)& (0+255),7,b
  3246  001088  D008               	goto	l3600
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
  3250  00108A  0E00               	movlw	0
  3251  00108C  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  3252  00108E  0E01               	movlw	1
  3253  001090  6F7F               	movwf	efgtoa@sign& (0+255),b
  3254                           
  3255                           ; BSR set to: 0
  3256                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 482:             e = -e;
  3257  001092  6D95               	negf	efgtoa@e& (0+255),b
  3258  001094  1F96               	comf	(efgtoa@e+1)& (0+255),f,b
  3259  001096  B0D8               	btfsc	status,0,c
  3260  001098  2B96               	incf	(efgtoa@e+1)& (0+255),f,b
  3261  00109A                     l3600:
  3262                           
  3263                           ; BSR set to: 0
  3264                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 484:         p = 2;
  3265  00109A  0E00               	movlw	0
  3266  00109C  6F82               	movwf	(efgtoa@p+1)& (0+255),b
  3267  00109E  0E02               	movlw	2
  3268  0010A0  6F81               	movwf	efgtoa@p& (0+255),b
  3269                           
  3270                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  3271  0010A2  D02B               	goto	l3612
  3272  0010A4                     l3602:
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 486:             --i;
  3276  0010A4  078F               	decf	efgtoa@i& (0+255),f,b
  3277  0010A6  A0D8               	btfss	status,0,c
  3278  0010A8  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
  3282  0010AA  0E00               	movlw	low _dbuf
  3283  0010AC  258F               	addwf	efgtoa@i& (0+255),w,b
  3284  0010AE  6ED9               	movwf	fsr2l,c
  3285  0010B0  0E01               	movlw	high _dbuf
  3286  0010B2  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3287  0010B4  6EDA               	movwf	fsr2h,c
  3288  0010B6  C095  F001         	movff	efgtoa@e,___awmod@dividend
  3289  0010BA  C096  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3290  0010BE  0E00               	movlw	0
  3291  0010C0  6E04               	movwf	___awmod@divisor+1,c
  3292  0010C2  0E0A               	movlw	10
  3293  0010C4  6E03               	movwf	___awmod@divisor,c
  3294  0010C6  EC0D  F015         	call	___awmod	;wreg free
  3295  0010CA  5001               	movf	?___awmod,w,c
  3296  0010CC  0F30               	addlw	48
  3297  0010CE  6EDF               	movwf	indf2,c
  3298                           
  3299                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
  3300  0010D0  C095  F001         	movff	efgtoa@e,___awdiv@dividend
  3301  0010D4  C096  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3302  0010D8  0E00               	movlw	0
  3303  0010DA  6E04               	movwf	___awdiv@divisor+1,c
  3304  0010DC  0E0A               	movlw	10
  3305  0010DE  6E03               	movwf	___awdiv@divisor,c
  3306  0010E0  EC58  F014         	call	___awdiv	;wreg free
  3307  0010E4  C001  F095         	movff	?___awdiv,efgtoa@e
  3308  0010E8  C002  F096         	movff	?___awdiv+1,efgtoa@e+1
  3309                           
  3310                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 489:             --p;
  3311  0010EC  0100               	movlb	0	; () banked
  3312  0010EE  0781               	decf	efgtoa@p& (0+255),f,b
  3313  0010F0  A0D8               	btfss	status,0,c
  3314  0010F2  0782               	decf	(efgtoa@p+1)& (0+255),f,b
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 490:             --w;
  3318  0010F4  0784               	decf	efgtoa@w& (0+255),f,b
  3319  0010F6  A0D8               	btfss	status,0,c
  3320  0010F8  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3321  0010FA                     l3612:
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  3325  0010FA  5195               	movf	efgtoa@e& (0+255),w,b
  3326  0010FC  1196               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3327  0010FE  A4D8               	btfss	status,2,c
  3328  001100  D7D1               	goto	l3602
  3329                           
  3330                           ; BSR set to: 0
  3331  001102  BF82               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3332  001104  D005               	goto	u4420
  3333  001106  5182               	movf	(efgtoa@p+1)& (0+255),w,b
  3334  001108  E1CD               	bnz	l3602
  3335  00110A  0581               	decf	efgtoa@p& (0+255),w,b
  3336  00110C  B0D8               	btfsc	status,0,c
  3337  00110E  D7CA               	goto	l3602
  3338  001110                     u4420:
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 492:         --i;
  3342  001110  078F               	decf	efgtoa@i& (0+255),f,b
  3343  001112  A0D8               	btfss	status,0,c
  3344  001114  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
  3348  001116  517F               	movf	efgtoa@sign& (0+255),w,b
  3349  001118  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3350  00111A  A4D8               	btfss	status,2,c
  3351  00111C  D004               	goto	l3622
  3352                           
  3353                           ; BSR set to: 0
  3354  00111E  0E00               	movlw	0
  3355  001120  6F70               	movwf	(_efgtoa$402+1)& (0+255),b
  3356  001122  0E2B               	movlw	43
  3357  001124  D003               	goto	L4
  3358  001126                     l3622:
  3359                           
  3360                           ; BSR set to: 0
  3361  001126  0E00               	movlw	0
  3362  001128  6F70               	movwf	(_efgtoa$402+1)& (0+255),b
  3363  00112A  0E2D               	movlw	45
  3364  00112C                     L4:
  3365  00112C  6F6F               	movwf	_efgtoa$402& (0+255),b
  3366                           
  3367                           ; BSR set to: 0
  3368  00112E  0E00               	movlw	low _dbuf
  3369  001130  258F               	addwf	efgtoa@i& (0+255),w,b
  3370  001132  6ED9               	movwf	fsr2l,c
  3371  001134  0E01               	movlw	high _dbuf
  3372  001136  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3373  001138  6EDA               	movwf	fsr2h,c
  3374  00113A  C06F  FFDF         	movff	_efgtoa$402,indf2
  3375                           
  3376                           ; BSR set to: 0
  3377                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 494:         --w;
  3378  00113E  0784               	decf	efgtoa@w& (0+255),f,b
  3379  001140  A0D8               	btfss	status,0,c
  3380  001142  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3381                           
  3382                           ; BSR set to: 0
  3383                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3384  001144  078F               	decf	efgtoa@i& (0+255),f,b
  3385  001146  A0D8               	btfss	status,0,c
  3386  001148  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  3387                           
  3388                           ; BSR set to: 0
  3389  00114A  0EBF               	movlw	191
  3390  00114C  6F60               	movwf	??_efgtoa& (0+255),b
  3391  00114E  0EFF               	movlw	255
  3392  001150  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  3393  001152  505B               	movf	efgtoa@c,w,c
  3394  001154  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  3395  001156  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  3396  001158  5160               	movf	??_efgtoa& (0+255),w,b
  3397  00115A  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  3398  00115C  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  3399  00115E  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3400  001160  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  3401  001162  E106               	bnz	u4440
  3402  001164  0E1A               	movlw	26
  3403  001166  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  3404  001168  B0D8               	btfsc	status,0,c
  3405  00116A  D002               	goto	u4440
  3406  00116C  0E01               	movlw	1
  3407  00116E  D001               	goto	u4450
  3408  001170                     u4440:
  3409  001170  0E00               	movlw	0
  3410  001172                     u4450:
  3411  001172  6F73               	movwf	_efgtoa$404& (0+255),b
  3412  001174  6B74               	clrf	(_efgtoa$404+1)& (0+255),b
  3413                           
  3414                           ; BSR set to: 0
  3415  001176  5173               	movf	_efgtoa$404& (0+255),w,b
  3416  001178  1174               	iorwf	(_efgtoa$404+1)& (0+255),w,b
  3417  00117A  A4D8               	btfss	status,2,c
  3418  00117C  D004               	goto	l3638
  3419                           
  3420                           ; BSR set to: 0
  3421  00117E  0E00               	movlw	0
  3422  001180  6F72               	movwf	(_efgtoa$403+1)& (0+255),b
  3423  001182  0E65               	movlw	101
  3424  001184  D003               	goto	L5
  3425  001186                     l3638:
  3426                           
  3427                           ; BSR set to: 0
  3428  001186  0E00               	movlw	0
  3429  001188  6F72               	movwf	(_efgtoa$403+1)& (0+255),b
  3430  00118A  0E45               	movlw	69
  3431  00118C                     L5:
  3432  00118C  6F71               	movwf	_efgtoa$403& (0+255),b
  3433                           
  3434                           ; BSR set to: 0
  3435  00118E  0E00               	movlw	low _dbuf
  3436  001190  258F               	addwf	efgtoa@i& (0+255),w,b
  3437  001192  6ED9               	movwf	fsr2l,c
  3438  001194  0E01               	movlw	high _dbuf
  3439  001196  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3440  001198  6EDA               	movwf	fsr2h,c
  3441  00119A  C071  FFDF         	movff	_efgtoa$403,indf2
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 497:         --w;
  3445  00119E  0784               	decf	efgtoa@w& (0+255),f,b
  3446  0011A0  A0D8               	btfss	status,0,c
  3447  0011A2  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3448                           
  3449                           ; BSR set to: 0
  3450                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  3451  0011A4  0E00               	movlw	low _dbuf
  3452  0011A6  2597               	addwf	efgtoa@n& (0+255),w,b
  3453  0011A8  6E01               	movwf	strcpy@dest,c
  3454  0011AA  0E01               	movlw	high _dbuf
  3455  0011AC  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3456  0011AE  6E02               	movwf	strcpy@dest+1,c
  3457  0011B0  0E00               	movlw	low _dbuf
  3458  0011B2  258F               	addwf	efgtoa@i& (0+255),w,b
  3459  0011B4  6E03               	movwf	strcpy@src,c
  3460  0011B6  0E01               	movlw	high _dbuf
  3461  0011B8  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3462  0011BA  6E04               	movwf	strcpy@src+1,c
  3463  0011BC  EC99  F015         	call	_strcpy	;wreg free
  3464  0011C0  EFB2  F004         	goto	l3396
  3465  0011C4                     __end_of_efgtoa:
  3466                           	opt callstack 0
  3467                           
  3468 ;; *************** function _tolower *****************
  3469 ;; Defined at:
  3470 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/tolower.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;  c               2    6[COMRAM] int 
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;		None
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  2    6[COMRAM] int 
  3477 ;; Registers used:
  3478 ;;		wreg, status,2, status,0
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3484 ;;      Params:         2       0       0       0       0       0       0       0       0
  3485 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3486 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3487 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3488 ;;Total ram usage:        8 bytes
  3489 ;; Hardware stack levels used:    1
  3490 ;; Hardware stack levels required when called:    1
  3491 ;; This function calls:
  3492 ;;		_isupper
  3493 ;; This function is called by:
  3494 ;;		_efgtoa
  3495 ;;		_vfpfcnvrt
  3496 ;; This function uses a non-reentrant model
  3497 ;;
  3498                           
  3499                           	psect	text6
  3500  002BD4                     __ptext6:
  3501                           	opt callstack 0
  3502  002BD4                     _tolower:
  3503                           	opt callstack 26
  3504                           
  3505                           ;incstack = 0
  3506  002BD4  0EBF               	movlw	191
  3507  002BD6  6E09               	movwf	??_tolower& (0+255),c
  3508  002BD8  0EFF               	movlw	255
  3509  002BDA  6E0A               	movwf	(??_tolower+1)& (0+255),c
  3510  002BDC  C007  F00B         	movff	tolower@c,??_tolower+2
  3511  002BE0  C008  F00C         	movff	tolower@c+1,??_tolower+3
  3512  002BE4  5009               	movf	??_tolower,w,c
  3513  002BE6  260B               	addwf	??_tolower+2,f,c
  3514  002BE8  500A               	movf	??_tolower+1,w,c
  3515  002BEA  220C               	addwfc	??_tolower+3,f,c
  3516  002BEC  500C               	movf	??_tolower+3,w,c
  3517  002BEE  E106               	bnz	u3080
  3518  002BF0  0E1A               	movlw	26
  3519  002BF2  5C0B               	subwf	??_tolower+2,w,c
  3520  002BF4  B0D8               	btfsc	status,0,c
  3521  002BF6  D002               	goto	u3080
  3522  002BF8  0E01               	movlw	1
  3523  002BFA  D001               	goto	u3090
  3524  002BFC                     u3080:
  3525  002BFC  0E00               	movlw	0
  3526  002BFE                     u3090:
  3527  002BFE  6E0D               	movwf	_tolower$1009,c
  3528  002C00  6A0E               	clrf	_tolower$1009+1,c
  3529  002C02  500D               	movf	_tolower$1009,w,c
  3530  002C04  100E               	iorwf	_tolower$1009+1,w,c
  3531  002C06  B4D8               	btfsc	status,2,c
  3532  002C08  D006               	goto	l1062
  3533  002C0A  0E20               	movlw	32
  3534  002C0C  1007               	iorwf	tolower@c,w,c
  3535  002C0E  6E07               	movwf	?_tolower,c
  3536  002C10  5008               	movf	tolower@c+1,w,c
  3537  002C12  6E08               	movwf	?_tolower+1,c
  3538  002C14  0012               	return	
  3539  002C16                     l1062:
  3540  002C16  C007  F007         	movff	tolower@c,?_tolower
  3541  002C1A  C008  F008         	movff	tolower@c+1,?_tolower+1
  3542  002C1E  0012               	return		;funcret
  3543  002C20                     __end_of_tolower:
  3544                           	opt callstack 0
  3545                           
  3546 ;; *************** function _isupper *****************
  3547 ;; Defined at:
  3548 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;  c               2    0[COMRAM] int 
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;		None
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  2    0[COMRAM] int 
  3555 ;; Registers used:
  3556 ;;		wreg, status,2, status,0
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3562 ;;      Params:         2       0       0       0       0       0       0       0       0
  3563 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3564 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3565 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3566 ;;Total ram usage:        6 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_efgtoa
  3572 ;;		_vfpfcnvrt
  3573 ;;		_tolower
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text7
  3578  002D46                     __ptext7:
  3579                           	opt callstack 0
  3580  002D46                     _isupper:
  3581                           	opt callstack 26
  3582                           
  3583                           ;incstack = 0
  3584  002D46  0EBF               	movlw	191
  3585  002D48  6E03               	movwf	??_isupper& (0+255),c
  3586  002D4A  0EFF               	movlw	255
  3587  002D4C  6E04               	movwf	(??_isupper+1)& (0+255),c
  3588  002D4E  C001  F005         	movff	isupper@c,??_isupper+2
  3589  002D52  C002  F006         	movff	isupper@c+1,??_isupper+3
  3590  002D56  5003               	movf	??_isupper,w,c
  3591  002D58  2605               	addwf	??_isupper+2,f,c
  3592  002D5A  5004               	movf	??_isupper+1,w,c
  3593  002D5C  2206               	addwfc	??_isupper+3,f,c
  3594  002D5E  5006               	movf	??_isupper+3,w,c
  3595  002D60  E106               	bnz	u2540
  3596  002D62  0E1A               	movlw	26
  3597  002D64  5C05               	subwf	??_isupper+2,w,c
  3598  002D66  B0D8               	btfsc	status,0,c
  3599  002D68  D002               	goto	u2540
  3600  002D6A  0E01               	movlw	1
  3601  002D6C  D001               	goto	u2550
  3602  002D6E                     u2540:
  3603  002D6E  0E00               	movlw	0
  3604  002D70                     u2550:
  3605  002D70  6E01               	movwf	?_isupper,c
  3606  002D72  6A02               	clrf	?_isupper+1,c
  3607  002D74  0012               	return		;funcret
  3608  002D76                     __end_of_isupper:
  3609                           	opt callstack 0
  3610                           
  3611 ;; *************** function _strcpy *****************
  3612 ;; Defined at:
  3613 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strcpy.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3616 ;;		 -> dbuf(80), 
  3617 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3618 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  3619 ;;		 -> dbuf(80), 
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;  d               2    8[COMRAM] PTR unsigned char 
  3622 ;;		 -> dbuf(80), 
  3623 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3624 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  3625 ;;		 -> dbuf(80), 
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  2    0[COMRAM] PTR unsigned char 
  3628 ;; Registers used:
  3629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3635 ;;      Params:         4       0       0       0       0       0       0       0       0
  3636 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3637 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3638 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3639 ;;Total ram usage:       10 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; This function calls:
  3642 ;;		Nothing
  3643 ;; This function is called by:
  3644 ;;		_efgtoa
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           	psect	text8
  3649  002B32                     __ptext8:
  3650                           	opt callstack 0
  3651  002B32                     _strcpy:
  3652                           	opt callstack 26
  3653                           
  3654                           ;incstack = 0
  3655  002B32  C003  F007         	movff	strcpy@src,strcpy@s
  3656  002B36  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  3657  002B3A  C001  F009         	movff	strcpy@dest,strcpy@d
  3658  002B3E  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  3659  002B42                     l2846:
  3660  002B42  5007               	movf	strcpy@s,w,c
  3661  002B44  6E05               	movwf	??_strcpy& (0+255),c
  3662  002B46  5008               	movf	strcpy@s+1,w,c
  3663  002B48  6E06               	movwf	(??_strcpy+1)& (0+255),c
  3664  002B4A  4A07               	infsnz	strcpy@s,f,c
  3665  002B4C  2A08               	incf	strcpy@s+1,f,c
  3666  002B4E  C005  FFF6         	movff	??_strcpy,tblptrl
  3667  002B52  C006  FFF7         	movff	??_strcpy+1,tblptrh
  3668  002B56  6AF8               	clrf	tblptru,c
  3669  002B58  C009  FFD9         	movff	strcpy@d,fsr2l
  3670  002B5C  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  3671  002B60  4A09               	infsnz	strcpy@d,f,c
  3672  002B62  2A0A               	incf	strcpy@d+1,f,c
  3673  002B64  0E07               	movlw	(high __ramtop+-1)
  3674  002B66  64F7               	cpfsgt	tblptrh,c
  3675  002B68  D003               	bra	u3067
  3676  002B6A  0008               	tblrd		*
  3677  002B6C  50F5               	movf	tablat,w,c
  3678  002B6E  D005               	bra	u3060
  3679  002B70                     u3067:
  3680  002B70  CFF6 FFE1          	movff	tblptrl,fsr1l
  3681  002B74  CFF7 FFE2          	movff	tblptrh,fsr1h
  3682  002B78  50E7               	movf	indf1,w,c
  3683  002B7A                     u3060:
  3684  002B7A  6EDF               	movwf	indf2,c
  3685  002B7C  50DF               	movf	indf2,w,c
  3686  002B7E  B4D8               	btfsc	status,2,c
  3687  002B80  0012               	return	
  3688  002B82  D7DF               	goto	l2846
  3689  002B84                     __end_of_strcpy:
  3690                           	opt callstack 0
  3691                           
  3692 ;; *************** function _pad *****************
  3693 ;; Defined at:
  3694 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3697 ;;		 -> sprintf@f(6), 
  3698 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3699 ;;		 -> dbuf(80), 
  3700 ;;  p               2   20[COMRAM] int 
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;  w               2   25[COMRAM] int 
  3703 ;;  i               2   23[COMRAM] int 
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  2   16[COMRAM] int 
  3706 ;; Registers used:
  3707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3713 ;;      Params:         6       0       0       0       0       0       0       0       0
  3714 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3715 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3716 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3717 ;;Total ram usage:       11 bytes
  3718 ;; Hardware stack levels used:    1
  3719 ;; Hardware stack levels required when called:    3
  3720 ;; This function calls:
  3721 ;;		_fputc
  3722 ;;		_fputs
  3723 ;;		_strlen
  3724 ;; This function is called by:
  3725 ;;		_efgtoa
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           	psect	text9
  3730  00278C                     __ptext9:
  3731                           	opt callstack 0
  3732  00278C                     _pad:
  3733                           	opt callstack 23
  3734                           
  3735                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  3736                           
  3737                           ;incstack = 0
  3738  00278C  0100               	movlb	0	; () banked
  3739  00278E  A1DD               	btfss	_flags& (0+255),0,b
  3740  002790  D00A               	goto	l2804
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  3744  002792  C013  F00A         	movff	pad@buf,fputs@s
  3745  002796  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3746  00279A  C011  F00C         	movff	pad@fp,fputs@fp
  3747  00279E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3748  0027A2  EC52  F016         	call	_fputs	;wreg free
  3749  0027A6                     l2804:
  3750                           
  3751                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  3752  0027A6  BE16               	btfsc	pad@p+1,7,c
  3753  0027A8  D005               	goto	l2808
  3754  0027AA  C015  F01A         	movff	pad@p,pad@w
  3755  0027AE  C016  F01B         	movff	pad@p+1,pad@w+1
  3756  0027B2  D004               	goto	l130
  3757  0027B4                     l2808:
  3758  0027B4  0E00               	movlw	0
  3759  0027B6  6E1B               	movwf	pad@w+1,c
  3760  0027B8  0E00               	movlw	0
  3761  0027BA  6E1A               	movwf	pad@w,c
  3762  0027BC                     l130:
  3763                           
  3764                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  3765  0027BC  0E00               	movlw	0
  3766  0027BE  6E19               	movwf	pad@i+1,c
  3767  0027C0  0E00               	movlw	0
  3768  0027C2  6E18               	movwf	pad@i,c
  3769                           
  3770                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  3771  0027C4  D00C               	goto	l2814
  3772  0027C6                     l2810:
  3773                           
  3774                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  3775  0027C6  0E00               	movlw	0
  3776  0027C8  6E02               	movwf	fputc@c+1,c
  3777  0027CA  0E20               	movlw	32
  3778  0027CC  6E01               	movwf	fputc@c,c
  3779  0027CE  C011  F003         	movff	pad@fp,fputc@fp
  3780  0027D2  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3781  0027D6  EC76  F013         	call	_fputc	;wreg free
  3782                           
  3783                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  3784  0027DA  4A18               	infsnz	pad@i,f,c
  3785  0027DC  2A19               	incf	pad@i+1,f,c
  3786  0027DE                     l2814:
  3787                           
  3788                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  3789  0027DE  501A               	movf	pad@w,w,c
  3790  0027E0  5C18               	subwf	pad@i,w,c
  3791  0027E2  5019               	movf	pad@i+1,w,c
  3792  0027E4  0A80               	xorlw	128
  3793  0027E6  6E17               	movwf	??_pad& (0+255),c
  3794  0027E8  501B               	movf	pad@w+1,w,c
  3795  0027EA  0A80               	xorlw	128
  3796  0027EC  5817               	subwfb	??_pad& (0+255),w,c
  3797  0027EE  A0D8               	btfss	status,0,c
  3798  0027F0  D7EA               	goto	l2810
  3799                           
  3800                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  3801  0027F2  0100               	movlb	0	; () banked
  3802  0027F4  B1DD               	btfsc	_flags& (0+255),0,b
  3803  0027F6  D00A               	goto	l2818
  3804                           
  3805                           ; BSR set to: 0
  3806                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  3807  0027F8  C013  F00A         	movff	pad@buf,fputs@s
  3808  0027FC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3809  002800  C011  F00C         	movff	pad@fp,fputs@fp
  3810  002804  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3811  002808  EC52  F016         	call	_fputs	;wreg free
  3812  00280C                     l2818:
  3813                           
  3814                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  3815  00280C  C013  F001         	movff	pad@buf,strlen@s
  3816  002810  C014  F002         	movff	pad@buf+1,strlen@s+1
  3817  002814  EC00  F017         	call	_strlen	;wreg free
  3818  002818  501A               	movf	pad@w,w,c
  3819  00281A  2401               	addwf	?_strlen,w,c
  3820  00281C  6E11               	movwf	?_pad,c
  3821  00281E  501B               	movf	pad@w+1,w,c
  3822  002820  2002               	addwfc	?_strlen+1,w,c
  3823  002822  6E12               	movwf	?_pad+1,c
  3824  002824  0012               	return		;funcret
  3825  002826                     __end_of_pad:
  3826                           	opt callstack 0
  3827                           
  3828 ;; *************** function _strlen *****************
  3829 ;; Defined at:
  3830 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3833 ;;		 -> dbuf(80), 
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3836 ;;		 -> dbuf(80), 
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  2    0[COMRAM] unsigned int 
  3839 ;; Registers used:
  3840 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3846 ;;      Params:         2       0       0       0       0       0       0       0       0
  3847 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3848 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3849 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3850 ;;Total ram usage:        4 bytes
  3851 ;; Hardware stack levels used:    1
  3852 ;; This function calls:
  3853 ;;		Nothing
  3854 ;; This function is called by:
  3855 ;;		_pad
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           	psect	text10
  3860  002E00                     __ptext10:
  3861                           	opt callstack 0
  3862  002E00                     _strlen:
  3863                           	opt callstack 25
  3864                           
  3865                           ;incstack = 0
  3866  002E00  C001  F003         	movff	strlen@s,strlen@a
  3867  002E04  C002  F004         	movff	strlen@s+1,strlen@a+1
  3868  002E08  D002               	goto	l2588
  3869  002E0A                     l2586:
  3870  002E0A  4A01               	infsnz	strlen@s,f,c
  3871  002E0C  2A02               	incf	strlen@s+1,f,c
  3872  002E0E                     l2588:
  3873  002E0E  C001  FFD9         	movff	strlen@s,fsr2l
  3874  002E12  C002  FFDA         	movff	strlen@s+1,fsr2h
  3875  002E16  50DF               	movf	indf2,w,c
  3876  002E18  A4D8               	btfss	status,2,c
  3877  002E1A  D7F7               	goto	l2586
  3878  002E1C  5003               	movf	strlen@a,w,c
  3879  002E1E  5C01               	subwf	strlen@s,w,c
  3880  002E20  6E01               	movwf	?_strlen,c
  3881  002E22  5004               	movf	strlen@a+1,w,c
  3882  002E24  5802               	subwfb	strlen@s+1,w,c
  3883  002E26  6E02               	movwf	?_strlen+1,c
  3884  002E28  0012               	return		;funcret
  3885  002E2A                     __end_of_strlen:
  3886                           	opt callstack 0
  3887                           
  3888 ;; *************** function _fputs *****************
  3889 ;; Defined at:
  3890 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3893 ;;		 -> dbuf(80), 
  3894 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3895 ;;		 -> sprintf@f(6), 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;  i               2   14[COMRAM] int 
  3898 ;;  c               1   13[COMRAM] unsigned char 
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  2    9[COMRAM] int 
  3901 ;; Registers used:
  3902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3908 ;;      Params:         4       0       0       0       0       0       0       0       0
  3909 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3910 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3911 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3912 ;;Total ram usage:        7 bytes
  3913 ;; Hardware stack levels used:    1
  3914 ;; Hardware stack levels required when called:    2
  3915 ;; This function calls:
  3916 ;;		_fputc
  3917 ;; This function is called by:
  3918 ;;		_pad
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922                           	psect	text11
  3923  002CA4                     __ptext11:
  3924                           	opt callstack 0
  3925  002CA4                     _fputs:
  3926                           	opt callstack 23
  3927                           
  3928                           ;incstack = 0
  3929  002CA4  0E00               	movlw	0
  3930  002CA6  6E10               	movwf	fputs@i+1,c
  3931  002CA8  0E00               	movlw	0
  3932  002CAA  6E0F               	movwf	fputs@i,c
  3933  002CAC  D00B               	goto	l2582
  3934  002CAE                     l2578:
  3935  002CAE  C00E  F001         	movff	fputs@c,fputc@c
  3936  002CB2  6A02               	clrf	fputc@c+1,c
  3937  002CB4  C00C  F003         	movff	fputs@fp,fputc@fp
  3938  002CB8  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3939  002CBC  EC76  F013         	call	_fputc	;wreg free
  3940  002CC0  4A0F               	infsnz	fputs@i,f,c
  3941  002CC2  2A10               	incf	fputs@i+1,f,c
  3942  002CC4                     l2582:
  3943  002CC4  500F               	movf	fputs@i,w,c
  3944  002CC6  240A               	addwf	fputs@s,w,c
  3945  002CC8  6ED9               	movwf	fsr2l,c
  3946  002CCA  5010               	movf	fputs@i+1,w,c
  3947  002CCC  200B               	addwfc	fputs@s+1,w,c
  3948  002CCE  6EDA               	movwf	fsr2h,c
  3949  002CD0  50DF               	movf	indf2,w,c
  3950  002CD2  6E0E               	movwf	fputs@c,c
  3951  002CD4  500E               	movf	fputs@c,w,c
  3952  002CD6  B4D8               	btfsc	status,2,c
  3953  002CD8  0012               	return	
  3954  002CDA  D7E9               	goto	l2578
  3955  002CDC                     __end_of_fputs:
  3956                           	opt callstack 0
  3957                           
  3958 ;; *************** function _fputc *****************
  3959 ;; Defined at:
  3960 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;  c               2    0[COMRAM] int 
  3963 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3964 ;;		 -> sprintf@f(6), 
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;		None
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  2    0[COMRAM] int 
  3969 ;; Registers used:
  3970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3976 ;;      Params:         4       0       0       0       0       0       0       0       0
  3977 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3978 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3979 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3980 ;;Total ram usage:        9 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:    1
  3983 ;; This function calls:
  3984 ;;		_putch
  3985 ;; This function is called by:
  3986 ;;		_pad
  3987 ;;		_vfpfcnvrt
  3988 ;;		_fputs
  3989 ;; This function uses a non-reentrant model
  3990 ;;
  3991                           
  3992                           	psect	text12
  3993  0026EC                     __ptext12:
  3994                           	opt callstack 0
  3995  0026EC                     _fputc:
  3996                           	opt callstack 26
  3997                           
  3998                           ;incstack = 0
  3999  0026EC  5003               	movf	fputc@fp,w,c
  4000  0026EE  1004               	iorwf	fputc@fp+1,w,c
  4001  0026F0  B4D8               	btfsc	status,2,c
  4002  0026F2  D004               	goto	u2490
  4003  0026F4  5003               	movf	fputc@fp,w,c
  4004  0026F6  1004               	iorwf	fputc@fp+1,w,c
  4005  0026F8  A4D8               	btfss	status,2,c
  4006  0026FA  D004               	goto	l2568
  4007  0026FC                     u2490:
  4008  0026FC  5001               	movf	fputc@c,w,c
  4009  0026FE  EC63  F017         	call	_putch
  4010  002702  0012               	return	
  4011  002704                     l2568:
  4012  002704  EE20 F004          	lfsr	2,4
  4013  002708  5003               	movf	fputc@fp,w,c
  4014  00270A  26D9               	addwf	fsr2l,f,c
  4015  00270C  5004               	movf	fputc@fp+1,w,c
  4016  00270E  22DA               	addwfc	fsr2h,f,c
  4017  002710  50DE               	movf	postinc2,w,c
  4018  002712  10DE               	iorwf	postinc2,w,c
  4019  002714  B4D8               	btfsc	status,2,c
  4020  002716  D016               	goto	u2510
  4021  002718  EE20 F004          	lfsr	2,4
  4022  00271C  5003               	movf	fputc@fp,w,c
  4023  00271E  26D9               	addwf	fsr2l,f,c
  4024  002720  5004               	movf	fputc@fp+1,w,c
  4025  002722  22DA               	addwfc	fsr2h,f,c
  4026  002724  EE10 F002          	lfsr	1,2
  4027  002728  5003               	movf	fputc@fp,w,c
  4028  00272A  26E1               	addwf	fsr1l,f,c
  4029  00272C  5004               	movf	fputc@fp+1,w,c
  4030  00272E  22E2               	addwfc	fsr1h,f,c
  4031  002730  50DE               	movf	postinc2,w,c
  4032  002732  5CE6               	subwf	postinc1,w,c
  4033  002734  50E6               	movf	postinc1,w,c
  4034  002736  0A80               	xorlw	128
  4035  002738  6E09               	movwf	(??_fputc+4)& (0+255),c
  4036  00273A  50DE               	movf	postinc2,w,c
  4037  00273C  0A80               	xorlw	128
  4038  00273E  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  4039  002740  B0D8               	btfsc	status,0,c
  4040  002742  0012               	return	
  4041  002744                     u2510:
  4042  002744  EE20 F002          	lfsr	2,2
  4043  002748  5003               	movf	fputc@fp,w,c
  4044  00274A  26D9               	addwf	fsr2l,f,c
  4045  00274C  5004               	movf	fputc@fp+1,w,c
  4046  00274E  22DA               	addwfc	fsr2h,f,c
  4047  002750  CFDE F005          	movff	postinc2,??_fputc
  4048  002754  CFDD F006          	movff	postdec2,??_fputc+1
  4049  002758  C003  FFD9         	movff	fputc@fp,fsr2l
  4050  00275C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4051  002760  CFDE F007          	movff	postinc2,??_fputc+2
  4052  002764  CFDD F008          	movff	postdec2,??_fputc+3
  4053  002768  5005               	movf	??_fputc,w,c
  4054  00276A  2407               	addwf	??_fputc+2,w,c
  4055  00276C  6ED9               	movwf	fsr2l,c
  4056  00276E  5006               	movf	??_fputc+1,w,c
  4057  002770  2008               	addwfc	??_fputc+3,w,c
  4058  002772  6EDA               	movwf	fsr2h,c
  4059  002774  C001  FFDF         	movff	fputc@c,indf2
  4060  002778  EE20 F002          	lfsr	2,2
  4061  00277C  5003               	movf	fputc@fp,w,c
  4062  00277E  26D9               	addwf	fsr2l,f,c
  4063  002780  5004               	movf	fputc@fp+1,w,c
  4064  002782  22DA               	addwfc	fsr2h,f,c
  4065  002784  2ADE               	incf	postinc2,f,c
  4066  002786  0E00               	movlw	0
  4067  002788  22DD               	addwfc	postdec2,f,c
  4068  00278A  0012               	return		;funcret
  4069  00278C                     __end_of_fputc:
  4070                           	opt callstack 0
  4071                           
  4072 ;; *************** function _putch *****************
  4073 ;; Defined at:
  4074 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/putch.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;  c               1    wreg     unsigned char 
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;  c               1    0[COMRAM] unsigned char 
  4079 ;; Return value:  Size  Location     Type
  4080 ;;                  1    wreg      void 
  4081 ;; Registers used:
  4082 ;;		wreg
  4083 ;; Tracked objects:
  4084 ;;		On entry : 0/0
  4085 ;;		On exit  : 0/0
  4086 ;;		Unchanged: 0/0
  4087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4088 ;;      Params:         0       0       0       0       0       0       0       0       0
  4089 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4090 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4091 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4092 ;;Total ram usage:        0 bytes
  4093 ;; Hardware stack levels used:    1
  4094 ;; This function calls:
  4095 ;;		Nothing
  4096 ;; This function is called by:
  4097 ;;		_fputc
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           	psect	text13
  4102  002EC6                     __ptext13:
  4103                           	opt callstack 0
  4104  002EC6                     _putch:
  4105                           	opt callstack 26
  4106                           
  4107                           ;incstack = 0
  4108  002EC6  0012               	return		;funcret
  4109  002EC8                     __end_of_putch:
  4110                           	opt callstack 0
  4111                           
  4112 ;; *************** function _floorf *****************
  4113 ;; Defined at:
  4114 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/floorf.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;  x               4   64[COMRAM] float 
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;  u               4   80[COMRAM] struct .
  4119 ;;  m               4   74[COMRAM] unsigned long 
  4120 ;;  e               2   78[COMRAM] int 
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  4   64[COMRAM] float 
  4123 ;; Registers used:
  4124 ;;		wreg, status,2, status,0
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4130 ;;      Params:         4       0       0       0       0       0       0       0       0
  4131 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4132 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4133 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4134 ;;Total ram usage:       20 bytes
  4135 ;; Hardware stack levels used:    1
  4136 ;; This function calls:
  4137 ;;		Nothing
  4138 ;; This function is called by:
  4139 ;;		_efgtoa
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           	psect	text14
  4144  001E5C                     __ptext14:
  4145                           	opt callstack 0
  4146  001E5C                     _floorf:
  4147                           	opt callstack 26
  4148                           
  4149                           ;incstack = 0
  4150  001E5C  C0CB  F051         	movff	floorf@F524,floorf@u
  4151  001E60  C0CC  F052         	movff	floorf@F524+1,floorf@u+1
  4152  001E64  C0CD  F053         	movff	floorf@F524+2,floorf@u+2
  4153  001E68  C0CE  F054         	movff	floorf@F524+3,floorf@u+3
  4154  001E6C  C041  F051         	movff	floorf@x,floorf@u
  4155  001E70  C042  F052         	movff	floorf@x+1,floorf@u+1
  4156  001E74  C043  F053         	movff	floorf@x+2,floorf@u+2
  4157  001E78  C044  F054         	movff	floorf@x+3,floorf@u+3
  4158  001E7C  0E81               	movlw	129
  4159  001E7E  6E45               	movwf	??_floorf& (0+255),c
  4160  001E80  0EFF               	movlw	255
  4161  001E82  6E46               	movwf	(??_floorf+1)& (0+255),c
  4162  001E84  C051  F047         	movff	floorf@u,??_floorf+2
  4163  001E88  C052  F048         	movff	floorf@u+1,??_floorf+3
  4164  001E8C  C053  F049         	movff	floorf@u+2,??_floorf+4
  4165  001E90  C054  F04A         	movff	floorf@u+3,??_floorf+5
  4166  001E94  0E18               	movlw	24
  4167  001E96  D005               	goto	u3110
  4168  001E98                     u3115:
  4169  001E98  90D8               	bcf	status,0,c
  4170  001E9A  324A               	rrcf	??_floorf+5,f,c
  4171  001E9C  3249               	rrcf	??_floorf+4,f,c
  4172  001E9E  3248               	rrcf	??_floorf+3,f,c
  4173  001EA0  3247               	rrcf	??_floorf+2,f,c
  4174  001EA2                     u3110:
  4175  001EA2  2EE8               	decfsz	wreg,f,c
  4176  001EA4  D7F9               	goto	u3115
  4177  001EA6  5047               	movf	??_floorf+2,w,c
  4178  001EA8  2445               	addwf	??_floorf,w,c
  4179  001EAA  6E4F               	movwf	floorf@e,c
  4180  001EAC  0E00               	movlw	0
  4181  001EAE  2046               	addwfc	??_floorf+1,w,c
  4182  001EB0  6E50               	movwf	floorf@e+1,c
  4183  001EB2  BE50               	btfsc	floorf@e+1,7,c
  4184  001EB4  D00F               	goto	l2864
  4185  001EB6  5050               	movf	floorf@e+1,w,c
  4186  001EB8  E104               	bnz	u3120
  4187  001EBA  0E17               	movlw	23
  4188  001EBC  5C4F               	subwf	floorf@e,w,c
  4189  001EBE  A0D8               	btfss	status,0,c
  4190  001EC0  D009               	goto	l2864
  4191  001EC2                     u3120:
  4192  001EC2  C041  F041         	movff	floorf@x,?_floorf
  4193  001EC6  C042  F042         	movff	floorf@x+1,?_floorf+1
  4194  001ECA  C043  F043         	movff	floorf@x+2,?_floorf+2
  4195  001ECE  C044  F044         	movff	floorf@x+3,?_floorf+3
  4196  001ED2  0012               	return	
  4197  001ED4                     l2864:
  4198  001ED4  BE50               	btfsc	floorf@e+1,7,c
  4199  001ED6  D05E               	goto	l2874
  4200  001ED8  C04F  F045         	movff	floorf@e,??_floorf
  4201  001EDC  0EFF               	movlw	255
  4202  001EDE  6E46               	movwf	(??_floorf+1)& (0+255),c
  4203  001EE0  0EFF               	movlw	255
  4204  001EE2  6E47               	movwf	(??_floorf+2)& (0+255),c
  4205  001EE4  0E7F               	movlw	127
  4206  001EE6  6E48               	movwf	(??_floorf+3)& (0+255),c
  4207  001EE8  0E00               	movlw	0
  4208  001EEA  6E49               	movwf	(??_floorf+4)& (0+255),c
  4209  001EEC                     u3145:
  4210  001EEC  6645               	tstfsz	??_floorf,c
  4211  001EEE  D001               	goto	u3146
  4212  001EF0  D007               	goto	u3147
  4213  001EF2                     u3146:
  4214  001EF2  3449               	rlcf	??_floorf+4,w,c
  4215  001EF4  3249               	rrcf	??_floorf+4,f,c
  4216  001EF6  3248               	rrcf	??_floorf+3,f,c
  4217  001EF8  3247               	rrcf	??_floorf+2,f,c
  4218  001EFA  3246               	rrcf	??_floorf+1,f,c
  4219  001EFC  2E45               	decfsz	??_floorf,f,c
  4220  001EFE  D7F6               	goto	u3145
  4221  001F00                     u3147:
  4222  001F00  C046  F04B         	movff	??_floorf+1,floorf@m
  4223  001F04  C047  F04C         	movff	??_floorf+2,floorf@m+1
  4224  001F08  C048  F04D         	movff	??_floorf+3,floorf@m+2
  4225  001F0C  C049  F04E         	movff	??_floorf+4,floorf@m+3
  4226  001F10  504B               	movf	floorf@m,w,c
  4227  001F12  1451               	andwf	floorf@u,w,c
  4228  001F14  6E45               	movwf	??_floorf& (0+255),c
  4229  001F16  504C               	movf	floorf@m+1,w,c
  4230  001F18  1452               	andwf	floorf@u+1,w,c
  4231  001F1A  6E46               	movwf	(??_floorf+1)& (0+255),c
  4232  001F1C  504D               	movf	floorf@m+2,w,c
  4233  001F1E  1453               	andwf	floorf@u+2,w,c
  4234  001F20  6E47               	movwf	(??_floorf+2)& (0+255),c
  4235  001F22  504E               	movf	floorf@m+3,w,c
  4236  001F24  1454               	andwf	floorf@u+3,w,c
  4237  001F26  6E48               	movwf	(??_floorf+3)& (0+255),c
  4238  001F28  5045               	movf	??_floorf,w,c
  4239  001F2A  1046               	iorwf	??_floorf+1,w,c
  4240  001F2C  1047               	iorwf	??_floorf+2,w,c
  4241  001F2E  1048               	iorwf	??_floorf+3,w,c
  4242  001F30  B4D8               	btfsc	status,2,c
  4243  001F32  D7C7               	goto	u3120
  4244  001F34  C051  F045         	movff	floorf@u,??_floorf
  4245  001F38  C052  F046         	movff	floorf@u+1,??_floorf+1
  4246  001F3C  C053  F047         	movff	floorf@u+2,??_floorf+2
  4247  001F40  C054  F048         	movff	floorf@u+3,??_floorf+3
  4248  001F44  0E20               	movlw	32
  4249  001F46  D005               	goto	u3160
  4250  001F48                     u3165:
  4251  001F48  90D8               	bcf	status,0,c
  4252  001F4A  3248               	rrcf	??_floorf+3,f,c
  4253  001F4C  3247               	rrcf	??_floorf+2,f,c
  4254  001F4E  3246               	rrcf	??_floorf+1,f,c
  4255  001F50  3245               	rrcf	??_floorf,f,c
  4256  001F52                     u3160:
  4257  001F52  2EE8               	decfsz	wreg,f,c
  4258  001F54  D7F9               	goto	u3165
  4259  001F56  5045               	movf	??_floorf,w,c
  4260  001F58  1046               	iorwf	??_floorf+1,w,c
  4261  001F5A  1047               	iorwf	??_floorf+2,w,c
  4262  001F5C  1048               	iorwf	??_floorf+3,w,c
  4263  001F5E  B4D8               	btfsc	status,2,c
  4264  001F60  D008               	goto	l982
  4265  001F62  504B               	movf	floorf@m,w,c
  4266  001F64  2651               	addwf	floorf@u,f,c
  4267  001F66  504C               	movf	floorf@m+1,w,c
  4268  001F68  2252               	addwfc	floorf@u+1,f,c
  4269  001F6A  504D               	movf	floorf@m+2,w,c
  4270  001F6C  2253               	addwfc	floorf@u+2,f,c
  4271  001F6E  504E               	movf	floorf@m+3,w,c
  4272  001F70  2254               	addwfc	floorf@u+3,f,c
  4273  001F72                     l982:
  4274  001F72  1C4B               	comf	floorf@m,w,c
  4275  001F74  6E45               	movwf	??_floorf& (0+255),c
  4276  001F76  1C4C               	comf	floorf@m+1,w,c
  4277  001F78  6E46               	movwf	(??_floorf+1)& (0+255),c
  4278  001F7A  1C4D               	comf	floorf@m+2,w,c
  4279  001F7C  6E47               	movwf	(??_floorf+2)& (0+255),c
  4280  001F7E  1C4E               	comf	floorf@m+3,w,c
  4281  001F80  6E48               	movwf	(??_floorf+3)& (0+255),c
  4282  001F82  5045               	movf	??_floorf,w,c
  4283  001F84  1651               	andwf	floorf@u,f,c
  4284  001F86  5046               	movf	??_floorf+1,w,c
  4285  001F88  1652               	andwf	floorf@u+1,f,c
  4286  001F8A  5047               	movf	??_floorf+2,w,c
  4287  001F8C  1653               	andwf	floorf@u+2,f,c
  4288  001F8E  5048               	movf	??_floorf+3,w,c
  4289  001F90  1654               	andwf	floorf@u+3,f,c
  4290  001F92  D036               	goto	l2882
  4291  001F94                     l2874:
  4292  001F94  C051  F045         	movff	floorf@u,??_floorf
  4293  001F98  C052  F046         	movff	floorf@u+1,??_floorf+1
  4294  001F9C  C053  F047         	movff	floorf@u+2,??_floorf+2
  4295  001FA0  C054  F048         	movff	floorf@u+3,??_floorf+3
  4296  001FA4  0E20               	movlw	32
  4297  001FA6  D005               	goto	u3180
  4298  001FA8                     u3185:
  4299  001FA8  90D8               	bcf	status,0,c
  4300  001FAA  3248               	rrcf	??_floorf+3,f,c
  4301  001FAC  3247               	rrcf	??_floorf+2,f,c
  4302  001FAE  3246               	rrcf	??_floorf+1,f,c
  4303  001FB0  3245               	rrcf	??_floorf,f,c
  4304  001FB2                     u3180:
  4305  001FB2  2EE8               	decfsz	wreg,f,c
  4306  001FB4  D7F9               	goto	u3185
  4307  001FB6  5045               	movf	??_floorf,w,c
  4308  001FB8  1046               	iorwf	??_floorf+1,w,c
  4309  001FBA  1047               	iorwf	??_floorf+2,w,c
  4310  001FBC  1048               	iorwf	??_floorf+3,w,c
  4311  001FBE  A4D8               	btfss	status,2,c
  4312  001FC0  D008               	goto	l2878
  4313  001FC2  0E00               	movlw	0
  4314  001FC4  6E51               	movwf	floorf@u,c
  4315  001FC6  0E00               	movlw	0
  4316  001FC8  6E52               	movwf	floorf@u+1,c
  4317  001FCA  0E00               	movlw	0
  4318  001FCC  6E53               	movwf	floorf@u+2,c
  4319  001FCE  0E00               	movlw	0
  4320  001FD0  D016               	goto	L6
  4321  001FD2                     l2878:
  4322  001FD2  90D8               	bcf	status,0,c
  4323  001FD4  3451               	rlcf	floorf@u,w,c
  4324  001FD6  6E45               	movwf	??_floorf& (0+255),c
  4325  001FD8  3452               	rlcf	floorf@u+1,w,c
  4326  001FDA  6E46               	movwf	(??_floorf+1)& (0+255),c
  4327  001FDC  3453               	rlcf	floorf@u+2,w,c
  4328  001FDE  6E47               	movwf	(??_floorf+2)& (0+255),c
  4329  001FE0  3454               	rlcf	floorf@u+3,w,c
  4330  001FE2  6E48               	movwf	(??_floorf+3)& (0+255),c
  4331  001FE4  5045               	movf	??_floorf,w,c
  4332  001FE6  1046               	iorwf	??_floorf+1,w,c
  4333  001FE8  1047               	iorwf	??_floorf+2,w,c
  4334  001FEA  1048               	iorwf	??_floorf+3,w,c
  4335  001FEC  B4D8               	btfsc	status,2,c
  4336  001FEE  D008               	goto	l2882
  4337  001FF0  0E00               	movlw	0
  4338  001FF2  6E51               	movwf	floorf@u,c
  4339  001FF4  0E00               	movlw	0
  4340  001FF6  6E52               	movwf	floorf@u+1,c
  4341  001FF8  0E80               	movlw	128
  4342  001FFA  6E53               	movwf	floorf@u+2,c
  4343  001FFC  0EBF               	movlw	191
  4344  001FFE                     L6:
  4345  001FFE  6E54               	movwf	floorf@u+3,c
  4346  002000                     l2882:
  4347  002000  C051  F041         	movff	floorf@u,?_floorf
  4348  002004  C052  F042         	movff	floorf@u+1,?_floorf+1
  4349  002008  C053  F043         	movff	floorf@u+2,?_floorf+2
  4350  00200C  C054  F044         	movff	floorf@u+3,?_floorf+3
  4351  002010  0012               	return		;funcret
  4352  002012                     __end_of_floorf:
  4353                           	opt callstack 0
  4354                           
  4355 ;; *************** function ___fpclassifyf *****************
  4356 ;; Defined at:
  4357 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/__fpclassifyf.c"
  4358 ;; Parameters:    Size  Location     Type
  4359 ;;  x               4    0[COMRAM] float 
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;  u               4   10[COMRAM] struct .
  4362 ;;  e               2    8[COMRAM] int 
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  2    0[COMRAM] int 
  4365 ;; Registers used:
  4366 ;;		wreg, status,2, status,0
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4372 ;;      Params:         4       0       0       0       0       0       0       0       0
  4373 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4374 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4375 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4376 ;;Total ram usage:       14 bytes
  4377 ;; Hardware stack levels used:    1
  4378 ;; This function calls:
  4379 ;;		Nothing
  4380 ;; This function is called by:
  4381 ;;		_efgtoa
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           	psect	text15
  4386  0024C4                     __ptext15:
  4387                           	opt callstack 0
  4388  0024C4                     ___fpclassifyf:
  4389                           	opt callstack 26
  4390                           
  4391                           ;incstack = 0
  4392  0024C4  C0CF  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  4393  0024C8  C0D0  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  4394  0024CC  C0D1  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  4395  0024D0  C0D2  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  4396  0024D4  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4397  0024D8  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4398  0024DC  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4399  0024E0  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4400  0024E4  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4401  0024E8  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4402  0024EC  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4403  0024F0  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4404  0024F4  0E18               	movlw	24
  4405  0024F6  D005               	goto	u2990
  4406  0024F8                     u2995:
  4407  0024F8  90D8               	bcf	status,0,c
  4408  0024FA  3208               	rrcf	??___fpclassifyf+3,f,c
  4409  0024FC  3207               	rrcf	??___fpclassifyf+2,f,c
  4410  0024FE  3206               	rrcf	??___fpclassifyf+1,f,c
  4411  002500  3205               	rrcf	??___fpclassifyf,f,c
  4412  002502                     u2990:
  4413  002502  2EE8               	decfsz	wreg,f,c
  4414  002504  D7F9               	goto	u2995
  4415  002506  5005               	movf	??___fpclassifyf,w,c
  4416  002508  6E09               	movwf	___fpclassifyf@e,c
  4417  00250A  6A0A               	clrf	___fpclassifyf@e+1,c
  4418  00250C  5009               	movf	___fpclassifyf@e,w,c
  4419  00250E  100A               	iorwf	___fpclassifyf@e+1,w,c
  4420  002510  A4D8               	btfss	status,2,c
  4421  002512  D019               	goto	l2834
  4422  002514  90D8               	bcf	status,0,c
  4423  002516  340B               	rlcf	___fpclassifyf@u,w,c
  4424  002518  6E05               	movwf	??___fpclassifyf& (0+255),c
  4425  00251A  340C               	rlcf	___fpclassifyf@u+1,w,c
  4426  00251C  6E06               	movwf	(??___fpclassifyf+1)& (0+255),c
  4427  00251E  340D               	rlcf	___fpclassifyf@u+2,w,c
  4428  002520  6E07               	movwf	(??___fpclassifyf+2)& (0+255),c
  4429  002522  340E               	rlcf	___fpclassifyf@u+3,w,c
  4430  002524  6E08               	movwf	(??___fpclassifyf+3)& (0+255),c
  4431  002526  5005               	movf	??___fpclassifyf,w,c
  4432  002528  1006               	iorwf	??___fpclassifyf+1,w,c
  4433  00252A  1007               	iorwf	??___fpclassifyf+2,w,c
  4434  00252C  1008               	iorwf	??___fpclassifyf+3,w,c
  4435  00252E  A4D8               	btfss	status,2,c
  4436  002530  D005               	goto	l2830
  4437  002532  0E00               	movlw	0
  4438  002534  6E02               	movwf	?___fpclassifyf+1,c
  4439  002536  0E02               	movlw	2
  4440  002538  6E01               	movwf	?___fpclassifyf,c
  4441  00253A  0012               	return	
  4442  00253C                     l2830:
  4443  00253C  0E00               	movlw	0
  4444  00253E  6E02               	movwf	?___fpclassifyf+1,c
  4445  002540  0E03               	movlw	3
  4446  002542  6E01               	movwf	?___fpclassifyf,c
  4447  002544  0012               	return	
  4448  002546                     l2834:
  4449  002546  2809               	incf	___fpclassifyf@e,w,c
  4450  002548  100A               	iorwf	___fpclassifyf@e+1,w,c
  4451  00254A  A4D8               	btfss	status,2,c
  4452  00254C  D01C               	goto	l2840
  4453  00254E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4454  002552  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4455  002556  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4456  00255A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4457  00255E  0E09               	movlw	9
  4458  002560                     u3035:
  4459  002560  90D8               	bcf	status,0,c
  4460  002562  3605               	rlcf	??___fpclassifyf,f,c
  4461  002564  3606               	rlcf	??___fpclassifyf+1,f,c
  4462  002566  3607               	rlcf	??___fpclassifyf+2,f,c
  4463  002568  3608               	rlcf	??___fpclassifyf+3,f,c
  4464  00256A  2EE8               	decfsz	wreg,f,c
  4465  00256C  D7F9               	goto	u3035
  4466  00256E  5005               	movf	??___fpclassifyf,w,c
  4467  002570  1006               	iorwf	??___fpclassifyf+1,w,c
  4468  002572  1007               	iorwf	??___fpclassifyf+2,w,c
  4469  002574  1008               	iorwf	??___fpclassifyf+3,w,c
  4470  002576  A4D8               	btfss	status,2,c
  4471  002578  D002               	goto	u3040
  4472  00257A  0E01               	movlw	1
  4473  00257C  D001               	goto	u3050
  4474  00257E                     u3040:
  4475  00257E  0E00               	movlw	0
  4476  002580                     u3050:
  4477  002580  6E01               	movwf	?___fpclassifyf,c
  4478  002582  6A02               	clrf	?___fpclassifyf+1,c
  4479  002584  0012               	return	
  4480  002586                     l2840:
  4481  002586  0E00               	movlw	0
  4482  002588  6E02               	movwf	?___fpclassifyf+1,c
  4483  00258A  0E04               	movlw	4
  4484  00258C  6E01               	movwf	?___fpclassifyf,c
  4485  00258E  0012               	return		;funcret
  4486  002590                     __end_of___fpclassifyf:
  4487                           	opt callstack 0
  4488                           
  4489 ;; *************** function ___fltol *****************
  4490 ;; Defined at:
  4491 ;;		line 43 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fltol.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;  f1              4    0[COMRAM] int 
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;  exp1            1    9[COMRAM] unsigned char 
  4496 ;;  sign1           1    8[COMRAM] unsigned char 
  4497 ;; Return value:  Size  Location     Type
  4498 ;;                  4    0[COMRAM] long 
  4499 ;; Registers used:
  4500 ;;		wreg, status,2, status,0
  4501 ;; Tracked objects:
  4502 ;;		On entry : 0/0
  4503 ;;		On exit  : 0/0
  4504 ;;		Unchanged: 0/0
  4505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4506 ;;      Params:         4       0       0       0       0       0       0       0       0
  4507 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4508 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4509 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4510 ;;Total ram usage:       10 bytes
  4511 ;; Hardware stack levels used:    1
  4512 ;; This function calls:
  4513 ;;		Nothing
  4514 ;; This function is called by:
  4515 ;;		_efgtoa
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           	psect	text16
  4520  002590                     __ptext16:
  4521                           	opt callstack 0
  4522  002590                     ___fltol:
  4523                           	opt callstack 26
  4524                           
  4525                           ;incstack = 0
  4526  002590  3403               	rlcf	___fltol@f1+2,w,c
  4527  002592  3404               	rlcf	___fltol@f1+3,w,c
  4528  002594  6E0A               	movwf	___fltol@exp1,c
  4529  002596  500A               	movf	___fltol@exp1,w,c
  4530  002598  A4D8               	btfss	status,2,c
  4531  00259A  D009               	goto	l3302
  4532  00259C                     u3860:
  4533  00259C  0E00               	movlw	0
  4534  00259E  6E01               	movwf	?___fltol,c
  4535  0025A0  0E00               	movlw	0
  4536  0025A2  6E02               	movwf	?___fltol+1,c
  4537  0025A4  0E00               	movlw	0
  4538  0025A6  6E03               	movwf	?___fltol+2,c
  4539  0025A8  0E00               	movlw	0
  4540  0025AA  6E04               	movwf	?___fltol+3,c
  4541  0025AC  0012               	return	
  4542  0025AE                     l3302:
  4543  0025AE  C001  F005         	movff	___fltol@f1,??___fltol
  4544  0025B2  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4545  0025B6  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4546  0025BA  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4547  0025BE  0E20               	movlw	32
  4548  0025C0  D005               	goto	u3870
  4549  0025C2                     u3875:
  4550  0025C2  90D8               	bcf	status,0,c
  4551  0025C4  3208               	rrcf	??___fltol+3,f,c
  4552  0025C6  3207               	rrcf	??___fltol+2,f,c
  4553  0025C8  3206               	rrcf	??___fltol+1,f,c
  4554  0025CA  3205               	rrcf	??___fltol,f,c
  4555  0025CC                     u3870:
  4556  0025CC  2EE8               	decfsz	wreg,f,c
  4557  0025CE  D7F9               	goto	u3875
  4558  0025D0  5005               	movf	??___fltol,w,c
  4559  0025D2  6E09               	movwf	___fltol@sign1,c
  4560  0025D4  8E03               	bsf	___fltol@f1+2,7,c
  4561  0025D6  0EFF               	movlw	255
  4562  0025D8  1601               	andwf	___fltol@f1,f,c
  4563  0025DA  0EFF               	movlw	255
  4564  0025DC  1602               	andwf	___fltol@f1+1,f,c
  4565  0025DE  0EFF               	movlw	255
  4566  0025E0  1603               	andwf	___fltol@f1+2,f,c
  4567  0025E2  0E00               	movlw	0
  4568  0025E4  1604               	andwf	___fltol@f1+3,f,c
  4569  0025E6  0E96               	movlw	150
  4570  0025E8  5E0A               	subwf	___fltol@exp1,f,c
  4571  0025EA  AE0A               	btfss	___fltol@exp1,7,c
  4572  0025EC  D00D               	goto	l3322
  4573  0025EE  500A               	movf	___fltol@exp1,w,c
  4574  0025F0  0A80               	xorlw	128
  4575  0025F2  0F97               	addlw	151
  4576  0025F4  A0D8               	btfss	status,0,c
  4577  0025F6  D7D2               	goto	u3860
  4578  0025F8                     l3318:
  4579  0025F8  90D8               	bcf	status,0,c
  4580  0025FA  3204               	rrcf	___fltol@f1+3,f,c
  4581  0025FC  3203               	rrcf	___fltol@f1+2,f,c
  4582  0025FE  3202               	rrcf	___fltol@f1+1,f,c
  4583  002600  3201               	rrcf	___fltol@f1,f,c
  4584  002602  3E0A               	incfsz	___fltol@exp1,f,c
  4585  002604  D7F9               	goto	l3318
  4586  002606  D00D               	goto	u3910
  4587  002608                     l3322:
  4588  002608  0E1F               	movlw	31
  4589  00260A  640A               	cpfsgt	___fltol@exp1,c
  4590  00260C  D007               	goto	l3330
  4591  00260E  D7C6               	goto	u3860
  4592  002610                     l3328:
  4593  002610  90D8               	bcf	status,0,c
  4594  002612  3601               	rlcf	___fltol@f1,f,c
  4595  002614  3602               	rlcf	___fltol@f1+1,f,c
  4596  002616  3603               	rlcf	___fltol@f1+2,f,c
  4597  002618  3604               	rlcf	___fltol@f1+3,f,c
  4598  00261A  060A               	decf	___fltol@exp1,f,c
  4599  00261C                     l3330:
  4600  00261C  500A               	movf	___fltol@exp1,w,c
  4601  00261E  A4D8               	btfss	status,2,c
  4602  002620  D7F7               	goto	l3328
  4603  002622                     u3910:
  4604  002622  5009               	movf	___fltol@sign1,w,c
  4605  002624  B4D8               	btfsc	status,2,c
  4606  002626  D008               	goto	l3336
  4607  002628  1E04               	comf	___fltol@f1+3,f,c
  4608  00262A  1E03               	comf	___fltol@f1+2,f,c
  4609  00262C  1E02               	comf	___fltol@f1+1,f,c
  4610  00262E  6C01               	negf	___fltol@f1,c
  4611  002630  0E00               	movlw	0
  4612  002632  2202               	addwfc	___fltol@f1+1,f,c
  4613  002634  2203               	addwfc	___fltol@f1+2,f,c
  4614  002636  2204               	addwfc	___fltol@f1+3,f,c
  4615  002638                     l3336:
  4616  002638  C001  F001         	movff	___fltol@f1,?___fltol
  4617  00263C  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4618  002640  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4619  002644  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4620  002648  0012               	return		;funcret
  4621  00264A                     __end_of___fltol:
  4622                           	opt callstack 0
  4623                           
  4624 ;; *************** function ___flsub *****************
  4625 ;; Defined at:
  4626 ;;		line 245 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;  b               4   39[COMRAM] long 
  4629 ;;  a               4   43[COMRAM] long 
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;		None
  4632 ;; Return value:  Size  Location     Type
  4633 ;;                  4   39[COMRAM] long 
  4634 ;; Registers used:
  4635 ;;		wreg, status,2, status,0, cstack
  4636 ;; Tracked objects:
  4637 ;;		On entry : 0/0
  4638 ;;		On exit  : 0/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4641 ;;      Params:         8       0       0       0       0       0       0       0       0
  4642 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4643 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4644 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4645 ;;Total ram usage:        8 bytes
  4646 ;; Hardware stack levels used:    1
  4647 ;; Hardware stack levels required when called:    1
  4648 ;; This function calls:
  4649 ;;		___fladd
  4650 ;; This function is called by:
  4651 ;;		_efgtoa
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655                           	psect	text17
  4656  002C20                     __ptext17:
  4657                           	opt callstack 0
  4658  002C20                     ___flsub:
  4659                           	opt callstack 25
  4660                           
  4661                           ;incstack = 0
  4662  002C20  0E00               	movlw	0
  4663  002C22  1A2C               	xorwf	___flsub@a,f,c
  4664  002C24  0E00               	movlw	0
  4665  002C26  1A2D               	xorwf	___flsub@a+1,f,c
  4666  002C28  0E00               	movlw	0
  4667  002C2A  1A2E               	xorwf	___flsub@a+2,f,c
  4668  002C2C  0E80               	movlw	128
  4669  002C2E  1A2F               	xorwf	___flsub@a+3,f,c
  4670  002C30  C028  F001         	movff	___flsub@b,___fladd@b
  4671  002C34  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  4672  002C38  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  4673  002C3C  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  4674  002C40  C02C  F005         	movff	___flsub@a,___fladd@a
  4675  002C44  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  4676  002C48  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  4677  002C4C  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  4678  002C50  EC64  F00C         	call	___fladd	;wreg free
  4679  002C54  C001  F028         	movff	?___fladd,?___flsub
  4680  002C58  C002  F029         	movff	?___fladd+1,?___flsub+1
  4681  002C5C  C003  F02A         	movff	?___fladd+2,?___flsub+2
  4682  002C60  C004  F02B         	movff	?___fladd+3,?___flsub+3
  4683  002C64  0012               	return		;funcret
  4684  002C66                     __end_of___flsub:
  4685                           	opt callstack 0
  4686                           
  4687 ;; *************** function ___fladd *****************
  4688 ;; Defined at:
  4689 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcadd.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;  b               4    0[COMRAM] long 
  4692 ;;  a               4    4[COMRAM] long 
  4693 ;; Auto vars:     Size  Location     Type
  4694 ;;  grs             1   15[COMRAM] unsigned char 
  4695 ;;  bexp            1   14[COMRAM] unsigned char 
  4696 ;;  aexp            1   13[COMRAM] unsigned char 
  4697 ;;  signs           1   12[COMRAM] unsigned char 
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  4    0[COMRAM] unsigned char 
  4700 ;; Registers used:
  4701 ;;		wreg, status,2, status,0
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4707 ;;      Params:         8       0       0       0       0       0       0       0       0
  4708 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4709 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4710 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4711 ;;Total ram usage:       16 bytes
  4712 ;; Hardware stack levels used:    1
  4713 ;; This function calls:
  4714 ;;		Nothing
  4715 ;; This function is called by:
  4716 ;;		_efgtoa
  4717 ;;		___flsub
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text18
  4722  0018C8                     __ptext18:
  4723                           	opt callstack 0
  4724  0018C8                     ___fladd:
  4725                           	opt callstack 25
  4726                           
  4727                           ;incstack = 0
  4728  0018C8  5004               	movf	___fladd@b+3,w,c
  4729  0018CA  0B80               	andlw	128
  4730  0018CC  6E0D               	movwf	___fladd@signs,c
  4731  0018CE  5004               	movf	___fladd@b+3,w,c
  4732  0018D0  2404               	addwf	___fladd@b+3,w,c
  4733  0018D2  6E0F               	movwf	___fladd@bexp,c
  4734  0018D4  BE03               	btfsc	___fladd@b+2,7,c
  4735  0018D6  800F               	bsf	___fladd@bexp,0,c
  4736  0018D8  500F               	movf	___fladd@bexp,w,c
  4737  0018DA  B4D8               	btfsc	status,2,c
  4738  0018DC  D00D               	goto	l2614
  4739  0018DE  280F               	incf	___fladd@bexp,w,c
  4740  0018E0  A4D8               	btfss	status,2,c
  4741  0018E2  D008               	goto	l2610
  4742  0018E4  0E00               	movlw	0
  4743  0018E6  6E01               	movwf	___fladd@b,c
  4744  0018E8  0E00               	movlw	0
  4745  0018EA  6E02               	movwf	___fladd@b+1,c
  4746  0018EC  0E00               	movlw	0
  4747  0018EE  6E03               	movwf	___fladd@b+2,c
  4748  0018F0  0E00               	movlw	0
  4749  0018F2  6E04               	movwf	___fladd@b+3,c
  4750  0018F4                     l2610:
  4751  0018F4  8E03               	bsf	___fladd@b+2,7,c
  4752  0018F6  D006               	goto	L7
  4753  0018F8                     l2614:
  4754  0018F8  0E00               	movlw	0
  4755  0018FA  6E01               	movwf	___fladd@b,c
  4756  0018FC  0E00               	movlw	0
  4757  0018FE  6E02               	movwf	___fladd@b+1,c
  4758  001900  0E00               	movlw	0
  4759  001902  6E03               	movwf	___fladd@b+2,c
  4760  001904                     L7:
  4761  001904  0E00               	movlw	0
  4762  001906  6E04               	movwf	___fladd@b+3,c
  4763  001908  5008               	movf	___fladd@a+3,w,c
  4764  00190A  0B80               	andlw	128
  4765  00190C  6E0E               	movwf	___fladd@aexp,c
  4766  00190E  500D               	movf	___fladd@signs,w,c
  4767  001910  180E               	xorwf	___fladd@aexp,w,c
  4768  001912  A4D8               	btfss	status,2,c
  4769  001914  8C0D               	bsf	___fladd@signs,6,c
  4770  001916  5008               	movf	___fladd@a+3,w,c
  4771  001918  2408               	addwf	___fladd@a+3,w,c
  4772  00191A  6E0E               	movwf	___fladd@aexp,c
  4773  00191C  BE07               	btfsc	___fladd@a+2,7,c
  4774  00191E  800E               	bsf	___fladd@aexp,0,c
  4775  001920  500E               	movf	___fladd@aexp,w,c
  4776  001922  B4D8               	btfsc	status,2,c
  4777  001924  D00D               	goto	l2638
  4778  001926  280E               	incf	___fladd@aexp,w,c
  4779  001928  A4D8               	btfss	status,2,c
  4780  00192A  D008               	goto	l2634
  4781  00192C  0E00               	movlw	0
  4782  00192E  6E05               	movwf	___fladd@a,c
  4783  001930  0E00               	movlw	0
  4784  001932  6E06               	movwf	___fladd@a+1,c
  4785  001934  0E00               	movlw	0
  4786  001936  6E07               	movwf	___fladd@a+2,c
  4787  001938  0E00               	movlw	0
  4788  00193A  6E08               	movwf	___fladd@a+3,c
  4789  00193C                     l2634:
  4790  00193C  8E07               	bsf	___fladd@a+2,7,c
  4791  00193E  D006               	goto	L8
  4792  001940                     l2638:
  4793  001940  0E00               	movlw	0
  4794  001942  6E05               	movwf	___fladd@a,c
  4795  001944  0E00               	movlw	0
  4796  001946  6E06               	movwf	___fladd@a+1,c
  4797  001948  0E00               	movlw	0
  4798  00194A  6E07               	movwf	___fladd@a+2,c
  4799  00194C                     L8:
  4800  00194C  0E00               	movlw	0
  4801  00194E  6E08               	movwf	___fladd@a+3,c
  4802  001950  500F               	movf	___fladd@bexp,w,c
  4803  001952  5C0E               	subwf	___fladd@aexp,w,c
  4804  001954  B0D8               	btfsc	status,0,c
  4805  001956  D022               	goto	l2676
  4806  001958  AC0D               	btfss	___fladd@signs,6,c
  4807  00195A  D002               	goto	l2646
  4808  00195C  0E80               	movlw	128
  4809  00195E  1A0D               	xorwf	___fladd@signs,f,c
  4810  001960                     l2646:
  4811  001960  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4812  001964  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4813  001968  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4814  00196C  C001  F010         	movff	___fladd@b,___fladd@grs
  4815  001970  C005  F001         	movff	___fladd@a,___fladd@b
  4816  001974  C010  F005         	movff	___fladd@grs,___fladd@a
  4817  001978  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4818  00197C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4819  001980  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4820  001984  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4821  001988  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4822  00198C  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4823  001990  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4824  001994  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4825  001998  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4826  00199C                     l2676:
  4827  00199C  0E00               	movlw	0
  4828  00199E  6E10               	movwf	___fladd@grs,c
  4829  0019A0  500F               	movf	___fladd@bexp,w,c
  4830  0019A2  C00E  F009         	movff	___fladd@aexp,??___fladd
  4831  0019A6  6A0A               	clrf	(??___fladd+1)& (0+255),c
  4832  0019A8  5E09               	subwf	??___fladd,f,c
  4833  0019AA  0E00               	movlw	0
  4834  0019AC  5A0A               	subwfb	??___fladd+1,f,c
  4835  0019AE  BE0A               	btfsc	??___fladd+1,7,c
  4836  0019B0  D02C               	goto	l789
  4837  0019B2  500A               	movf	??___fladd+1,w,c
  4838  0019B4  E104               	bnz	u2650
  4839  0019B6  0E1A               	movlw	26
  4840  0019B8  5C09               	subwf	??___fladd,w,c
  4841  0019BA  A0D8               	btfss	status,0,c
  4842  0019BC  D026               	goto	l789
  4843  0019BE                     u2650:
  4844  0019BE  5001               	movf	___fladd@b,w,c
  4845  0019C0  1002               	iorwf	___fladd@b+1,w,c
  4846  0019C2  1003               	iorwf	___fladd@b+2,w,c
  4847  0019C4  1004               	iorwf	___fladd@b+3,w,c
  4848  0019C6  B4D8               	btfsc	status,2,c
  4849  0019C8  D002               	goto	u2660
  4850  0019CA  0E01               	movlw	1
  4851  0019CC  D001               	goto	u2670
  4852  0019CE                     u2660:
  4853  0019CE  0E00               	movlw	0
  4854  0019D0                     u2670:
  4855  0019D0  6E10               	movwf	___fladd@grs,c
  4856  0019D2  0E00               	movlw	0
  4857  0019D4  6E01               	movwf	___fladd@b,c
  4858  0019D6  0E00               	movlw	0
  4859  0019D8  6E02               	movwf	___fladd@b+1,c
  4860  0019DA  0E00               	movlw	0
  4861  0019DC  6E03               	movwf	___fladd@b+2,c
  4862  0019DE  0E00               	movlw	0
  4863  0019E0  6E04               	movwf	___fladd@b+3,c
  4864  0019E2  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4865  0019E6  D015               	goto	u2700
  4866  0019E8                     l790:
  4867  0019E8  A010               	btfss	___fladd@grs,0,c
  4868  0019EA  D005               	goto	l2688
  4869  0019EC  90D8               	bcf	status,0,c
  4870  0019EE  3010               	rrcf	___fladd@grs,w,c
  4871  0019F0  0901               	iorlw	1
  4872  0019F2  6E10               	movwf	___fladd@grs,c
  4873  0019F4  D002               	goto	l2690
  4874  0019F6                     l2688:
  4875  0019F6  90D8               	bcf	status,0,c
  4876  0019F8  3210               	rrcf	___fladd@grs,f,c
  4877  0019FA                     l2690:
  4878  0019FA  B001               	btfsc	___fladd@b,0,c
  4879  0019FC  8E10               	bsf	___fladd@grs,7,c
  4880  0019FE  3404               	rlcf	___fladd@b+3,w,c
  4881  001A00  3204               	rrcf	___fladd@b+3,f,c
  4882  001A02  3203               	rrcf	___fladd@b+2,f,c
  4883  001A04  3202               	rrcf	___fladd@b+1,f,c
  4884  001A06  3201               	rrcf	___fladd@b,f,c
  4885  001A08  2A0F               	incf	___fladd@bexp,f,c
  4886  001A0A                     l789:
  4887  001A0A  500E               	movf	___fladd@aexp,w,c
  4888  001A0C  5C0F               	subwf	___fladd@bexp,w,c
  4889  001A0E  A0D8               	btfss	status,0,c
  4890  001A10  D7EB               	goto	l790
  4891  001A12                     u2700:
  4892  001A12  BC0D               	btfsc	___fladd@signs,6,c
  4893  001A14  D028               	goto	l2722
  4894  001A16  500F               	movf	___fladd@bexp,w,c
  4895  001A18  A4D8               	btfss	status,2,c
  4896  001A1A  D009               	goto	l2704
  4897  001A1C  0E00               	movlw	0
  4898  001A1E  6E01               	movwf	?___fladd,c
  4899  001A20  0E00               	movlw	0
  4900  001A22  6E02               	movwf	?___fladd+1,c
  4901  001A24  0E00               	movlw	0
  4902  001A26  6E03               	movwf	?___fladd+2,c
  4903  001A28  0E00               	movlw	0
  4904  001A2A  6E04               	movwf	?___fladd+3,c
  4905  001A2C  0012               	return	
  4906  001A2E                     l2704:
  4907  001A2E  5005               	movf	___fladd@a,w,c
  4908  001A30  2601               	addwf	___fladd@b,f,c
  4909  001A32  5006               	movf	___fladd@a+1,w,c
  4910  001A34  2202               	addwfc	___fladd@b+1,f,c
  4911  001A36  5007               	movf	___fladd@a+2,w,c
  4912  001A38  2203               	addwfc	___fladd@b+2,f,c
  4913  001A3A  5008               	movf	___fladd@a+3,w,c
  4914  001A3C  2204               	addwfc	___fladd@b+3,f,c
  4915  001A3E  A004               	btfss	___fladd@b+3,0,c
  4916  001A40  D071               	goto	u2830
  4917  001A42  A010               	btfss	___fladd@grs,0,c
  4918  001A44  D005               	goto	l2712
  4919  001A46  90D8               	bcf	status,0,c
  4920  001A48  3010               	rrcf	___fladd@grs,w,c
  4921  001A4A  0901               	iorlw	1
  4922  001A4C  6E10               	movwf	___fladd@grs,c
  4923  001A4E  D002               	goto	l2714
  4924  001A50                     l2712:
  4925  001A50  90D8               	bcf	status,0,c
  4926  001A52  3210               	rrcf	___fladd@grs,f,c
  4927  001A54                     l2714:
  4928  001A54  B001               	btfsc	___fladd@b,0,c
  4929  001A56  8E10               	bsf	___fladd@grs,7,c
  4930  001A58  3404               	rlcf	___fladd@b+3,w,c
  4931  001A5A  3204               	rrcf	___fladd@b+3,f,c
  4932  001A5C  3203               	rrcf	___fladd@b+2,f,c
  4933  001A5E  3202               	rrcf	___fladd@b+1,f,c
  4934  001A60  3201               	rrcf	___fladd@b,f,c
  4935  001A62  2A0F               	incf	___fladd@bexp,f,c
  4936  001A64  D05F               	goto	u2830
  4937  001A66                     l2722:
  4938  001A66  5005               	movf	___fladd@a,w,c
  4939  001A68  5C01               	subwf	___fladd@b,w,c
  4940  001A6A  5006               	movf	___fladd@a+1,w,c
  4941  001A6C  5802               	subwfb	___fladd@b+1,w,c
  4942  001A6E  5007               	movf	___fladd@a+2,w,c
  4943  001A70  5803               	subwfb	___fladd@b+2,w,c
  4944  001A72  5004               	movf	___fladd@b+3,w,c
  4945  001A74  0A80               	xorlw	128
  4946  001A76  6E09               	movwf	??___fladd& (0+255),c
  4947  001A78  5008               	movf	___fladd@a+3,w,c
  4948  001A7A  0A80               	xorlw	128
  4949  001A7C  5809               	subwfb	??___fladd& (0+255),w,c
  4950  001A7E  B0D8               	btfsc	status,0,c
  4951  001A80  D025               	goto	l2732
  4952  001A82  5001               	movf	___fladd@b,w,c
  4953  001A84  5C05               	subwf	___fladd@a,w,c
  4954  001A86  6E09               	movwf	??___fladd& (0+255),c
  4955  001A88  5002               	movf	___fladd@b+1,w,c
  4956  001A8A  5806               	subwfb	___fladd@a+1,w,c
  4957  001A8C  6E0A               	movwf	(??___fladd+1)& (0+255),c
  4958  001A8E  5003               	movf	___fladd@b+2,w,c
  4959  001A90  5807               	subwfb	___fladd@a+2,w,c
  4960  001A92  6E0B               	movwf	(??___fladd+2)& (0+255),c
  4961  001A94  5004               	movf	___fladd@b+3,w,c
  4962  001A96  5808               	subwfb	___fladd@a+3,w,c
  4963  001A98  6E0C               	movwf	(??___fladd+3)& (0+255),c
  4964  001A9A  0EFF               	movlw	255
  4965  001A9C  2409               	addwf	??___fladd,w,c
  4966  001A9E  6E01               	movwf	___fladd@b,c
  4967  001AA0  0EFF               	movlw	255
  4968  001AA2  200A               	addwfc	??___fladd+1,w,c
  4969  001AA4  6E02               	movwf	___fladd@b+1,c
  4970  001AA6  0EFF               	movlw	255
  4971  001AA8  200B               	addwfc	??___fladd+2,w,c
  4972  001AAA  6E03               	movwf	___fladd@b+2,c
  4973  001AAC  0EFF               	movlw	255
  4974  001AAE  200C               	addwfc	??___fladd+3,w,c
  4975  001AB0  6E04               	movwf	___fladd@b+3,c
  4976  001AB2  0E80               	movlw	128
  4977  001AB4  1A0D               	xorwf	___fladd@signs,f,c
  4978  001AB6  6C10               	negf	___fladd@grs,c
  4979  001AB8  5010               	movf	___fladd@grs,w,c
  4980  001ABA  A4D8               	btfss	status,2,c
  4981  001ABC  D00F               	goto	l805
  4982  001ABE  0E01               	movlw	1
  4983  001AC0  2601               	addwf	___fladd@b,f,c
  4984  001AC2  0E00               	movlw	0
  4985  001AC4  2202               	addwfc	___fladd@b+1,f,c
  4986  001AC6  2203               	addwfc	___fladd@b+2,f,c
  4987  001AC8  2204               	addwfc	___fladd@b+3,f,c
  4988  001ACA  D008               	goto	l805
  4989  001ACC                     l2732:
  4990  001ACC  5005               	movf	___fladd@a,w,c
  4991  001ACE  5E01               	subwf	___fladd@b,f,c
  4992  001AD0  5006               	movf	___fladd@a+1,w,c
  4993  001AD2  5A02               	subwfb	___fladd@b+1,f,c
  4994  001AD4  5007               	movf	___fladd@a+2,w,c
  4995  001AD6  5A03               	subwfb	___fladd@b+2,f,c
  4996  001AD8  5008               	movf	___fladd@a+3,w,c
  4997  001ADA  5A04               	subwfb	___fladd@b+3,f,c
  4998  001ADC                     l805:
  4999  001ADC  5001               	movf	___fladd@b,w,c
  5000  001ADE  1002               	iorwf	___fladd@b+1,w,c
  5001  001AE0  1003               	iorwf	___fladd@b+2,w,c
  5002  001AE2  1004               	iorwf	___fladd@b+3,w,c
  5003  001AE4  A4D8               	btfss	status,2,c
  5004  001AE6  D01C               	goto	l2756
  5005  001AE8  5010               	movf	___fladd@grs,w,c
  5006  001AEA  A4D8               	btfss	status,2,c
  5007  001AEC  D019               	goto	l2756
  5008  001AEE  0E00               	movlw	0
  5009  001AF0  6E01               	movwf	?___fladd,c
  5010  001AF2  0E00               	movlw	0
  5011  001AF4  6E02               	movwf	?___fladd+1,c
  5012  001AF6  0E00               	movlw	0
  5013  001AF8  6E03               	movwf	?___fladd+2,c
  5014  001AFA  0E00               	movlw	0
  5015  001AFC  6E04               	movwf	?___fladd+3,c
  5016  001AFE  0012               	return	
  5017  001B00                     l2740:
  5018  001B00  90D8               	bcf	status,0,c
  5019  001B02  3601               	rlcf	___fladd@b,f,c
  5020  001B04  3602               	rlcf	___fladd@b+1,f,c
  5021  001B06  3603               	rlcf	___fladd@b+2,f,c
  5022  001B08  3604               	rlcf	___fladd@b+3,f,c
  5023  001B0A  BE10               	btfsc	___fladd@grs,7,c
  5024  001B0C  8001               	bsf	___fladd@b,0,c
  5025  001B0E  A010               	btfss	___fladd@grs,0,c
  5026  001B10  D002               	goto	l2750
  5027  001B12  80D8               	bsf	status,0,c
  5028  001B14  D001               	goto	L9
  5029  001B16                     l2750:
  5030  001B16  90D8               	bcf	status,0,c
  5031  001B18                     L9:
  5032  001B18  3610               	rlcf	___fladd@grs,f,c
  5033  001B1A  500F               	movf	___fladd@bexp,w,c
  5034  001B1C  A4D8               	btfss	status,2,c
  5035  001B1E  060F               	decf	___fladd@bexp,f,c
  5036  001B20                     l2756:
  5037  001B20  AE03               	btfss	___fladd@b+2,7,c
  5038  001B22  D7EE               	goto	l2740
  5039  001B24                     u2830:
  5040  001B24  0E00               	movlw	0
  5041  001B26  6E0E               	movwf	___fladd@aexp,c
  5042  001B28  AE10               	btfss	___fladd@grs,7,c
  5043  001B2A  D00B               	goto	l814
  5044  001B2C  C010  F009         	movff	___fladd@grs,??___fladd
  5045  001B30  0E7F               	movlw	127
  5046  001B32  1609               	andwf	??___fladd,f,c
  5047  001B34  B4D8               	btfsc	status,2,c
  5048  001B36  D003               	goto	l815
  5049  001B38                     u2850:
  5050  001B38  0E01               	movlw	1
  5051  001B3A  6E0E               	movwf	___fladd@aexp,c
  5052  001B3C  D002               	goto	l814
  5053  001B3E                     l815:
  5054  001B3E  B001               	btfsc	___fladd@b,0,c
  5055  001B40  D7FB               	goto	u2850
  5056  001B42                     l814:
  5057  001B42  500E               	movf	___fladd@aexp,w,c
  5058  001B44  B4D8               	btfsc	status,2,c
  5059  001B46  D020               	goto	l2776
  5060  001B48  0E01               	movlw	1
  5061  001B4A  2601               	addwf	___fladd@b,f,c
  5062  001B4C  0E00               	movlw	0
  5063  001B4E  2202               	addwfc	___fladd@b+1,f,c
  5064  001B50  2203               	addwfc	___fladd@b+2,f,c
  5065  001B52  2204               	addwfc	___fladd@b+3,f,c
  5066  001B54  A004               	btfss	___fladd@b+3,0,c
  5067  001B56  D018               	goto	l2776
  5068  001B58  C001  F009         	movff	___fladd@b,??___fladd
  5069  001B5C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5070  001B60  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5071  001B64  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5072  001B68  340C               	rlcf	??___fladd+3,w,c
  5073  001B6A  320C               	rrcf	??___fladd+3,f,c
  5074  001B6C  320B               	rrcf	??___fladd+2,f,c
  5075  001B6E  320A               	rrcf	??___fladd+1,f,c
  5076  001B70  3209               	rrcf	??___fladd,f,c
  5077  001B72  C009  F001         	movff	??___fladd,___fladd@b
  5078  001B76  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5079  001B7A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5080  001B7E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5081  001B82  280F               	incf	___fladd@bexp,w,c
  5082  001B84  A4D8               	btfss	status,2,c
  5083  001B86  2A0F               	incf	___fladd@bexp,f,c
  5084  001B88                     l2776:
  5085  001B88  280F               	incf	___fladd@bexp,w,c
  5086  001B8A  B4D8               	btfsc	status,2,c
  5087  001B8C  D003               	goto	u2910
  5088  001B8E  500F               	movf	___fladd@bexp,w,c
  5089  001B90  A4D8               	btfss	status,2,c
  5090  001B92  D00D               	goto	l2784
  5091  001B94                     u2910:
  5092  001B94  0E00               	movlw	0
  5093  001B96  6E01               	movwf	___fladd@b,c
  5094  001B98  0E00               	movlw	0
  5095  001B9A  6E02               	movwf	___fladd@b+1,c
  5096  001B9C  0E00               	movlw	0
  5097  001B9E  6E03               	movwf	___fladd@b+2,c
  5098  001BA0  0E00               	movlw	0
  5099  001BA2  6E04               	movwf	___fladd@b+3,c
  5100  001BA4  500F               	movf	___fladd@bexp,w,c
  5101  001BA6  A4D8               	btfss	status,2,c
  5102  001BA8  D002               	goto	l2784
  5103  001BAA  0E00               	movlw	0
  5104  001BAC  6E0D               	movwf	___fladd@signs,c
  5105  001BAE                     l2784:
  5106  001BAE  A00F               	btfss	___fladd@bexp,0,c
  5107  001BB0  D002               	goto	l2788
  5108  001BB2  8E03               	bsf	___fladd@b+2,7,c
  5109  001BB4  D001               	goto	l2790
  5110  001BB6                     l2788:
  5111  001BB6  9E03               	bcf	___fladd@b+2,7,c
  5112  001BB8                     l2790:
  5113  001BB8  90D8               	bcf	status,0,c
  5114  001BBA  300F               	rrcf	___fladd@bexp,w,c
  5115  001BBC  6E04               	movwf	___fladd@b+3,c
  5116  001BBE  BE0D               	btfsc	___fladd@signs,7,c
  5117  001BC0  8E04               	bsf	___fladd@b+3,7,c
  5118  001BC2  C001  F001         	movff	___fladd@b,?___fladd
  5119  001BC6  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5120  001BCA  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5121  001BCE  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5122  001BD2  0012               	return		;funcret
  5123  001BD4                     __end_of___fladd:
  5124                           	opt callstack 0
  5125                           
  5126 ;; *************** function ___flneg *****************
  5127 ;; Defined at:
  5128 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/flneg.c"
  5129 ;; Parameters:    Size  Location     Type
  5130 ;;  f1              4    0[COMRAM] unsigned char 
  5131 ;; Auto vars:     Size  Location     Type
  5132 ;;		None
  5133 ;; Return value:  Size  Location     Type
  5134 ;;                  4    0[COMRAM] unsigned char 
  5135 ;; Registers used:
  5136 ;;		wreg, status,2, status,0
  5137 ;; Tracked objects:
  5138 ;;		On entry : 0/0
  5139 ;;		On exit  : 0/0
  5140 ;;		Unchanged: 0/0
  5141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5142 ;;      Params:         4       0       0       0       0       0       0       0       0
  5143 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5144 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5145 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5146 ;;Total ram usage:        4 bytes
  5147 ;; Hardware stack levels used:    1
  5148 ;; This function calls:
  5149 ;;		Nothing
  5150 ;; This function is called by:
  5151 ;;		_efgtoa
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155                           	psect	text19
  5156  002DA6                     __ptext19:
  5157                           	opt callstack 0
  5158  002DA6                     ___flneg:
  5159                           	opt callstack 26
  5160                           
  5161                           ;incstack = 0
  5162  002DA6  5001               	movf	___flneg@f1,w,c
  5163  002DA8  1002               	iorwf	___flneg@f1+1,w,c
  5164  002DAA  1003               	iorwf	___flneg@f1+2,w,c
  5165  002DAC  1004               	iorwf	___flneg@f1+3,w,c
  5166  002DAE  B4D8               	btfsc	status,2,c
  5167  002DB0  D008               	goto	l3292
  5168  002DB2  0E00               	movlw	0
  5169  002DB4  1A01               	xorwf	___flneg@f1,f,c
  5170  002DB6  0E00               	movlw	0
  5171  002DB8  1A02               	xorwf	___flneg@f1+1,f,c
  5172  002DBA  0E00               	movlw	0
  5173  002DBC  1A03               	xorwf	___flneg@f1+2,f,c
  5174  002DBE  0E80               	movlw	128
  5175  002DC0  1A04               	xorwf	___flneg@f1+3,f,c
  5176  002DC2                     l3292:
  5177  002DC2  C001  F001         	movff	___flneg@f1,?___flneg
  5178  002DC6  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5179  002DCA  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5180  002DCE  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5181  002DD2  0012               	return		;funcret
  5182  002DD4                     __end_of___flneg:
  5183                           	opt callstack 0
  5184                           
  5185 ;; *************** function ___flmul *****************
  5186 ;; Defined at:
  5187 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcmul.c"
  5188 ;; Parameters:    Size  Location     Type
  5189 ;;  b               4   14[COMRAM] unsigned char 
  5190 ;;  a               4   18[COMRAM] unsigned char 
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  prod            4   33[COMRAM] struct .
  5193 ;;  grs             4   27[COMRAM] unsigned long 
  5194 ;;  temp            2   37[COMRAM] struct .
  5195 ;;  bexp            1   32[COMRAM] unsigned char 
  5196 ;;  aexp            1   31[COMRAM] unsigned char 
  5197 ;;  sign            1   26[COMRAM] unsigned char 
  5198 ;; Return value:  Size  Location     Type
  5199 ;;                  4   14[COMRAM] unsigned char 
  5200 ;; Registers used:
  5201 ;;		wreg, status,2, status,0, prodl, prodh
  5202 ;; Tracked objects:
  5203 ;;		On entry : 0/0
  5204 ;;		On exit  : 0/0
  5205 ;;		Unchanged: 0/0
  5206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5207 ;;      Params:         8       0       0       0       0       0       0       0       0
  5208 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5209 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5210 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5211 ;;Total ram usage:       25 bytes
  5212 ;; Hardware stack levels used:    1
  5213 ;; This function calls:
  5214 ;;		Nothing
  5215 ;; This function is called by:
  5216 ;;		_main
  5217 ;;		_efgtoa
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           	psect	text20
  5222  001576                     __ptext20:
  5223                           	opt callstack 0
  5224  001576                     ___flmul:
  5225                           	opt callstack 26
  5226                           
  5227                           ;incstack = 0
  5228  001576  5012               	movf	___flmul@b+3,w,c
  5229  001578  0B80               	andlw	128
  5230  00157A  6E1B               	movwf	___flmul@sign,c
  5231  00157C  5012               	movf	___flmul@b+3,w,c
  5232  00157E  2412               	addwf	___flmul@b+3,w,c
  5233  001580  6E21               	movwf	___flmul@bexp,c
  5234  001582  BE11               	btfsc	___flmul@b+2,7,c
  5235  001584  8021               	bsf	___flmul@bexp,0,c
  5236  001586  5021               	movf	___flmul@bexp,w,c
  5237  001588  B4D8               	btfsc	status,2,c
  5238  00158A  D00D               	goto	l3048
  5239  00158C  2821               	incf	___flmul@bexp,w,c
  5240  00158E  A4D8               	btfss	status,2,c
  5241  001590  D008               	goto	l3046
  5242  001592  0E00               	movlw	0
  5243  001594  6E0F               	movwf	___flmul@b,c
  5244  001596  0E00               	movlw	0
  5245  001598  6E10               	movwf	___flmul@b+1,c
  5246  00159A  0E00               	movlw	0
  5247  00159C  6E11               	movwf	___flmul@b+2,c
  5248  00159E  0E00               	movlw	0
  5249  0015A0  6E12               	movwf	___flmul@b+3,c
  5250  0015A2                     l3046:
  5251  0015A2  8E11               	bsf	___flmul@b+2,7,c
  5252  0015A4  D008               	goto	l3050
  5253  0015A6                     l3048:
  5254  0015A6  0E00               	movlw	0
  5255  0015A8  6E0F               	movwf	___flmul@b,c
  5256  0015AA  0E00               	movlw	0
  5257  0015AC  6E10               	movwf	___flmul@b+1,c
  5258  0015AE  0E00               	movlw	0
  5259  0015B0  6E11               	movwf	___flmul@b+2,c
  5260  0015B2  0E00               	movlw	0
  5261  0015B4  6E12               	movwf	___flmul@b+3,c
  5262  0015B6                     l3050:
  5263  0015B6  5016               	movf	___flmul@a+3,w,c
  5264  0015B8  0B80               	andlw	128
  5265  0015BA  1A1B               	xorwf	___flmul@sign,f,c
  5266  0015BC  5016               	movf	___flmul@a+3,w,c
  5267  0015BE  2416               	addwf	___flmul@a+3,w,c
  5268  0015C0  6E20               	movwf	___flmul@aexp,c
  5269  0015C2  BE15               	btfsc	___flmul@a+2,7,c
  5270  0015C4  8020               	bsf	___flmul@aexp,0,c
  5271  0015C6  5020               	movf	___flmul@aexp,w,c
  5272  0015C8  B4D8               	btfsc	status,2,c
  5273  0015CA  D00D               	goto	l3066
  5274  0015CC  2820               	incf	___flmul@aexp,w,c
  5275  0015CE  A4D8               	btfss	status,2,c
  5276  0015D0  D008               	goto	l3064
  5277  0015D2  0E00               	movlw	0
  5278  0015D4  6E13               	movwf	___flmul@a,c
  5279  0015D6  0E00               	movlw	0
  5280  0015D8  6E14               	movwf	___flmul@a+1,c
  5281  0015DA  0E00               	movlw	0
  5282  0015DC  6E15               	movwf	___flmul@a+2,c
  5283  0015DE  0E00               	movlw	0
  5284  0015E0  6E16               	movwf	___flmul@a+3,c
  5285  0015E2                     l3064:
  5286  0015E2  8E15               	bsf	___flmul@a+2,7,c
  5287  0015E4  D008               	goto	l874
  5288  0015E6                     l3066:
  5289  0015E6  0E00               	movlw	0
  5290  0015E8  6E13               	movwf	___flmul@a,c
  5291  0015EA  0E00               	movlw	0
  5292  0015EC  6E14               	movwf	___flmul@a+1,c
  5293  0015EE  0E00               	movlw	0
  5294  0015F0  6E15               	movwf	___flmul@a+2,c
  5295  0015F2  0E00               	movlw	0
  5296  0015F4  6E16               	movwf	___flmul@a+3,c
  5297  0015F6                     l874:
  5298  0015F6  5020               	movf	___flmul@aexp,w,c
  5299  0015F8  B4D8               	btfsc	status,2,c
  5300  0015FA  D003               	goto	u3530
  5301  0015FC  5021               	movf	___flmul@bexp,w,c
  5302  0015FE  A4D8               	btfss	status,2,c
  5303  001600  D009               	goto	l3074
  5304  001602                     u3530:
  5305  001602  0E00               	movlw	0
  5306  001604  6E0F               	movwf	?___flmul,c
  5307  001606  0E00               	movlw	0
  5308  001608  6E10               	movwf	?___flmul+1,c
  5309  00160A  0E00               	movlw	0
  5310  00160C  6E11               	movwf	?___flmul+2,c
  5311  00160E  0E00               	movlw	0
  5312  001610  6E12               	movwf	?___flmul+3,c
  5313  001612  0012               	return	
  5314  001614                     l3074:
  5315  001614  5015               	movf	___flmul@a+2,w,c
  5316  001616  020F               	mulwf	___flmul@b,c
  5317  001618  CFF3 F026          	movff	prodl,___flmul@temp
  5318  00161C  CFF4 F027          	movff	prodh,___flmul@temp+1
  5319  001620  5026               	movf	___flmul@temp,w,c
  5320  001622  6E1C               	movwf	___flmul@grs,c
  5321  001624  6A1D               	clrf	___flmul@grs+1,c
  5322  001626  6A1E               	clrf	___flmul@grs+2,c
  5323  001628  6A1F               	clrf	___flmul@grs+3,c
  5324  00162A  5027               	movf	___flmul@temp+1,w,c
  5325  00162C  6E22               	movwf	___flmul@prod,c
  5326  00162E  6A23               	clrf	___flmul@prod+1,c
  5327  001630  6A24               	clrf	___flmul@prod+2,c
  5328  001632  6A25               	clrf	___flmul@prod+3,c
  5329  001634  5014               	movf	___flmul@a+1,w,c
  5330  001636  0210               	mulwf	___flmul@b+1,c
  5331  001638  CFF3 F026          	movff	prodl,___flmul@temp
  5332  00163C  CFF4 F027          	movff	prodh,___flmul@temp+1
  5333  001640  5026               	movf	___flmul@temp,w,c
  5334  001642  261C               	addwf	___flmul@grs,f,c
  5335  001644  0E00               	movlw	0
  5336  001646  221D               	addwfc	___flmul@grs+1,f,c
  5337  001648  221E               	addwfc	___flmul@grs+2,f,c
  5338  00164A  221F               	addwfc	___flmul@grs+3,f,c
  5339  00164C  5027               	movf	___flmul@temp+1,w,c
  5340  00164E  2622               	addwf	___flmul@prod,f,c
  5341  001650  0E00               	movlw	0
  5342  001652  2223               	addwfc	___flmul@prod+1,f,c
  5343  001654  2224               	addwfc	___flmul@prod+2,f,c
  5344  001656  2225               	addwfc	___flmul@prod+3,f,c
  5345  001658  5013               	movf	___flmul@a,w,c
  5346  00165A  0211               	mulwf	___flmul@b+2,c
  5347  00165C  CFF3 F026          	movff	prodl,___flmul@temp
  5348  001660  CFF4 F027          	movff	prodh,___flmul@temp+1
  5349  001664  5026               	movf	___flmul@temp,w,c
  5350  001666  261C               	addwf	___flmul@grs,f,c
  5351  001668  0E00               	movlw	0
  5352  00166A  221D               	addwfc	___flmul@grs+1,f,c
  5353  00166C  221E               	addwfc	___flmul@grs+2,f,c
  5354  00166E  221F               	addwfc	___flmul@grs+3,f,c
  5355  001670  5027               	movf	___flmul@temp+1,w,c
  5356  001672  2622               	addwf	___flmul@prod,f,c
  5357  001674  0E00               	movlw	0
  5358  001676  2223               	addwfc	___flmul@prod+1,f,c
  5359  001678  2224               	addwfc	___flmul@prod+2,f,c
  5360  00167A  2225               	addwfc	___flmul@prod+3,f,c
  5361  00167C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5362  001680  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5363  001684  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5364  001688  6A1C               	clrf	___flmul@grs,c
  5365  00168A  5013               	movf	___flmul@a,w,c
  5366  00168C  0210               	mulwf	___flmul@b+1,c
  5367  00168E  CFF3 F026          	movff	prodl,___flmul@temp
  5368  001692  CFF4 F027          	movff	prodh,___flmul@temp+1
  5369  001696  5026               	movf	___flmul@temp,w,c
  5370  001698  261C               	addwf	___flmul@grs,f,c
  5371  00169A  5027               	movf	___flmul@temp+1,w,c
  5372  00169C  221D               	addwfc	___flmul@grs+1,f,c
  5373  00169E  0E00               	movlw	0
  5374  0016A0  221E               	addwfc	___flmul@grs+2,f,c
  5375  0016A2  0E00               	movlw	0
  5376  0016A4  221F               	addwfc	___flmul@grs+3,f,c
  5377  0016A6  5014               	movf	___flmul@a+1,w,c
  5378  0016A8  020F               	mulwf	___flmul@b,c
  5379  0016AA  CFF3 F026          	movff	prodl,___flmul@temp
  5380  0016AE  CFF4 F027          	movff	prodh,___flmul@temp+1
  5381  0016B2  5026               	movf	___flmul@temp,w,c
  5382  0016B4  261C               	addwf	___flmul@grs,f,c
  5383  0016B6  5027               	movf	___flmul@temp+1,w,c
  5384  0016B8  221D               	addwfc	___flmul@grs+1,f,c
  5385  0016BA  0E00               	movlw	0
  5386  0016BC  221E               	addwfc	___flmul@grs+2,f,c
  5387  0016BE  0E00               	movlw	0
  5388  0016C0  221F               	addwfc	___flmul@grs+3,f,c
  5389  0016C2  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5390  0016C6  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5391  0016CA  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5392  0016CE  6A1C               	clrf	___flmul@grs,c
  5393  0016D0  5013               	movf	___flmul@a,w,c
  5394  0016D2  020F               	mulwf	___flmul@b,c
  5395  0016D4  CFF3 F026          	movff	prodl,___flmul@temp
  5396  0016D8  CFF4 F027          	movff	prodh,___flmul@temp+1
  5397  0016DC  5026               	movf	___flmul@temp,w,c
  5398  0016DE  261C               	addwf	___flmul@grs,f,c
  5399  0016E0  5027               	movf	___flmul@temp+1,w,c
  5400  0016E2  221D               	addwfc	___flmul@grs+1,f,c
  5401  0016E4  0E00               	movlw	0
  5402  0016E6  221E               	addwfc	___flmul@grs+2,f,c
  5403  0016E8  0E00               	movlw	0
  5404  0016EA  221F               	addwfc	___flmul@grs+3,f,c
  5405  0016EC  5015               	movf	___flmul@a+2,w,c
  5406  0016EE  0210               	mulwf	___flmul@b+1,c
  5407  0016F0  CFF3 F026          	movff	prodl,___flmul@temp
  5408  0016F4  CFF4 F027          	movff	prodh,___flmul@temp+1
  5409  0016F8  5026               	movf	___flmul@temp,w,c
  5410  0016FA  2622               	addwf	___flmul@prod,f,c
  5411  0016FC  5027               	movf	___flmul@temp+1,w,c
  5412  0016FE  2223               	addwfc	___flmul@prod+1,f,c
  5413  001700  0E00               	movlw	0
  5414  001702  2224               	addwfc	___flmul@prod+2,f,c
  5415  001704  0E00               	movlw	0
  5416  001706  2225               	addwfc	___flmul@prod+3,f,c
  5417  001708  5014               	movf	___flmul@a+1,w,c
  5418  00170A  0211               	mulwf	___flmul@b+2,c
  5419  00170C  CFF3 F026          	movff	prodl,___flmul@temp
  5420  001710  CFF4 F027          	movff	prodh,___flmul@temp+1
  5421  001714  5026               	movf	___flmul@temp,w,c
  5422  001716  2622               	addwf	___flmul@prod,f,c
  5423  001718  5027               	movf	___flmul@temp+1,w,c
  5424  00171A  2223               	addwfc	___flmul@prod+1,f,c
  5425  00171C  0E00               	movlw	0
  5426  00171E  2224               	addwfc	___flmul@prod+2,f,c
  5427  001720  0E00               	movlw	0
  5428  001722  2225               	addwfc	___flmul@prod+3,f,c
  5429  001724  5015               	movf	___flmul@a+2,w,c
  5430  001726  0211               	mulwf	___flmul@b+2,c
  5431  001728  CFF3 F026          	movff	prodl,___flmul@temp
  5432  00172C  CFF4 F027          	movff	prodh,___flmul@temp+1
  5433  001730  5026               	movf	___flmul@temp,w,c
  5434  001732  6E17               	movwf	??___flmul& (0+255),c
  5435  001734  5027               	movf	___flmul@temp+1,w,c
  5436  001736  6E18               	movwf	(??___flmul+1)& (0+255),c
  5437  001738  6A19               	clrf	(??___flmul+2)& (0+255),c
  5438  00173A  6A1A               	clrf	(??___flmul+3)& (0+255),c
  5439  00173C  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5440  001740  C018  F019         	movff	??___flmul+1,??___flmul+2
  5441  001744  C017  F018         	movff	??___flmul,??___flmul+1
  5442  001748  6A17               	clrf	??___flmul,c
  5443  00174A  5017               	movf	??___flmul,w,c
  5444  00174C  2622               	addwf	___flmul@prod,f,c
  5445  00174E  5018               	movf	??___flmul+1,w,c
  5446  001750  2223               	addwfc	___flmul@prod+1,f,c
  5447  001752  5019               	movf	??___flmul+2,w,c
  5448  001754  2224               	addwfc	___flmul@prod+2,f,c
  5449  001756  501A               	movf	??___flmul+3,w,c
  5450  001758  2225               	addwfc	___flmul@prod+3,f,c
  5451  00175A  C01C  F017         	movff	___flmul@grs,??___flmul
  5452  00175E  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5453  001762  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5454  001766  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5455  00176A  0E19               	movlw	25
  5456  00176C  D005               	goto	u3540
  5457  00176E                     u3545:
  5458  00176E  90D8               	bcf	status,0,c
  5459  001770  321A               	rrcf	??___flmul+3,f,c
  5460  001772  3219               	rrcf	??___flmul+2,f,c
  5461  001774  3218               	rrcf	??___flmul+1,f,c
  5462  001776  3217               	rrcf	??___flmul,f,c
  5463  001778                     u3540:
  5464  001778  2EE8               	decfsz	wreg,f,c
  5465  00177A  D7F9               	goto	u3545
  5466  00177C  5017               	movf	??___flmul,w,c
  5467  00177E  2622               	addwf	___flmul@prod,f,c
  5468  001780  5018               	movf	??___flmul+1,w,c
  5469  001782  2223               	addwfc	___flmul@prod+1,f,c
  5470  001784  5019               	movf	??___flmul+2,w,c
  5471  001786  2224               	addwfc	___flmul@prod+2,f,c
  5472  001788  501A               	movf	??___flmul+3,w,c
  5473  00178A  2225               	addwfc	___flmul@prod+3,f,c
  5474  00178C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5475  001790  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5476  001794  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5477  001798  6A1C               	clrf	___flmul@grs,c
  5478  00179A  5020               	movf	___flmul@aexp,w,c
  5479  00179C  C021  F017         	movff	___flmul@bexp,??___flmul
  5480  0017A0  6A18               	clrf	(??___flmul+1)& (0+255),c
  5481  0017A2  2617               	addwf	??___flmul,f,c
  5482  0017A4  0E00               	movlw	0
  5483  0017A6  2218               	addwfc	??___flmul+1,f,c
  5484  0017A8  0E82               	movlw	130
  5485  0017AA  2417               	addwf	??___flmul,w,c
  5486  0017AC  6E26               	movwf	___flmul@temp,c
  5487  0017AE  0EFF               	movlw	255
  5488  0017B0  2018               	addwfc	??___flmul+1,w,c
  5489  0017B2  6E27               	movwf	___flmul@temp+1,c
  5490  0017B4  D00F               	goto	l3122
  5491  0017B6                     l3116:
  5492  0017B6  90D8               	bcf	status,0,c
  5493  0017B8  3622               	rlcf	___flmul@prod,f,c
  5494  0017BA  3623               	rlcf	___flmul@prod+1,f,c
  5495  0017BC  3624               	rlcf	___flmul@prod+2,f,c
  5496  0017BE  3625               	rlcf	___flmul@prod+3,f,c
  5497  0017C0  BE1F               	btfsc	___flmul@grs+3,7,c
  5498  0017C2  8022               	bsf	___flmul@prod,0,c
  5499  0017C4  90D8               	bcf	status,0,c
  5500  0017C6  361C               	rlcf	___flmul@grs,f,c
  5501  0017C8  361D               	rlcf	___flmul@grs+1,f,c
  5502  0017CA  361E               	rlcf	___flmul@grs+2,f,c
  5503  0017CC  361F               	rlcf	___flmul@grs+3,f,c
  5504  0017CE  0626               	decf	___flmul@temp,f,c
  5505  0017D0  A0D8               	btfss	status,0,c
  5506  0017D2  0627               	decf	___flmul@temp+1,f,c
  5507  0017D4                     l3122:
  5508  0017D4  AE24               	btfss	___flmul@prod+2,7,c
  5509  0017D6  D7EF               	goto	l3116
  5510  0017D8  0E00               	movlw	0
  5511  0017DA  6E20               	movwf	___flmul@aexp,c
  5512  0017DC  AE1F               	btfss	___flmul@grs+3,7,c
  5513  0017DE  D017               	goto	l883
  5514  0017E0  0EFF               	movlw	255
  5515  0017E2  141C               	andwf	___flmul@grs,w,c
  5516  0017E4  6E17               	movwf	??___flmul& (0+255),c
  5517  0017E6  0EFF               	movlw	255
  5518  0017E8  141D               	andwf	___flmul@grs+1,w,c
  5519  0017EA  6E18               	movwf	(??___flmul+1)& (0+255),c
  5520  0017EC  0EFF               	movlw	255
  5521  0017EE  141E               	andwf	___flmul@grs+2,w,c
  5522  0017F0  6E19               	movwf	(??___flmul+2)& (0+255),c
  5523  0017F2  0E7F               	movlw	127
  5524  0017F4  141F               	andwf	___flmul@grs+3,w,c
  5525  0017F6  6E1A               	movwf	(??___flmul+3)& (0+255),c
  5526  0017F8  5017               	movf	??___flmul,w,c
  5527  0017FA  1018               	iorwf	??___flmul+1,w,c
  5528  0017FC  1019               	iorwf	??___flmul+2,w,c
  5529  0017FE  101A               	iorwf	??___flmul+3,w,c
  5530  001800  B4D8               	btfsc	status,2,c
  5531  001802  D003               	goto	l884
  5532  001804                     u3580:
  5533  001804  0E01               	movlw	1
  5534  001806  6E20               	movwf	___flmul@aexp,c
  5535  001808  D002               	goto	l883
  5536  00180A                     l884:
  5537  00180A  B022               	btfsc	___flmul@prod,0,c
  5538  00180C  D7FB               	goto	u3580
  5539  00180E                     l883:
  5540  00180E  5020               	movf	___flmul@aexp,w,c
  5541  001810  B4D8               	btfsc	status,2,c
  5542  001812  D01F               	goto	l3142
  5543  001814  0E01               	movlw	1
  5544  001816  2622               	addwf	___flmul@prod,f,c
  5545  001818  0E00               	movlw	0
  5546  00181A  2223               	addwfc	___flmul@prod+1,f,c
  5547  00181C  2224               	addwfc	___flmul@prod+2,f,c
  5548  00181E  2225               	addwfc	___flmul@prod+3,f,c
  5549  001820  A025               	btfss	___flmul@prod+3,0,c
  5550  001822  D017               	goto	l3142
  5551  001824  C022  F017         	movff	___flmul@prod,??___flmul
  5552  001828  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  5553  00182C  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  5554  001830  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  5555  001834  341A               	rlcf	??___flmul+3,w,c
  5556  001836  321A               	rrcf	??___flmul+3,f,c
  5557  001838  3219               	rrcf	??___flmul+2,f,c
  5558  00183A  3218               	rrcf	??___flmul+1,f,c
  5559  00183C  3217               	rrcf	??___flmul,f,c
  5560  00183E  C017  F022         	movff	??___flmul,___flmul@prod
  5561  001842  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  5562  001846  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  5563  00184A  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  5564  00184E  4A26               	infsnz	___flmul@temp,f,c
  5565  001850  2A27               	incf	___flmul@temp+1,f,c
  5566  001852                     l3142:
  5567  001852  BE27               	btfsc	___flmul@temp+1,7,c
  5568  001854  D00D               	goto	l3146
  5569  001856  5027               	movf	___flmul@temp+1,w,c
  5570  001858  E103               	bnz	u3620
  5571  00185A  2826               	incf	___flmul@temp,w,c
  5572  00185C  A0D8               	btfss	status,0,c
  5573  00185E  D008               	goto	l3146
  5574  001860                     u3620:
  5575  001860  0E00               	movlw	0
  5576  001862  6E22               	movwf	___flmul@prod,c
  5577  001864  0E00               	movlw	0
  5578  001866  6E23               	movwf	___flmul@prod+1,c
  5579  001868  0E80               	movlw	128
  5580  00186A  6E24               	movwf	___flmul@prod+2,c
  5581  00186C  0E7F               	movlw	127
  5582  00186E  D020               	goto	L10
  5583  001870                     l3146:
  5584  001870  BE27               	btfsc	___flmul@temp+1,7,c
  5585  001872  D005               	goto	u3630
  5586  001874  5027               	movf	___flmul@temp+1,w,c
  5587  001876  E10E               	bnz	l891
  5588  001878  0426               	decf	___flmul@temp,w,c
  5589  00187A  B0D8               	btfsc	status,0,c
  5590  00187C  D00B               	goto	l891
  5591  00187E                     u3630:
  5592  00187E  0E00               	movlw	0
  5593  001880  6E22               	movwf	___flmul@prod,c
  5594  001882  0E00               	movlw	0
  5595  001884  6E23               	movwf	___flmul@prod+1,c
  5596  001886  0E00               	movlw	0
  5597  001888  6E24               	movwf	___flmul@prod+2,c
  5598  00188A  0E00               	movlw	0
  5599  00188C  6E25               	movwf	___flmul@prod+3,c
  5600  00188E  0E00               	movlw	0
  5601  001890  6E1B               	movwf	___flmul@sign,c
  5602  001892  D00F               	goto	l3158
  5603  001894                     l891:
  5604  001894  C026  F021         	movff	___flmul@temp,___flmul@bexp
  5605  001898  0EFF               	movlw	255
  5606  00189A  1622               	andwf	___flmul@prod,f,c
  5607  00189C  0EFF               	movlw	255
  5608  00189E  1623               	andwf	___flmul@prod+1,f,c
  5609  0018A0  0E7F               	movlw	127
  5610  0018A2  1624               	andwf	___flmul@prod+2,f,c
  5611  0018A4  0E00               	movlw	0
  5612  0018A6  1625               	andwf	___flmul@prod+3,f,c
  5613  0018A8  B021               	btfsc	___flmul@bexp,0,c
  5614  0018AA  8E24               	bsf	___flmul@prod+2,7,c
  5615  0018AC  90D8               	bcf	status,0,c
  5616  0018AE  3021               	rrcf	___flmul@bexp,w,c
  5617  0018B0                     L10:
  5618  0018B0  6E25               	movwf	___flmul@prod+3,c
  5619  0018B2                     l3158:
  5620  0018B2  501B               	movf	___flmul@sign,w,c
  5621  0018B4  1225               	iorwf	___flmul@prod+3,f,c
  5622  0018B6  C022  F00F         	movff	___flmul@prod,?___flmul
  5623  0018BA  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  5624  0018BE  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  5625  0018C2  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  5626  0018C6  0012               	return		;funcret
  5627  0018C8                     __end_of___flmul:
  5628                           	opt callstack 0
  5629                           
  5630 ;; *************** function ___flge *****************
  5631 ;; Defined at:
  5632 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/flge.c"
  5633 ;; Parameters:    Size  Location     Type
  5634 ;;  ff1             4   39[COMRAM] unsigned char 
  5635 ;;  ff2             4   43[COMRAM] unsigned char 
  5636 ;; Auto vars:     Size  Location     Type
  5637 ;;		None
  5638 ;; Return value:  Size  Location     Type
  5639 ;;		None               void
  5640 ;; Registers used:
  5641 ;;		wreg, status,2, status,0
  5642 ;; Tracked objects:
  5643 ;;		On entry : 0/0
  5644 ;;		On exit  : 0/0
  5645 ;;		Unchanged: 0/0
  5646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5647 ;;      Params:         8       0       0       0       0       0       0       0       0
  5648 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5649 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5650 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5651 ;;Total ram usage:       12 bytes
  5652 ;; Hardware stack levels used:    1
  5653 ;; This function calls:
  5654 ;;		Nothing
  5655 ;; This function is called by:
  5656 ;;		_efgtoa
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           	psect	text21
  5661  0023F4                     __ptext21:
  5662                           	opt callstack 0
  5663  0023F4                     ___flge:
  5664                           	opt callstack 26
  5665                           
  5666                           ;incstack = 0
  5667  0023F4  0E00               	movlw	0
  5668  0023F6  1428               	andwf	___flge@ff1,w,c
  5669  0023F8  6E30               	movwf	??___flge& (0+255),c
  5670  0023FA  0E00               	movlw	0
  5671  0023FC  1429               	andwf	___flge@ff1+1,w,c
  5672  0023FE  6E31               	movwf	(??___flge+1)& (0+255),c
  5673  002400  0E80               	movlw	128
  5674  002402  142A               	andwf	___flge@ff1+2,w,c
  5675  002404  6E32               	movwf	(??___flge+2)& (0+255),c
  5676  002406  0E7F               	movlw	127
  5677  002408  142B               	andwf	___flge@ff1+3,w,c
  5678  00240A  6E33               	movwf	(??___flge+3)& (0+255),c
  5679  00240C  5030               	movf	??___flge,w,c
  5680  00240E  1031               	iorwf	??___flge+1,w,c
  5681  002410  1032               	iorwf	??___flge+2,w,c
  5682  002412  1033               	iorwf	??___flge+3,w,c
  5683  002414  A4D8               	btfss	status,2,c
  5684  002416  D008               	goto	l3270
  5685  002418  0E00               	movlw	0
  5686  00241A  6E28               	movwf	___flge@ff1,c
  5687  00241C  0E00               	movlw	0
  5688  00241E  6E29               	movwf	___flge@ff1+1,c
  5689  002420  0E00               	movlw	0
  5690  002422  6E2A               	movwf	___flge@ff1+2,c
  5691  002424  0E00               	movlw	0
  5692  002426  6E2B               	movwf	___flge@ff1+3,c
  5693  002428                     l3270:
  5694  002428  0E00               	movlw	0
  5695  00242A  142C               	andwf	___flge@ff2,w,c
  5696  00242C  6E30               	movwf	??___flge& (0+255),c
  5697  00242E  0E00               	movlw	0
  5698  002430  142D               	andwf	___flge@ff2+1,w,c
  5699  002432  6E31               	movwf	(??___flge+1)& (0+255),c
  5700  002434  0E80               	movlw	128
  5701  002436  142E               	andwf	___flge@ff2+2,w,c
  5702  002438  6E32               	movwf	(??___flge+2)& (0+255),c
  5703  00243A  0E7F               	movlw	127
  5704  00243C  142F               	andwf	___flge@ff2+3,w,c
  5705  00243E  6E33               	movwf	(??___flge+3)& (0+255),c
  5706  002440  5030               	movf	??___flge,w,c
  5707  002442  1031               	iorwf	??___flge+1,w,c
  5708  002444  1032               	iorwf	??___flge+2,w,c
  5709  002446  1033               	iorwf	??___flge+3,w,c
  5710  002448  A4D8               	btfss	status,2,c
  5711  00244A  D008               	goto	l3274
  5712  00244C  0E00               	movlw	0
  5713  00244E  6E2C               	movwf	___flge@ff2,c
  5714  002450  0E00               	movlw	0
  5715  002452  6E2D               	movwf	___flge@ff2+1,c
  5716  002454  0E00               	movlw	0
  5717  002456  6E2E               	movwf	___flge@ff2+2,c
  5718  002458  0E00               	movlw	0
  5719  00245A  6E2F               	movwf	___flge@ff2+3,c
  5720  00245C                     l3274:
  5721  00245C  AE2B               	btfss	___flge@ff1+3,7,c
  5722  00245E  D009               	goto	l3278
  5723  002460  6C28               	negf	___flge@ff1,c
  5724  002462  1E29               	comf	___flge@ff1+1,f,c
  5725  002464  B0D8               	btfsc	status,0,c
  5726  002466  2A29               	incf	___flge@ff1+1,f,c
  5727  002468  1E2A               	comf	___flge@ff1+2,f,c
  5728  00246A  B0D8               	btfsc	status,0,c
  5729  00246C  2A2A               	incf	___flge@ff1+2,f,c
  5730  00246E  0E80               	movlw	128
  5731  002470  562B               	subfwb	___flge@ff1+3,f,c
  5732  002472                     l3278:
  5733  002472  AE2F               	btfss	___flge@ff2+3,7,c
  5734  002474  D009               	goto	l525
  5735  002476  6C2C               	negf	___flge@ff2,c
  5736  002478  1E2D               	comf	___flge@ff2+1,f,c
  5737  00247A  B0D8               	btfsc	status,0,c
  5738  00247C  2A2D               	incf	___flge@ff2+1,f,c
  5739  00247E  1E2E               	comf	___flge@ff2+2,f,c
  5740  002480  B0D8               	btfsc	status,0,c
  5741  002482  2A2E               	incf	___flge@ff2+2,f,c
  5742  002484  0E80               	movlw	128
  5743  002486  562F               	subfwb	___flge@ff2+3,f,c
  5744  002488                     l525:
  5745  002488  0E00               	movlw	0
  5746  00248A  1A28               	xorwf	___flge@ff1,f,c
  5747  00248C  0E00               	movlw	0
  5748  00248E  1A29               	xorwf	___flge@ff1+1,f,c
  5749  002490  0E00               	movlw	0
  5750  002492  1A2A               	xorwf	___flge@ff1+2,f,c
  5751  002494  0E80               	movlw	128
  5752  002496  1A2B               	xorwf	___flge@ff1+3,f,c
  5753  002498  0E00               	movlw	0
  5754  00249A  1A2C               	xorwf	___flge@ff2,f,c
  5755  00249C  0E00               	movlw	0
  5756  00249E  1A2D               	xorwf	___flge@ff2+1,f,c
  5757  0024A0  0E00               	movlw	0
  5758  0024A2  1A2E               	xorwf	___flge@ff2+2,f,c
  5759  0024A4  0E80               	movlw	128
  5760  0024A6  1A2F               	xorwf	___flge@ff2+3,f,c
  5761  0024A8  502C               	movf	___flge@ff2,w,c
  5762  0024AA  5C28               	subwf	___flge@ff1,w,c
  5763  0024AC  502D               	movf	___flge@ff2+1,w,c
  5764  0024AE  5829               	subwfb	___flge@ff1+1,w,c
  5765  0024B0  502E               	movf	___flge@ff2+2,w,c
  5766  0024B2  582A               	subwfb	___flge@ff1+2,w,c
  5767  0024B4  502F               	movf	___flge@ff2+3,w,c
  5768  0024B6  582B               	subwfb	___flge@ff1+3,w,c
  5769  0024B8  B0D8               	btfsc	status,0,c
  5770  0024BA  D002               	goto	l3284
  5771  0024BC  90D8               	bcf	status,0,c
  5772  0024BE  0012               	return	
  5773  0024C0                     l3284:
  5774  0024C0  80D8               	bsf	status,0,c
  5775  0024C2  0012               	return		;funcret
  5776  0024C4                     __end_of___flge:
  5777                           	opt callstack 0
  5778                           
  5779 ;; *************** function ___fleq *****************
  5780 ;; Defined at:
  5781 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/fleq.c"
  5782 ;; Parameters:    Size  Location     Type
  5783 ;;  ff1             4    0[COMRAM] unsigned char 
  5784 ;;  ff2             4    4[COMRAM] unsigned char 
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;		None
  5787 ;; Return value:  Size  Location     Type
  5788 ;;		None               void
  5789 ;; Registers used:
  5790 ;;		wreg, status,2, status,0
  5791 ;; Tracked objects:
  5792 ;;		On entry : 0/0
  5793 ;;		On exit  : 0/0
  5794 ;;		Unchanged: 0/0
  5795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5796 ;;      Params:         8       0       0       0       0       0       0       0       0
  5797 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5798 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5799 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5800 ;;Total ram usage:       12 bytes
  5801 ;; Hardware stack levels used:    1
  5802 ;; This function calls:
  5803 ;;		Nothing
  5804 ;; This function is called by:
  5805 ;;		_efgtoa
  5806 ;; This function uses a non-reentrant model
  5807 ;;
  5808                           
  5809                           	psect	text22
  5810  002826                     __ptext22:
  5811                           	opt callstack 0
  5812  002826                     ___fleq:
  5813                           	opt callstack 26
  5814                           
  5815                           ;incstack = 0
  5816  002826  0E00               	movlw	0
  5817  002828  1401               	andwf	___fleq@ff1,w,c
  5818  00282A  6E09               	movwf	??___fleq& (0+255),c
  5819  00282C  0E00               	movlw	0
  5820  00282E  1402               	andwf	___fleq@ff1+1,w,c
  5821  002830  6E0A               	movwf	(??___fleq+1)& (0+255),c
  5822  002832  0E80               	movlw	128
  5823  002834  1403               	andwf	___fleq@ff1+2,w,c
  5824  002836  6E0B               	movwf	(??___fleq+2)& (0+255),c
  5825  002838  0E7F               	movlw	127
  5826  00283A  1404               	andwf	___fleq@ff1+3,w,c
  5827  00283C  6E0C               	movwf	(??___fleq+3)& (0+255),c
  5828  00283E  5009               	movf	??___fleq,w,c
  5829  002840  100A               	iorwf	??___fleq+1,w,c
  5830  002842  100B               	iorwf	??___fleq+2,w,c
  5831  002844  100C               	iorwf	??___fleq+3,w,c
  5832  002846  A4D8               	btfss	status,2,c
  5833  002848  D008               	goto	l3254
  5834  00284A  0E00               	movlw	0
  5835  00284C  6E01               	movwf	___fleq@ff1,c
  5836  00284E  0E00               	movlw	0
  5837  002850  6E02               	movwf	___fleq@ff1+1,c
  5838  002852  0E00               	movlw	0
  5839  002854  6E03               	movwf	___fleq@ff1+2,c
  5840  002856  0E00               	movlw	0
  5841  002858  6E04               	movwf	___fleq@ff1+3,c
  5842  00285A                     l3254:
  5843  00285A  0E00               	movlw	0
  5844  00285C  1405               	andwf	___fleq@ff2,w,c
  5845  00285E  6E09               	movwf	??___fleq& (0+255),c
  5846  002860  0E00               	movlw	0
  5847  002862  1406               	andwf	___fleq@ff2+1,w,c
  5848  002864  6E0A               	movwf	(??___fleq+1)& (0+255),c
  5849  002866  0E80               	movlw	128
  5850  002868  1407               	andwf	___fleq@ff2+2,w,c
  5851  00286A  6E0B               	movwf	(??___fleq+2)& (0+255),c
  5852  00286C  0E7F               	movlw	127
  5853  00286E  1408               	andwf	___fleq@ff2+3,w,c
  5854  002870  6E0C               	movwf	(??___fleq+3)& (0+255),c
  5855  002872  5009               	movf	??___fleq,w,c
  5856  002874  100A               	iorwf	??___fleq+1,w,c
  5857  002876  100B               	iorwf	??___fleq+2,w,c
  5858  002878  100C               	iorwf	??___fleq+3,w,c
  5859  00287A  A4D8               	btfss	status,2,c
  5860  00287C  D008               	goto	l3258
  5861  00287E  0E00               	movlw	0
  5862  002880  6E05               	movwf	___fleq@ff2,c
  5863  002882  0E00               	movlw	0
  5864  002884  6E06               	movwf	___fleq@ff2+1,c
  5865  002886  0E00               	movlw	0
  5866  002888  6E07               	movwf	___fleq@ff2+2,c
  5867  00288A  0E00               	movlw	0
  5868  00288C  6E08               	movwf	___fleq@ff2+3,c
  5869  00288E                     l3258:
  5870  00288E  5005               	movf	___fleq@ff2,w,c
  5871  002890  1801               	xorwf	___fleq@ff1,w,c
  5872  002892  E10A               	bnz	u3790
  5873  002894  5006               	movf	___fleq@ff2+1,w,c
  5874  002896  1802               	xorwf	___fleq@ff1+1,w,c
  5875  002898  E107               	bnz	u3790
  5876  00289A  5007               	movf	___fleq@ff2+2,w,c
  5877  00289C  1803               	xorwf	___fleq@ff1+2,w,c
  5878  00289E  E104               	bnz	u3790
  5879  0028A0  5008               	movf	___fleq@ff2+3,w,c
  5880  0028A2  1804               	xorwf	___fleq@ff1+3,w,c
  5881  0028A4  B4D8               	btfsc	status,2,c
  5882  0028A6  D002               	goto	l3262
  5883  0028A8                     u3790:
  5884  0028A8  90D8               	bcf	status,0,c
  5885  0028AA  0012               	return	
  5886  0028AC                     l3262:
  5887  0028AC  80D8               	bsf	status,0,c
  5888  0028AE  0012               	return		;funcret
  5889  0028B0                     __end_of___fleq:
  5890                           	opt callstack 0
  5891                           
  5892 ;; *************** function ___fldiv *****************
  5893 ;; Defined at:
  5894 ;;		line 11 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/sprcdiv.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;  b               4   39[COMRAM] unsigned char 
  5897 ;;  a               4   43[COMRAM] unsigned char 
  5898 ;; Auto vars:     Size  Location     Type
  5899 ;;  grs             4   58[COMRAM] unsigned long 
  5900 ;;  rem             4   51[COMRAM] unsigned long 
  5901 ;;  new_exp         2   56[COMRAM] short 
  5902 ;;  aexp            1   63[COMRAM] unsigned char 
  5903 ;;  bexp            1   62[COMRAM] unsigned char 
  5904 ;;  sign            1   55[COMRAM] unsigned char 
  5905 ;; Return value:  Size  Location     Type
  5906 ;;                  4   39[COMRAM] unsigned char 
  5907 ;; Registers used:
  5908 ;;		wreg, status,2, status,0
  5909 ;; Tracked objects:
  5910 ;;		On entry : 0/0
  5911 ;;		On exit  : 0/0
  5912 ;;		Unchanged: 0/0
  5913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5914 ;;      Params:         8       0       0       0       0       0       0       0       0
  5915 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5916 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5917 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5918 ;;Total ram usage:       25 bytes
  5919 ;; Hardware stack levels used:    1
  5920 ;; This function calls:
  5921 ;;		Nothing
  5922 ;; This function is called by:
  5923 ;;		_main
  5924 ;;		_efgtoa
  5925 ;; This function uses a non-reentrant model
  5926 ;;
  5927                           
  5928                           	psect	text23
  5929  001BD4                     __ptext23:
  5930                           	opt callstack 0
  5931  001BD4                     ___fldiv:
  5932                           	opt callstack 26
  5933                           
  5934                           ;incstack = 0
  5935  001BD4  502B               	movf	___fldiv@b+3,w,c
  5936  001BD6  0B80               	andlw	128
  5937  001BD8  6E38               	movwf	___fldiv@sign,c
  5938  001BDA  502B               	movf	___fldiv@b+3,w,c
  5939  001BDC  242B               	addwf	___fldiv@b+3,w,c
  5940  001BDE  6E3F               	movwf	___fldiv@bexp,c
  5941  001BE0  BE2A               	btfsc	___fldiv@b+2,7,c
  5942  001BE2  803F               	bsf	___fldiv@bexp,0,c
  5943  001BE4  503F               	movf	___fldiv@bexp,w,c
  5944  001BE6  B4D8               	btfsc	status,2,c
  5945  001BE8  D00D               	goto	l2912
  5946  001BEA  283F               	incf	___fldiv@bexp,w,c
  5947  001BEC  A4D8               	btfss	status,2,c
  5948  001BEE  D008               	goto	l2908
  5949  001BF0  0E00               	movlw	0
  5950  001BF2  6E28               	movwf	___fldiv@b,c
  5951  001BF4  0E00               	movlw	0
  5952  001BF6  6E29               	movwf	___fldiv@b+1,c
  5953  001BF8  0E00               	movlw	0
  5954  001BFA  6E2A               	movwf	___fldiv@b+2,c
  5955  001BFC  0E00               	movlw	0
  5956  001BFE  6E2B               	movwf	___fldiv@b+3,c
  5957  001C00                     l2908:
  5958  001C00  8E2A               	bsf	___fldiv@b+2,7,c
  5959  001C02  D006               	goto	L11
  5960  001C04                     l2912:
  5961  001C04  0E00               	movlw	0
  5962  001C06  6E28               	movwf	___fldiv@b,c
  5963  001C08  0E00               	movlw	0
  5964  001C0A  6E29               	movwf	___fldiv@b+1,c
  5965  001C0C  0E00               	movlw	0
  5966  001C0E  6E2A               	movwf	___fldiv@b+2,c
  5967  001C10                     L11:
  5968  001C10  0E00               	movlw	0
  5969  001C12  6E2B               	movwf	___fldiv@b+3,c
  5970  001C14  502F               	movf	___fldiv@a+3,w,c
  5971  001C16  0B80               	andlw	128
  5972  001C18  1A38               	xorwf	___fldiv@sign,f,c
  5973  001C1A  502F               	movf	___fldiv@a+3,w,c
  5974  001C1C  242F               	addwf	___fldiv@a+3,w,c
  5975  001C1E  6E40               	movwf	___fldiv@aexp,c
  5976  001C20  BE2E               	btfsc	___fldiv@a+2,7,c
  5977  001C22  8040               	bsf	___fldiv@aexp,0,c
  5978  001C24  5040               	movf	___fldiv@aexp,w,c
  5979  001C26  B4D8               	btfsc	status,2,c
  5980  001C28  D00D               	goto	l2932
  5981  001C2A  2840               	incf	___fldiv@aexp,w,c
  5982  001C2C  A4D8               	btfss	status,2,c
  5983  001C2E  D008               	goto	l2928
  5984  001C30  0E00               	movlw	0
  5985  001C32  6E2C               	movwf	___fldiv@a,c
  5986  001C34  0E00               	movlw	0
  5987  001C36  6E2D               	movwf	___fldiv@a+1,c
  5988  001C38  0E00               	movlw	0
  5989  001C3A  6E2E               	movwf	___fldiv@a+2,c
  5990  001C3C  0E00               	movlw	0
  5991  001C3E  6E2F               	movwf	___fldiv@a+3,c
  5992  001C40                     l2928:
  5993  001C40  8E2E               	bsf	___fldiv@a+2,7,c
  5994  001C42  D006               	goto	L12
  5995  001C44                     l2932:
  5996  001C44  0E00               	movlw	0
  5997  001C46  6E2C               	movwf	___fldiv@a,c
  5998  001C48  0E00               	movlw	0
  5999  001C4A  6E2D               	movwf	___fldiv@a+1,c
  6000  001C4C  0E00               	movlw	0
  6001  001C4E  6E2E               	movwf	___fldiv@a+2,c
  6002  001C50                     L12:
  6003  001C50  0E00               	movlw	0
  6004  001C52  6E2F               	movwf	___fldiv@a+3,c
  6005  001C54  502C               	movf	___fldiv@a,w,c
  6006  001C56  102D               	iorwf	___fldiv@a+1,w,c
  6007  001C58  102E               	iorwf	___fldiv@a+2,w,c
  6008  001C5A  102F               	iorwf	___fldiv@a+3,w,c
  6009  001C5C  A4D8               	btfss	status,2,c
  6010  001C5E  D017               	goto	l2946
  6011  001C60  0E00               	movlw	0
  6012  001C62  6E28               	movwf	___fldiv@b,c
  6013  001C64  0E00               	movlw	0
  6014  001C66  6E29               	movwf	___fldiv@b+1,c
  6015  001C68  0E00               	movlw	0
  6016  001C6A  6E2A               	movwf	___fldiv@b+2,c
  6017  001C6C  0E00               	movlw	0
  6018  001C6E  6E2B               	movwf	___fldiv@b+3,c
  6019  001C70  0E80               	movlw	128
  6020  001C72  122A               	iorwf	___fldiv@b+2,f,c
  6021  001C74  0E7F               	movlw	127
  6022  001C76  122B               	iorwf	___fldiv@b+3,f,c
  6023  001C78                     l2940:
  6024  001C78  5038               	movf	___fldiv@sign,w,c
  6025  001C7A  122B               	iorwf	___fldiv@b+3,f,c
  6026  001C7C  C028  F028         	movff	___fldiv@b,?___fldiv
  6027  001C80  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  6028  001C84  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  6029  001C88  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  6030  001C8C  0012               	return	
  6031  001C8E                     l2946:
  6032  001C8E  503F               	movf	___fldiv@bexp,w,c
  6033  001C90  A4D8               	btfss	status,2,c
  6034  001C92  D009               	goto	l2954
  6035  001C94  0E00               	movlw	0
  6036  001C96  6E28               	movwf	?___fldiv,c
  6037  001C98  0E00               	movlw	0
  6038  001C9A  6E29               	movwf	?___fldiv+1,c
  6039  001C9C  0E00               	movlw	0
  6040  001C9E  6E2A               	movwf	?___fldiv+2,c
  6041  001CA0  0E00               	movlw	0
  6042  001CA2  6E2B               	movwf	?___fldiv+3,c
  6043  001CA4  0012               	return	
  6044  001CA6                     l2954:
  6045  001CA6  5040               	movf	___fldiv@aexp,w,c
  6046  001CA8  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  6047  001CAC  6A31               	clrf	(??___fldiv+1)& (0+255),c
  6048  001CAE  5E30               	subwf	??___fldiv,f,c
  6049  001CB0  0E00               	movlw	0
  6050  001CB2  5A31               	subwfb	??___fldiv+1,f,c
  6051  001CB4  0E7F               	movlw	127
  6052  001CB6  2430               	addwf	??___fldiv,w,c
  6053  001CB8  6E39               	movwf	___fldiv@new_exp,c
  6054  001CBA  0E00               	movlw	0
  6055  001CBC  2031               	addwfc	??___fldiv+1,w,c
  6056  001CBE  6E3A               	movwf	___fldiv@new_exp+1,c
  6057  001CC0  C028  F034         	movff	___fldiv@b,___fldiv@rem
  6058  001CC4  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  6059  001CC8  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  6060  001CCC  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  6061  001CD0  0E00               	movlw	0
  6062  001CD2  6E28               	movwf	___fldiv@b,c
  6063  001CD4  0E00               	movlw	0
  6064  001CD6  6E29               	movwf	___fldiv@b+1,c
  6065  001CD8  0E00               	movlw	0
  6066  001CDA  6E2A               	movwf	___fldiv@b+2,c
  6067  001CDC  0E00               	movlw	0
  6068  001CDE  6E2B               	movwf	___fldiv@b+3,c
  6069  001CE0  0E00               	movlw	0
  6070  001CE2  6E3B               	movwf	___fldiv@grs,c
  6071  001CE4  0E00               	movlw	0
  6072  001CE6  6E3C               	movwf	___fldiv@grs+1,c
  6073  001CE8  0E00               	movlw	0
  6074  001CEA  6E3D               	movwf	___fldiv@grs+2,c
  6075  001CEC  0E00               	movlw	0
  6076  001CEE  6E3E               	movwf	___fldiv@grs+3,c
  6077  001CF0  0E00               	movlw	0
  6078  001CF2  6E40               	movwf	___fldiv@aexp,c
  6079  001CF4  D028               	goto	l844
  6080  001CF6                     l2964:
  6081  001CF6  5040               	movf	___fldiv@aexp,w,c
  6082  001CF8  B4D8               	btfsc	status,2,c
  6083  001CFA  D011               	goto	l2972
  6084  001CFC  90D8               	bcf	status,0,c
  6085  001CFE  3634               	rlcf	___fldiv@rem,f,c
  6086  001D00  3635               	rlcf	___fldiv@rem+1,f,c
  6087  001D02  3636               	rlcf	___fldiv@rem+2,f,c
  6088  001D04  3637               	rlcf	___fldiv@rem+3,f,c
  6089  001D06  90D8               	bcf	status,0,c
  6090  001D08  3628               	rlcf	___fldiv@b,f,c
  6091  001D0A  3629               	rlcf	___fldiv@b+1,f,c
  6092  001D0C  362A               	rlcf	___fldiv@b+2,f,c
  6093  001D0E  362B               	rlcf	___fldiv@b+3,f,c
  6094  001D10  BE3E               	btfsc	___fldiv@grs+3,7,c
  6095  001D12  8028               	bsf	___fldiv@b,0,c
  6096  001D14  90D8               	bcf	status,0,c
  6097  001D16  363B               	rlcf	___fldiv@grs,f,c
  6098  001D18  363C               	rlcf	___fldiv@grs+1,f,c
  6099  001D1A  363D               	rlcf	___fldiv@grs+2,f,c
  6100  001D1C  363E               	rlcf	___fldiv@grs+3,f,c
  6101  001D1E                     l2972:
  6102  001D1E  502C               	movf	___fldiv@a,w,c
  6103  001D20  5C34               	subwf	___fldiv@rem,w,c
  6104  001D22  502D               	movf	___fldiv@a+1,w,c
  6105  001D24  5835               	subwfb	___fldiv@rem+1,w,c
  6106  001D26  502E               	movf	___fldiv@a+2,w,c
  6107  001D28  5836               	subwfb	___fldiv@rem+2,w,c
  6108  001D2A  502F               	movf	___fldiv@a+3,w,c
  6109  001D2C  5837               	subwfb	___fldiv@rem+3,w,c
  6110  001D2E  A0D8               	btfss	status,0,c
  6111  001D30  D009               	goto	l2978
  6112  001D32  8C3E               	bsf	___fldiv@grs+3,6,c
  6113  001D34  502C               	movf	___fldiv@a,w,c
  6114  001D36  5E34               	subwf	___fldiv@rem,f,c
  6115  001D38  502D               	movf	___fldiv@a+1,w,c
  6116  001D3A  5A35               	subwfb	___fldiv@rem+1,f,c
  6117  001D3C  502E               	movf	___fldiv@a+2,w,c
  6118  001D3E  5A36               	subwfb	___fldiv@rem+2,f,c
  6119  001D40  502F               	movf	___fldiv@a+3,w,c
  6120  001D42  5A37               	subwfb	___fldiv@rem+3,f,c
  6121  001D44                     l2978:
  6122  001D44  2A40               	incf	___fldiv@aexp,f,c
  6123  001D46                     l844:
  6124  001D46  0E19               	movlw	25
  6125  001D48  6440               	cpfsgt	___fldiv@aexp,c
  6126  001D4A  D7D5               	goto	l2964
  6127  001D4C  5034               	movf	___fldiv@rem,w,c
  6128  001D4E  1035               	iorwf	___fldiv@rem+1,w,c
  6129  001D50  1036               	iorwf	___fldiv@rem+2,w,c
  6130  001D52  1037               	iorwf	___fldiv@rem+3,w,c
  6131  001D54  B4D8               	btfsc	status,2,c
  6132  001D56  D011               	goto	l2990
  6133  001D58  803B               	bsf	___fldiv@grs,0,c
  6134  001D5A  D00F               	goto	l2990
  6135  001D5C                     l2984:
  6136  001D5C  90D8               	bcf	status,0,c
  6137  001D5E  3628               	rlcf	___fldiv@b,f,c
  6138  001D60  3629               	rlcf	___fldiv@b+1,f,c
  6139  001D62  362A               	rlcf	___fldiv@b+2,f,c
  6140  001D64  362B               	rlcf	___fldiv@b+3,f,c
  6141  001D66  BE3E               	btfsc	___fldiv@grs+3,7,c
  6142  001D68  8028               	bsf	___fldiv@b,0,c
  6143  001D6A  90D8               	bcf	status,0,c
  6144  001D6C  363B               	rlcf	___fldiv@grs,f,c
  6145  001D6E  363C               	rlcf	___fldiv@grs+1,f,c
  6146  001D70  363D               	rlcf	___fldiv@grs+2,f,c
  6147  001D72  363E               	rlcf	___fldiv@grs+3,f,c
  6148  001D74  0639               	decf	___fldiv@new_exp,f,c
  6149  001D76  A0D8               	btfss	status,0,c
  6150  001D78  063A               	decf	___fldiv@new_exp+1,f,c
  6151  001D7A                     l2990:
  6152  001D7A  AE2A               	btfss	___fldiv@b+2,7,c
  6153  001D7C  D7EF               	goto	l2984
  6154  001D7E  0E00               	movlw	0
  6155  001D80  6E40               	movwf	___fldiv@aexp,c
  6156  001D82  AE3E               	btfss	___fldiv@grs+3,7,c
  6157  001D84  D017               	goto	l855
  6158  001D86  0EFF               	movlw	255
  6159  001D88  143B               	andwf	___fldiv@grs,w,c
  6160  001D8A  6E30               	movwf	??___fldiv& (0+255),c
  6161  001D8C  0EFF               	movlw	255
  6162  001D8E  143C               	andwf	___fldiv@grs+1,w,c
  6163  001D90  6E31               	movwf	(??___fldiv+1)& (0+255),c
  6164  001D92  0EFF               	movlw	255
  6165  001D94  143D               	andwf	___fldiv@grs+2,w,c
  6166  001D96  6E32               	movwf	(??___fldiv+2)& (0+255),c
  6167  001D98  0E7F               	movlw	127
  6168  001D9A  143E               	andwf	___fldiv@grs+3,w,c
  6169  001D9C  6E33               	movwf	(??___fldiv+3)& (0+255),c
  6170  001D9E  5030               	movf	??___fldiv,w,c
  6171  001DA0  1031               	iorwf	??___fldiv+1,w,c
  6172  001DA2  1032               	iorwf	??___fldiv+2,w,c
  6173  001DA4  1033               	iorwf	??___fldiv+3,w,c
  6174  001DA6  B4D8               	btfsc	status,2,c
  6175  001DA8  D003               	goto	l856
  6176  001DAA                     u3390:
  6177  001DAA  0E01               	movlw	1
  6178  001DAC  6E40               	movwf	___fldiv@aexp,c
  6179  001DAE  D002               	goto	l855
  6180  001DB0                     l856:
  6181  001DB0  B028               	btfsc	___fldiv@b,0,c
  6182  001DB2  D7FB               	goto	u3390
  6183  001DB4                     l855:
  6184  001DB4  5040               	movf	___fldiv@aexp,w,c
  6185  001DB6  B4D8               	btfsc	status,2,c
  6186  001DB8  D01F               	goto	l3010
  6187  001DBA  0E01               	movlw	1
  6188  001DBC  2628               	addwf	___fldiv@b,f,c
  6189  001DBE  0E00               	movlw	0
  6190  001DC0  2229               	addwfc	___fldiv@b+1,f,c
  6191  001DC2  222A               	addwfc	___fldiv@b+2,f,c
  6192  001DC4  222B               	addwfc	___fldiv@b+3,f,c
  6193  001DC6  A02B               	btfss	___fldiv@b+3,0,c
  6194  001DC8  D017               	goto	l3010
  6195  001DCA  C028  F030         	movff	___fldiv@b,??___fldiv
  6196  001DCE  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  6197  001DD2  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  6198  001DD6  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  6199  001DDA  3433               	rlcf	??___fldiv+3,w,c
  6200  001DDC  3233               	rrcf	??___fldiv+3,f,c
  6201  001DDE  3232               	rrcf	??___fldiv+2,f,c
  6202  001DE0  3231               	rrcf	??___fldiv+1,f,c
  6203  001DE2  3230               	rrcf	??___fldiv,f,c
  6204  001DE4  C030  F028         	movff	??___fldiv,___fldiv@b
  6205  001DE8  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  6206  001DEC  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  6207  001DF0  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  6208  001DF4  4A39               	infsnz	___fldiv@new_exp,f,c
  6209  001DF6  2A3A               	incf	___fldiv@new_exp+1,f,c
  6210  001DF8                     l3010:
  6211  001DF8  BE3A               	btfsc	___fldiv@new_exp+1,7,c
  6212  001DFA  D010               	goto	l3014
  6213  001DFC  503A               	movf	___fldiv@new_exp+1,w,c
  6214  001DFE  E103               	bnz	u3430
  6215  001E00  2839               	incf	___fldiv@new_exp,w,c
  6216  001E02  A0D8               	btfss	status,0,c
  6217  001E04  D00B               	goto	l3014
  6218  001E06                     u3430:
  6219  001E06  0E00               	movlw	0
  6220  001E08  6E3A               	movwf	___fldiv@new_exp+1,c
  6221  001E0A  6839               	setf	___fldiv@new_exp,c
  6222  001E0C  0E00               	movlw	0
  6223  001E0E  6E28               	movwf	___fldiv@b,c
  6224  001E10  0E00               	movlw	0
  6225  001E12  6E29               	movwf	___fldiv@b+1,c
  6226  001E14  0E00               	movlw	0
  6227  001E16  6E2A               	movwf	___fldiv@b+2,c
  6228  001E18  0E00               	movlw	0
  6229  001E1A  6E2B               	movwf	___fldiv@b+3,c
  6230  001E1C                     l3014:
  6231  001E1C  BE3A               	btfsc	___fldiv@new_exp+1,7,c
  6232  001E1E  D005               	goto	u3440
  6233  001E20  503A               	movf	___fldiv@new_exp+1,w,c
  6234  001E22  E111               	bnz	l3018
  6235  001E24  0439               	decf	___fldiv@new_exp,w,c
  6236  001E26  B0D8               	btfsc	status,0,c
  6237  001E28  D00E               	goto	l3018
  6238  001E2A                     u3440:
  6239  001E2A  0E00               	movlw	0
  6240  001E2C  6E3A               	movwf	___fldiv@new_exp+1,c
  6241  001E2E  0E00               	movlw	0
  6242  001E30  6E39               	movwf	___fldiv@new_exp,c
  6243  001E32  0E00               	movlw	0
  6244  001E34  6E28               	movwf	___fldiv@b,c
  6245  001E36  0E00               	movlw	0
  6246  001E38  6E29               	movwf	___fldiv@b+1,c
  6247  001E3A  0E00               	movlw	0
  6248  001E3C  6E2A               	movwf	___fldiv@b+2,c
  6249  001E3E  0E00               	movlw	0
  6250  001E40  6E2B               	movwf	___fldiv@b+3,c
  6251  001E42  0E00               	movlw	0
  6252  001E44  6E38               	movwf	___fldiv@sign,c
  6253  001E46                     l3018:
  6254  001E46  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  6255  001E4A  A03F               	btfss	___fldiv@bexp,0,c
  6256  001E4C  D002               	goto	l3024
  6257  001E4E  8E2A               	bsf	___fldiv@b+2,7,c
  6258  001E50  D001               	goto	l3026
  6259  001E52                     l3024:
  6260  001E52  9E2A               	bcf	___fldiv@b+2,7,c
  6261  001E54                     l3026:
  6262  001E54  90D8               	bcf	status,0,c
  6263  001E56  303F               	rrcf	___fldiv@bexp,w,c
  6264  001E58  6E2B               	movwf	___fldiv@b+3,c
  6265  001E5A  D70E               	goto	l2940
  6266  001E5C                     __end_of___fldiv:
  6267                           	opt callstack 0
  6268                           
  6269 ;; *************** function ___awmod *****************
  6270 ;; Defined at:
  6271 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;  dividend        2    0[COMRAM] int 
  6274 ;;  divisor         2    2[COMRAM] int 
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;  sign            1    5[COMRAM] unsigned char 
  6277 ;;  counter         1    4[COMRAM] unsigned char 
  6278 ;; Return value:  Size  Location     Type
  6279 ;;                  2    0[COMRAM] int 
  6280 ;; Registers used:
  6281 ;;		wreg, status,2, status,0
  6282 ;; Tracked objects:
  6283 ;;		On entry : 0/0
  6284 ;;		On exit  : 0/0
  6285 ;;		Unchanged: 0/0
  6286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6287 ;;      Params:         4       0       0       0       0       0       0       0       0
  6288 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6289 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6290 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6291 ;;Total ram usage:        6 bytes
  6292 ;; Hardware stack levels used:    1
  6293 ;; This function calls:
  6294 ;;		Nothing
  6295 ;; This function is called by:
  6296 ;;		_efgtoa
  6297 ;; This function uses a non-reentrant model
  6298 ;;
  6299                           
  6300                           	psect	text24
  6301  002A1A                     __ptext24:
  6302                           	opt callstack 0
  6303  002A1A                     ___awmod:
  6304                           	opt callstack 26
  6305                           
  6306                           ;incstack = 0
  6307  002A1A  0E00               	movlw	0
  6308  002A1C  6E06               	movwf	___awmod@sign,c
  6309  002A1E  AE02               	btfss	___awmod@dividend+1,7,c
  6310  002A20  D006               	goto	l3222
  6311  002A22  6C01               	negf	___awmod@dividend,c
  6312  002A24  1E02               	comf	___awmod@dividend+1,f,c
  6313  002A26  B0D8               	btfsc	status,0,c
  6314  002A28  2A02               	incf	___awmod@dividend+1,f,c
  6315  002A2A  0E01               	movlw	1
  6316  002A2C  6E06               	movwf	___awmod@sign,c
  6317  002A2E                     l3222:
  6318  002A2E  AE04               	btfss	___awmod@divisor+1,7,c
  6319  002A30  D004               	goto	l3226
  6320  002A32  6C03               	negf	___awmod@divisor,c
  6321  002A34  1E04               	comf	___awmod@divisor+1,f,c
  6322  002A36  B0D8               	btfsc	status,0,c
  6323  002A38  2A04               	incf	___awmod@divisor+1,f,c
  6324  002A3A                     l3226:
  6325  002A3A  5003               	movf	___awmod@divisor,w,c
  6326  002A3C  1004               	iorwf	___awmod@divisor+1,w,c
  6327  002A3E  B4D8               	btfsc	status,2,c
  6328  002A40  D018               	goto	l3242
  6329  002A42  0E01               	movlw	1
  6330  002A44  6E05               	movwf	___awmod@counter,c
  6331  002A46  D004               	goto	l3232
  6332  002A48                     l3230:
  6333  002A48  90D8               	bcf	status,0,c
  6334  002A4A  3603               	rlcf	___awmod@divisor,f,c
  6335  002A4C  3604               	rlcf	___awmod@divisor+1,f,c
  6336  002A4E  2A05               	incf	___awmod@counter,f,c
  6337  002A50                     l3232:
  6338  002A50  AE04               	btfss	___awmod@divisor+1,7,c
  6339  002A52  D7FA               	goto	l3230
  6340  002A54                     u3740:
  6341  002A54  5003               	movf	___awmod@divisor,w,c
  6342  002A56  5C01               	subwf	___awmod@dividend,w,c
  6343  002A58  5004               	movf	___awmod@divisor+1,w,c
  6344  002A5A  5802               	subwfb	___awmod@dividend+1,w,c
  6345  002A5C  A0D8               	btfss	status,0,c
  6346  002A5E  D004               	goto	l3238
  6347  002A60  5003               	movf	___awmod@divisor,w,c
  6348  002A62  5E01               	subwf	___awmod@dividend,f,c
  6349  002A64  5004               	movf	___awmod@divisor+1,w,c
  6350  002A66  5A02               	subwfb	___awmod@dividend+1,f,c
  6351  002A68                     l3238:
  6352  002A68  90D8               	bcf	status,0,c
  6353  002A6A  3204               	rrcf	___awmod@divisor+1,f,c
  6354  002A6C  3203               	rrcf	___awmod@divisor,f,c
  6355  002A6E  2E05               	decfsz	___awmod@counter,f,c
  6356  002A70  D7F1               	goto	u3740
  6357  002A72                     l3242:
  6358  002A72  5006               	movf	___awmod@sign,w,c
  6359  002A74  B4D8               	btfsc	status,2,c
  6360  002A76  D004               	goto	l3246
  6361  002A78  6C01               	negf	___awmod@dividend,c
  6362  002A7A  1E02               	comf	___awmod@dividend+1,f,c
  6363  002A7C  B0D8               	btfsc	status,0,c
  6364  002A7E  2A02               	incf	___awmod@dividend+1,f,c
  6365  002A80                     l3246:
  6366  002A80  C001  F001         	movff	___awmod@dividend,?___awmod
  6367  002A84  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6368  002A88  0012               	return		;funcret
  6369  002A8A                     __end_of___awmod:
  6370                           	opt callstack 0
  6371                           
  6372 ;; *************** function ___awdiv *****************
  6373 ;; Defined at:
  6374 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awdiv.c"
  6375 ;; Parameters:    Size  Location     Type
  6376 ;;  dividend        2    0[COMRAM] int 
  6377 ;;  divisor         2    2[COMRAM] int 
  6378 ;; Auto vars:     Size  Location     Type
  6379 ;;  quotient        2    6[COMRAM] int 
  6380 ;;  sign            1    5[COMRAM] unsigned char 
  6381 ;;  counter         1    4[COMRAM] unsigned char 
  6382 ;; Return value:  Size  Location     Type
  6383 ;;                  2    0[COMRAM] int 
  6384 ;; Registers used:
  6385 ;;		wreg, status,2, status,0
  6386 ;; Tracked objects:
  6387 ;;		On entry : 0/0
  6388 ;;		On exit  : 0/0
  6389 ;;		Unchanged: 0/0
  6390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6391 ;;      Params:         4       0       0       0       0       0       0       0       0
  6392 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6393 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6394 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6395 ;;Total ram usage:        8 bytes
  6396 ;; Hardware stack levels used:    1
  6397 ;; This function calls:
  6398 ;;		Nothing
  6399 ;; This function is called by:
  6400 ;;		_efgtoa
  6401 ;; This function uses a non-reentrant model
  6402 ;;
  6403                           
  6404                           	psect	text25
  6405  0028B0                     __ptext25:
  6406                           	opt callstack 0
  6407  0028B0                     ___awdiv:
  6408                           	opt callstack 26
  6409                           
  6410                           ;incstack = 0
  6411  0028B0  0E00               	movlw	0
  6412  0028B2  6E06               	movwf	___awdiv@sign,c
  6413  0028B4  AE04               	btfss	___awdiv@divisor+1,7,c
  6414  0028B6  D006               	goto	l3178
  6415  0028B8  6C03               	negf	___awdiv@divisor,c
  6416  0028BA  1E04               	comf	___awdiv@divisor+1,f,c
  6417  0028BC  B0D8               	btfsc	status,0,c
  6418  0028BE  2A04               	incf	___awdiv@divisor+1,f,c
  6419  0028C0  0E01               	movlw	1
  6420  0028C2  6E06               	movwf	___awdiv@sign,c
  6421  0028C4                     l3178:
  6422  0028C4  AE02               	btfss	___awdiv@dividend+1,7,c
  6423  0028C6  D006               	goto	l3184
  6424  0028C8  6C01               	negf	___awdiv@dividend,c
  6425  0028CA  1E02               	comf	___awdiv@dividend+1,f,c
  6426  0028CC  B0D8               	btfsc	status,0,c
  6427  0028CE  2A02               	incf	___awdiv@dividend+1,f,c
  6428  0028D0  0E01               	movlw	1
  6429  0028D2  1A06               	xorwf	___awdiv@sign,f,c
  6430  0028D4                     l3184:
  6431  0028D4  0E00               	movlw	0
  6432  0028D6  6E08               	movwf	___awdiv@quotient+1,c
  6433  0028D8  0E00               	movlw	0
  6434  0028DA  6E07               	movwf	___awdiv@quotient,c
  6435  0028DC  5003               	movf	___awdiv@divisor,w,c
  6436  0028DE  1004               	iorwf	___awdiv@divisor+1,w,c
  6437  0028E0  B4D8               	btfsc	status,2,c
  6438  0028E2  D01C               	goto	l3206
  6439  0028E4  0E01               	movlw	1
  6440  0028E6  6E05               	movwf	___awdiv@counter,c
  6441  0028E8  D004               	goto	l3192
  6442  0028EA                     l3190:
  6443  0028EA  90D8               	bcf	status,0,c
  6444  0028EC  3603               	rlcf	___awdiv@divisor,f,c
  6445  0028EE  3604               	rlcf	___awdiv@divisor+1,f,c
  6446  0028F0  2A05               	incf	___awdiv@counter,f,c
  6447  0028F2                     l3192:
  6448  0028F2  AE04               	btfss	___awdiv@divisor+1,7,c
  6449  0028F4  D7FA               	goto	l3190
  6450  0028F6                     u3680:
  6451  0028F6  90D8               	bcf	status,0,c
  6452  0028F8  3607               	rlcf	___awdiv@quotient,f,c
  6453  0028FA  3608               	rlcf	___awdiv@quotient+1,f,c
  6454  0028FC  5003               	movf	___awdiv@divisor,w,c
  6455  0028FE  5C01               	subwf	___awdiv@dividend,w,c
  6456  002900  5004               	movf	___awdiv@divisor+1,w,c
  6457  002902  5802               	subwfb	___awdiv@dividend+1,w,c
  6458  002904  A0D8               	btfss	status,0,c
  6459  002906  D005               	goto	l3202
  6460  002908  5003               	movf	___awdiv@divisor,w,c
  6461  00290A  5E01               	subwf	___awdiv@dividend,f,c
  6462  00290C  5004               	movf	___awdiv@divisor+1,w,c
  6463  00290E  5A02               	subwfb	___awdiv@dividend+1,f,c
  6464  002910  8007               	bsf	___awdiv@quotient,0,c
  6465  002912                     l3202:
  6466  002912  90D8               	bcf	status,0,c
  6467  002914  3204               	rrcf	___awdiv@divisor+1,f,c
  6468  002916  3203               	rrcf	___awdiv@divisor,f,c
  6469  002918  2E05               	decfsz	___awdiv@counter,f,c
  6470  00291A  D7ED               	goto	u3680
  6471  00291C                     l3206:
  6472  00291C  5006               	movf	___awdiv@sign,w,c
  6473  00291E  B4D8               	btfsc	status,2,c
  6474  002920  D004               	goto	l3210
  6475  002922  6C07               	negf	___awdiv@quotient,c
  6476  002924  1E08               	comf	___awdiv@quotient+1,f,c
  6477  002926  B0D8               	btfsc	status,0,c
  6478  002928  2A08               	incf	___awdiv@quotient+1,f,c
  6479  00292A                     l3210:
  6480  00292A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6481  00292E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6482  002932  0012               	return		;funcret
  6483  002934                     __end_of___awdiv:
  6484                           	opt callstack 0
  6485                           
  6486 ;; *************** function _atoi *****************
  6487 ;; Defined at:
  6488 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  6489 ;; Parameters:    Size  Location     Type
  6490 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6491 ;;		 -> STR_4(5), 
  6492 ;; Auto vars:     Size  Location     Type
  6493 ;;  n               2   20[COMRAM] int 
  6494 ;;  neg             2   13[COMRAM] int 
  6495 ;; Return value:  Size  Location     Type
  6496 ;;                  2    7[COMRAM] int 
  6497 ;; Registers used:
  6498 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6499 ;; Tracked objects:
  6500 ;;		On entry : 0/0
  6501 ;;		On exit  : 0/0
  6502 ;;		Unchanged: 0/0
  6503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6504 ;;      Params:         2       0       0       0       0       0       0       0       0
  6505 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6506 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6507 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6508 ;;Total ram usage:       15 bytes
  6509 ;; Hardware stack levels used:    1
  6510 ;; Hardware stack levels required when called:    1
  6511 ;; This function calls:
  6512 ;;		___wmul
  6513 ;;		_isdigit
  6514 ;;		_isspace
  6515 ;; This function is called by:
  6516 ;;		_vfpfcnvrt
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           	psect	text26
  6521  002174                     __ptext26:
  6522                           	opt callstack 0
  6523  002174                     _atoi:
  6524                           	opt callstack 26
  6525                           
  6526                           ;incstack = 0
  6527  002174  0E00               	movlw	0
  6528  002176  6E16               	movwf	atoi@n+1,c
  6529  002178  0E00               	movlw	0
  6530  00217A  6E15               	movwf	atoi@n,c
  6531  00217C  0E00               	movlw	0
  6532  00217E  6E0F               	movwf	atoi@neg+1,c
  6533  002180  0E00               	movlw	0
  6534  002182  6E0E               	movwf	atoi@neg,c
  6535  002184  D002               	goto	l3654
  6536  002186                     l3652:
  6537  002186  4A08               	infsnz	atoi@s,f,c
  6538  002188  2A09               	incf	atoi@s+1,f,c
  6539  00218A                     l3654:
  6540  00218A  0E01               	movlw	1
  6541  00218C  6E14               	movwf	_atoi$894,c
  6542  00218E  C008  FFF6         	movff	atoi@s,tblptrl
  6543  002192  C009  FFF7         	movff	atoi@s+1,tblptrh
  6544  002196                     	if	0	;tblptru may be non-zero
  6545  002196                     	endif
  6546  002196                     	if	0	;tblptru may be non-zero
  6547  002196                     	endif
  6548  002196  0008               	tblrd		*
  6549  002198  50F5               	movf	tablat,w,c
  6550  00219A  0A20               	xorlw	32
  6551  00219C  B4D8               	btfsc	status,2,c
  6552  00219E  D018               	goto	l3662
  6553  0021A0  0EF7               	movlw	247
  6554  0021A2  6E0A               	movwf	??_atoi& (0+255),c
  6555  0021A4  0EFF               	movlw	255
  6556  0021A6  6E0B               	movwf	(??_atoi+1)& (0+255),c
  6557  0021A8  C008  FFF6         	movff	atoi@s,tblptrl
  6558  0021AC  C009  FFF7         	movff	atoi@s+1,tblptrh
  6559  0021B0                     	if	0	;tblptru may be non-zero
  6560  0021B0                     	endif
  6561  0021B0                     	if	0	;tblptru may be non-zero
  6562  0021B0                     	endif
  6563  0021B0  0008               	tblrd		*
  6564  0021B2  50F5               	movf	tablat,w,c
  6565  0021B4  6E0C               	movwf	(??_atoi+2)& (0+255),c
  6566  0021B6  6A0D               	clrf	(??_atoi+3)& (0+255),c
  6567  0021B8  500A               	movf	??_atoi,w,c
  6568  0021BA  260C               	addwf	??_atoi+2,f,c
  6569  0021BC  500B               	movf	??_atoi+1,w,c
  6570  0021BE  220D               	addwfc	??_atoi+3,f,c
  6571  0021C0  500D               	movf	??_atoi+3,w,c
  6572  0021C2  E104               	bnz	u4480
  6573  0021C4  0E05               	movlw	5
  6574  0021C6  5C0C               	subwf	??_atoi+2,w,c
  6575  0021C8  A0D8               	btfss	status,0,c
  6576  0021CA  D002               	goto	l3662
  6577  0021CC                     u4480:
  6578  0021CC  0E00               	movlw	0
  6579  0021CE  6E14               	movwf	_atoi$894,c
  6580  0021D0                     l3662:
  6581  0021D0  C014  F010         	movff	_atoi$894,_atoi$893
  6582  0021D4  6A11               	clrf	_atoi$893+1,c
  6583  0021D6  5010               	movf	_atoi$893,w,c
  6584  0021D8  1011               	iorwf	_atoi$893+1,w,c
  6585  0021DA  B4D8               	btfsc	status,2,c
  6586  0021DC  D008               	goto	l3672
  6587  0021DE  D7D3               	goto	l3652
  6588  0021E0                     l3668:
  6589  0021E0  0E00               	movlw	0
  6590  0021E2  6E0F               	movwf	atoi@neg+1,c
  6591  0021E4  0E01               	movlw	1
  6592  0021E6  6E0E               	movwf	atoi@neg,c
  6593  0021E8                     l3670:
  6594  0021E8  4A08               	infsnz	atoi@s,f,c
  6595  0021EA  2A09               	incf	atoi@s+1,f,c
  6596  0021EC  D02E               	goto	l3678
  6597  0021EE                     l3672:
  6598  0021EE  C008  FFF6         	movff	atoi@s,tblptrl
  6599  0021F2  C009  FFF7         	movff	atoi@s+1,tblptrh
  6600  0021F6                     	if	0	;tblptru may be non-zero
  6601  0021F6                     	endif
  6602  0021F6                     	if	0	;tblptru may be non-zero
  6603  0021F6                     	endif
  6604  0021F6  0008               	tblrd		*
  6605  0021F8  50F5               	movf	tablat,w,c
  6606  0021FA  6E0A               	movwf	??_atoi& (0+255),c
  6607  0021FC  6A0B               	clrf	(??_atoi+1)& (0+255),c
  6608                           
  6609                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6610                           ; Switch size 1, requested type "simple"
  6611                           ; Number of cases is 1, Range of values is 0 to 0
  6612                           ; switch strategies available:
  6613                           ; Name         Instructions Cycles
  6614                           ; simple_byte            4     3 (average)
  6615                           ;	Chosen strategy is simple_byte
  6616  0021FE  500B               	movf	??_atoi+1,w,c
  6617  002200  0A00               	xorlw	0	; case 0
  6618  002202  A4D8               	btfss	status,2,c
  6619  002204  D022               	goto	l3678
  6620                           
  6621                           ; Switch size 1, requested type "simple"
  6622                           ; Number of cases is 2, Range of values is 43 to 45
  6623                           ; switch strategies available:
  6624                           ; Name         Instructions Cycles
  6625                           ; simple_byte            7     4 (average)
  6626                           ;	Chosen strategy is simple_byte
  6627  002206  500A               	movf	??_atoi,w,c
  6628  002208  0A2B               	xorlw	43	; case 43
  6629  00220A  B4D8               	btfsc	status,2,c
  6630  00220C  D7ED               	goto	l3670
  6631  00220E  0A06               	xorlw	6	; case 45
  6632  002210  B4D8               	btfsc	status,2,c
  6633  002212  D7E6               	goto	l3668
  6634  002214  D01A               	goto	l3678
  6635  002216                     l3674:
  6636  002216  C015  F001         	movff	atoi@n,___wmul@multiplier
  6637  00221A  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6638  00221E  0E00               	movlw	0
  6639  002220  6E04               	movwf	___wmul@multiplicand+1,c
  6640  002222  0E0A               	movlw	10
  6641  002224  6E03               	movwf	___wmul@multiplicand,c
  6642  002226  EC15  F017         	call	___wmul	;wreg free
  6643  00222A  C008  FFF6         	movff	atoi@s,tblptrl
  6644  00222E  C009  FFF7         	movff	atoi@s+1,tblptrh
  6645  002232                     	if	0	;tblptru may be non-zero
  6646  002232                     	endif
  6647  002232                     	if	0	;tblptru may be non-zero
  6648  002232                     	endif
  6649  002232  0008               	tblrd		*
  6650  002234  50F5               	movf	tablat,w,c
  6651  002236  5E01               	subwf	?___wmul,f,c
  6652  002238  0E00               	movlw	0
  6653  00223A  5A02               	subwfb	?___wmul+1,f,c
  6654  00223C  0E30               	movlw	48
  6655  00223E  2401               	addwf	?___wmul,w,c
  6656  002240  6E15               	movwf	atoi@n,c
  6657  002242  0E00               	movlw	0
  6658  002244  2002               	addwfc	?___wmul+1,w,c
  6659  002246  6E16               	movwf	atoi@n+1,c
  6660  002248  D7CF               	goto	l3670
  6661  00224A                     l3678:
  6662  00224A  0ED0               	movlw	208
  6663  00224C  6E0A               	movwf	??_atoi& (0+255),c
  6664  00224E  0EFF               	movlw	255
  6665  002250  6E0B               	movwf	(??_atoi+1)& (0+255),c
  6666  002252  C008  FFF6         	movff	atoi@s,tblptrl
  6667  002256  C009  FFF7         	movff	atoi@s+1,tblptrh
  6668  00225A                     	if	0	;tblptru may be non-zero
  6669  00225A                     	endif
  6670  00225A                     	if	0	;tblptru may be non-zero
  6671  00225A                     	endif
  6672  00225A  0008               	tblrd		*
  6673  00225C  50F5               	movf	tablat,w,c
  6674  00225E  6E0C               	movwf	(??_atoi+2)& (0+255),c
  6675  002260  6A0D               	clrf	(??_atoi+3)& (0+255),c
  6676  002262  500A               	movf	??_atoi,w,c
  6677  002264  260C               	addwf	??_atoi+2,f,c
  6678  002266  500B               	movf	??_atoi+1,w,c
  6679  002268  220D               	addwfc	??_atoi+3,f,c
  6680  00226A  500D               	movf	??_atoi+3,w,c
  6681  00226C  E106               	bnz	u4500
  6682  00226E  0E0A               	movlw	10
  6683  002270  5C0C               	subwf	??_atoi+2,w,c
  6684  002272  B0D8               	btfsc	status,0,c
  6685  002274  D002               	goto	u4500
  6686  002276  0E01               	movlw	1
  6687  002278  D001               	goto	u4510
  6688  00227A                     u4500:
  6689  00227A  0E00               	movlw	0
  6690  00227C                     u4510:
  6691  00227C  6E12               	movwf	_atoi$895,c
  6692  00227E  6A13               	clrf	_atoi$895+1,c
  6693  002280  5012               	movf	_atoi$895,w,c
  6694  002282  1013               	iorwf	_atoi$895+1,w,c
  6695  002284  A4D8               	btfss	status,2,c
  6696  002286  D7C7               	goto	l3674
  6697  002288  500E               	movf	atoi@neg,w,c
  6698  00228A  100F               	iorwf	atoi@neg+1,w,c
  6699  00228C  A4D8               	btfss	status,2,c
  6700  00228E  D00D               	goto	l970
  6701  002290  C015  F00A         	movff	atoi@n,??_atoi
  6702  002294  C016  F00B         	movff	atoi@n+1,??_atoi+1
  6703  002298  1E0A               	comf	??_atoi,f,c
  6704  00229A  1E0B               	comf	??_atoi+1,f,c
  6705  00229C  4A0A               	infsnz	??_atoi,f,c
  6706  00229E  2A0B               	incf	??_atoi+1,f,c
  6707  0022A0  C00A  F008         	movff	??_atoi,?_atoi
  6708  0022A4  C00B  F009         	movff	??_atoi+1,?_atoi+1
  6709  0022A8  0012               	return	
  6710  0022AA                     l970:
  6711  0022AA  C015  F008         	movff	atoi@n,?_atoi
  6712  0022AE  C016  F009         	movff	atoi@n+1,?_atoi+1
  6713  0022B2  0012               	return		;funcret
  6714  0022B4                     __end_of_atoi:
  6715                           	opt callstack 0
  6716                           
  6717 ;; *************** function _isspace *****************
  6718 ;; Defined at:
  6719 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
  6720 ;; Parameters:    Size  Location     Type
  6721 ;;  c               2    0[COMRAM] int 
  6722 ;; Auto vars:     Size  Location     Type
  6723 ;;		None
  6724 ;; Return value:  Size  Location     Type
  6725 ;;                  2    0[COMRAM] int 
  6726 ;; Registers used:
  6727 ;;		wreg, status,2, status,0
  6728 ;; Tracked objects:
  6729 ;;		On entry : 0/0
  6730 ;;		On exit  : 0/0
  6731 ;;		Unchanged: 0/0
  6732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6733 ;;      Params:         2       0       0       0       0       0       0       0       0
  6734 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6735 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6736 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6737 ;;Total ram usage:        7 bytes
  6738 ;; Hardware stack levels used:    1
  6739 ;; This function calls:
  6740 ;;		Nothing
  6741 ;; This function is called by:
  6742 ;;		_atoi
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           	psect	text27
  6747  002C66                     __ptext27:
  6748                           	opt callstack 0
  6749  002C66                     _isspace:
  6750                           	opt callstack 26
  6751                           
  6752                           ;incstack = 0
  6753  002C66  0E01               	movlw	1
  6754  002C68  6E07               	movwf	_isspace$924,c
  6755  002C6A  0E20               	movlw	32
  6756  002C6C  1801               	xorwf	isspace@c,w,c
  6757  002C6E  1002               	iorwf	isspace@c+1,w,c
  6758  002C70  B4D8               	btfsc	status,2,c
  6759  002C72  D014               	goto	l3348
  6760  002C74  0EF7               	movlw	247
  6761  002C76  6E03               	movwf	??_isspace& (0+255),c
  6762  002C78  0EFF               	movlw	255
  6763  002C7A  6E04               	movwf	(??_isspace+1)& (0+255),c
  6764  002C7C  C001  F005         	movff	isspace@c,??_isspace+2
  6765  002C80  C002  F006         	movff	isspace@c+1,??_isspace+3
  6766  002C84  5003               	movf	??_isspace,w,c
  6767  002C86  2605               	addwf	??_isspace+2,f,c
  6768  002C88  5004               	movf	??_isspace+1,w,c
  6769  002C8A  2206               	addwfc	??_isspace+3,f,c
  6770  002C8C  5006               	movf	??_isspace+3,w,c
  6771  002C8E  E104               	bnz	u3940
  6772  002C90  0E05               	movlw	5
  6773  002C92  5C05               	subwf	??_isspace+2,w,c
  6774  002C94  A0D8               	btfss	status,0,c
  6775  002C96  D002               	goto	l3348
  6776  002C98                     u3940:
  6777  002C98  0E00               	movlw	0
  6778  002C9A  6E07               	movwf	_isspace$924,c
  6779  002C9C                     l3348:
  6780  002C9C  C007  F001         	movff	_isspace$924,?_isspace
  6781  002CA0  6A02               	clrf	?_isspace+1,c
  6782  002CA2  0012               	return		;funcret
  6783  002CA4                     __end_of_isspace:
  6784                           	opt callstack 0
  6785                           
  6786 ;; *************** function _isdigit *****************
  6787 ;; Defined at:
  6788 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
  6789 ;; Parameters:    Size  Location     Type
  6790 ;;  c               2    0[COMRAM] int 
  6791 ;; Auto vars:     Size  Location     Type
  6792 ;;		None
  6793 ;; Return value:  Size  Location     Type
  6794 ;;                  2    0[COMRAM] int 
  6795 ;; Registers used:
  6796 ;;		wreg, status,2, status,0
  6797 ;; Tracked objects:
  6798 ;;		On entry : 0/0
  6799 ;;		On exit  : 0/0
  6800 ;;		Unchanged: 0/0
  6801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6802 ;;      Params:         2       0       0       0       0       0       0       0       0
  6803 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6804 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6805 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6806 ;;Total ram usage:        6 bytes
  6807 ;; Hardware stack levels used:    1
  6808 ;; This function calls:
  6809 ;;		Nothing
  6810 ;; This function is called by:
  6811 ;;		_vfpfcnvrt
  6812 ;;		_atoi
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816                           	psect	text28
  6817  002D76                     __ptext28:
  6818                           	opt callstack 0
  6819  002D76                     _isdigit:
  6820                           	opt callstack 27
  6821                           
  6822                           ;incstack = 0
  6823  002D76  0ED0               	movlw	208
  6824  002D78  6E03               	movwf	??_isdigit& (0+255),c
  6825  002D7A  0EFF               	movlw	255
  6826  002D7C  6E04               	movwf	(??_isdigit+1)& (0+255),c
  6827  002D7E  C001  F005         	movff	isdigit@c,??_isdigit+2
  6828  002D82  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  6829  002D86  5003               	movf	??_isdigit,w,c
  6830  002D88  2605               	addwf	??_isdigit+2,f,c
  6831  002D8A  5004               	movf	??_isdigit+1,w,c
  6832  002D8C  2206               	addwfc	??_isdigit+3,f,c
  6833  002D8E  5006               	movf	??_isdigit+3,w,c
  6834  002D90  E106               	bnz	u3210
  6835  002D92  0E0A               	movlw	10
  6836  002D94  5C05               	subwf	??_isdigit+2,w,c
  6837  002D96  B0D8               	btfsc	status,0,c
  6838  002D98  D002               	goto	u3210
  6839  002D9A  0E01               	movlw	1
  6840  002D9C  D001               	goto	u3220
  6841  002D9E                     u3210:
  6842  002D9E  0E00               	movlw	0
  6843  002DA0                     u3220:
  6844  002DA0  6E01               	movwf	?_isdigit,c
  6845  002DA2  6A02               	clrf	?_isdigit+1,c
  6846  002DA4  0012               	return		;funcret
  6847  002DA6                     __end_of_isdigit:
  6848                           	opt callstack 0
  6849                           
  6850 ;; *************** function ___wmul *****************
  6851 ;; Defined at:
  6852 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul16.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;  multiplier      2    0[COMRAM] unsigned int 
  6855 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;  product         2    4[COMRAM] unsigned int 
  6858 ;; Return value:  Size  Location     Type
  6859 ;;                  2    0[COMRAM] unsigned int 
  6860 ;; Registers used:
  6861 ;;		wreg, status,2, status,0, prodl, prodh
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6867 ;;      Params:         4       0       0       0       0       0       0       0       0
  6868 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6869 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6870 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6871 ;;Total ram usage:        6 bytes
  6872 ;; Hardware stack levels used:    1
  6873 ;; This function calls:
  6874 ;;		Nothing
  6875 ;; This function is called by:
  6876 ;;		_atoi
  6877 ;; This function uses a non-reentrant model
  6878 ;;
  6879                           
  6880                           	psect	text29
  6881  002E2A                     __ptext29:
  6882                           	opt callstack 0
  6883  002E2A                     ___wmul:
  6884                           	opt callstack 26
  6885                           
  6886                           ;incstack = 0
  6887  002E2A  5001               	movf	___wmul@multiplier,w,c
  6888  002E2C  0203               	mulwf	___wmul@multiplicand,c
  6889  002E2E  CFF3 F005          	movff	prodl,___wmul@product
  6890  002E32  CFF4 F006          	movff	prodh,___wmul@product+1
  6891  002E36  5001               	movf	___wmul@multiplier,w,c
  6892  002E38  0204               	mulwf	___wmul@multiplicand+1,c
  6893  002E3A  50F3               	movf	prodl,w,c
  6894  002E3C  2606               	addwf	___wmul@product+1,f,c
  6895  002E3E  5002               	movf	___wmul@multiplier+1,w,c
  6896  002E40  0203               	mulwf	___wmul@multiplicand,c
  6897  002E42  50F3               	movf	prodl,w,c
  6898  002E44  2606               	addwf	___wmul@product+1,f,c
  6899  002E46  C005  F001         	movff	___wmul@product,?___wmul
  6900  002E4A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6901  002E4E  0012               	return		;funcret
  6902  002E50                     __end_of___wmul:
  6903                           	opt callstack 0
  6904                           
  6905 ;; *************** function ___xxtofl *****************
  6906 ;; Defined at:
  6907 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/xxtofl.c"
  6908 ;; Parameters:    Size  Location     Type
  6909 ;;  sign            1    wreg     unsigned char 
  6910 ;;  val             4    0[COMRAM] long 
  6911 ;; Auto vars:     Size  Location     Type
  6912 ;;  sign            1    8[COMRAM] unsigned char 
  6913 ;;  arg             4   10[COMRAM] unsigned long 
  6914 ;;  exp             1    9[COMRAM] unsigned char 
  6915 ;; Return value:  Size  Location     Type
  6916 ;;                  4    0[COMRAM] unsigned char 
  6917 ;; Registers used:
  6918 ;;		wreg, status,2, status,0
  6919 ;; Tracked objects:
  6920 ;;		On entry : 0/0
  6921 ;;		On exit  : 0/0
  6922 ;;		Unchanged: 0/0
  6923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6924 ;;      Params:         4       0       0       0       0       0       0       0       0
  6925 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6926 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6927 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6928 ;;Total ram usage:       14 bytes
  6929 ;; Hardware stack levels used:    1
  6930 ;; This function calls:
  6931 ;;		Nothing
  6932 ;; This function is called by:
  6933 ;;		_main
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           
  6937                           	psect	text30
  6938  0022B4                     __ptext30:
  6939                           	opt callstack 0
  6940  0022B4                     ___xxtofl:
  6941                           	opt callstack 30
  6942                           
  6943                           ;incstack = 0
  6944                           ;___xxtofl@sign stored from wreg
  6945  0022B4  6E09               	movwf	___xxtofl@sign,c
  6946  0022B6  5009               	movf	___xxtofl@sign,w,c
  6947  0022B8  A4D8               	btfss	status,2,c
  6948  0022BA  AE04               	btfss	___xxtofl@val+3,7,c
  6949  0022BC  D01A               	goto	l915
  6950  0022BE  C001  F005         	movff	___xxtofl@val,??___xxtofl
  6951  0022C2  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  6952  0022C6  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  6953  0022CA  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  6954  0022CE  1E05               	comf	??___xxtofl,f,c
  6955  0022D0  1E06               	comf	??___xxtofl+1,f,c
  6956  0022D2  1E07               	comf	??___xxtofl+2,f,c
  6957  0022D4  1E08               	comf	??___xxtofl+3,f,c
  6958  0022D6  2A05               	incf	??___xxtofl,f,c
  6959  0022D8  0E00               	movlw	0
  6960  0022DA  2206               	addwfc	??___xxtofl+1,f,c
  6961  0022DC  2207               	addwfc	??___xxtofl+2,f,c
  6962  0022DE  2208               	addwfc	??___xxtofl+3,f,c
  6963  0022E0  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  6964  0022E4  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  6965  0022E8  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  6966  0022EC  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  6967  0022F0  D008               	goto	l3948
  6968  0022F2                     l915:
  6969  0022F2  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  6970  0022F6  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6971  0022FA  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6972  0022FE  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6973  002302                     l3948:
  6974  002302  5001               	movf	___xxtofl@val,w,c
  6975  002304  1002               	iorwf	___xxtofl@val+1,w,c
  6976  002306  1003               	iorwf	___xxtofl@val+2,w,c
  6977  002308  1004               	iorwf	___xxtofl@val+3,w,c
  6978  00230A  A4D8               	btfss	status,2,c
  6979  00230C  D009               	goto	l3954
  6980  00230E  0E00               	movlw	0
  6981  002310  6E01               	movwf	?___xxtofl,c
  6982  002312  0E00               	movlw	0
  6983  002314  6E02               	movwf	?___xxtofl+1,c
  6984  002316  0E00               	movlw	0
  6985  002318  6E03               	movwf	?___xxtofl+2,c
  6986  00231A  0E00               	movlw	0
  6987  00231C  6E04               	movwf	?___xxtofl+3,c
  6988  00231E  0012               	return	
  6989  002320                     l3954:
  6990  002320  0E96               	movlw	150
  6991  002322  6E0A               	movwf	___xxtofl@exp,c
  6992  002324  D006               	goto	l3958
  6993  002326                     l3956:
  6994  002326  2A0A               	incf	___xxtofl@exp,f,c
  6995  002328  90D8               	bcf	status,0,c
  6996  00232A  320E               	rrcf	___xxtofl@arg+3,f,c
  6997  00232C  320D               	rrcf	___xxtofl@arg+2,f,c
  6998  00232E  320C               	rrcf	___xxtofl@arg+1,f,c
  6999  002330  320B               	rrcf	___xxtofl@arg,f,c
  7000  002332                     l3958:
  7001  002332  0E00               	movlw	0
  7002  002334  140B               	andwf	___xxtofl@arg,w,c
  7003  002336  6E05               	movwf	??___xxtofl& (0+255),c
  7004  002338  0E00               	movlw	0
  7005  00233A  140C               	andwf	___xxtofl@arg+1,w,c
  7006  00233C  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  7007  00233E  0E00               	movlw	0
  7008  002340  140D               	andwf	___xxtofl@arg+2,w,c
  7009  002342  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  7010  002344  0EFE               	movlw	254
  7011  002346  140E               	andwf	___xxtofl@arg+3,w,c
  7012  002348  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  7013  00234A  5005               	movf	??___xxtofl,w,c
  7014  00234C  1006               	iorwf	??___xxtofl+1,w,c
  7015  00234E  1007               	iorwf	??___xxtofl+2,w,c
  7016  002350  1008               	iorwf	??___xxtofl+3,w,c
  7017  002352  B4D8               	btfsc	status,2,c
  7018  002354  D00D               	goto	l922
  7019  002356  D7E7               	goto	l3956
  7020  002358                     l3960:
  7021  002358  2A0A               	incf	___xxtofl@exp,f,c
  7022  00235A  0E01               	movlw	1
  7023  00235C  260B               	addwf	___xxtofl@arg,f,c
  7024  00235E  0E00               	movlw	0
  7025  002360  220C               	addwfc	___xxtofl@arg+1,f,c
  7026  002362  220D               	addwfc	___xxtofl@arg+2,f,c
  7027  002364  220E               	addwfc	___xxtofl@arg+3,f,c
  7028  002366  90D8               	bcf	status,0,c
  7029  002368  320E               	rrcf	___xxtofl@arg+3,f,c
  7030  00236A  320D               	rrcf	___xxtofl@arg+2,f,c
  7031  00236C  320C               	rrcf	___xxtofl@arg+1,f,c
  7032  00236E  320B               	rrcf	___xxtofl@arg,f,c
  7033  002370                     l922:
  7034  002370  0E00               	movlw	0
  7035  002372  140B               	andwf	___xxtofl@arg,w,c
  7036  002374  6E05               	movwf	??___xxtofl& (0+255),c
  7037  002376  0E00               	movlw	0
  7038  002378  140C               	andwf	___xxtofl@arg+1,w,c
  7039  00237A  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  7040  00237C  0E00               	movlw	0
  7041  00237E  140D               	andwf	___xxtofl@arg+2,w,c
  7042  002380  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  7043  002382  0EFF               	movlw	255
  7044  002384  140E               	andwf	___xxtofl@arg+3,w,c
  7045  002386  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  7046  002388  5005               	movf	??___xxtofl,w,c
  7047  00238A  1006               	iorwf	??___xxtofl+1,w,c
  7048  00238C  1007               	iorwf	??___xxtofl+2,w,c
  7049  00238E  1008               	iorwf	??___xxtofl+3,w,c
  7050  002390  B4D8               	btfsc	status,2,c
  7051  002392  D007               	goto	l3968
  7052  002394  D7E1               	goto	l3960
  7053  002396                     l3966:
  7054  002396  060A               	decf	___xxtofl@exp,f,c
  7055  002398  90D8               	bcf	status,0,c
  7056  00239A  360B               	rlcf	___xxtofl@arg,f,c
  7057  00239C  360C               	rlcf	___xxtofl@arg+1,f,c
  7058  00239E  360D               	rlcf	___xxtofl@arg+2,f,c
  7059  0023A0  360E               	rlcf	___xxtofl@arg+3,f,c
  7060  0023A2                     l3968:
  7061  0023A2  BE0D               	btfsc	___xxtofl@arg+2,7,c
  7062  0023A4  D003               	goto	u4910
  7063  0023A6  0E02               	movlw	2
  7064  0023A8  600A               	cpfslt	___xxtofl@exp,c
  7065  0023AA  D7F5               	goto	l3966
  7066  0023AC                     u4910:
  7067  0023AC  A00A               	btfss	___xxtofl@exp,0,c
  7068  0023AE  9E0D               	bcf	___xxtofl@arg+2,7,c
  7069  0023B0  90D8               	bcf	status,0,c
  7070  0023B2  320A               	rrcf	___xxtofl@exp,f,c
  7071  0023B4  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7072  0023B8  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  7073  0023BA  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  7074  0023BC  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  7075  0023BE  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7076  0023C2  6A07               	clrf	??___xxtofl+2,c
  7077  0023C4  6A06               	clrf	??___xxtofl+1,c
  7078  0023C6  6A05               	clrf	??___xxtofl,c
  7079  0023C8  5005               	movf	??___xxtofl,w,c
  7080  0023CA  120B               	iorwf	___xxtofl@arg,f,c
  7081  0023CC  5006               	movf	??___xxtofl+1,w,c
  7082  0023CE  120C               	iorwf	___xxtofl@arg+1,f,c
  7083  0023D0  5007               	movf	??___xxtofl+2,w,c
  7084  0023D2  120D               	iorwf	___xxtofl@arg+2,f,c
  7085  0023D4  5008               	movf	??___xxtofl+3,w,c
  7086  0023D6  120E               	iorwf	___xxtofl@arg+3,f,c
  7087  0023D8  5009               	movf	___xxtofl@sign,w,c
  7088  0023DA  A4D8               	btfss	status,2,c
  7089  0023DC  AE04               	btfss	___xxtofl@val+3,7,c
  7090  0023DE  D001               	goto	l3984
  7091  0023E0  8E0E               	bsf	___xxtofl@arg+3,7,c
  7092  0023E2                     l3984:
  7093  0023E2  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7094  0023E6  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7095  0023EA  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7096  0023EE  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7097  0023F2  0012               	return		;funcret
  7098  0023F4                     __end_of___xxtofl:
  7099                           	opt callstack 0
  7100                           
  7101 ;; *************** function _Lcd_Write_String *****************
  7102 ;; Defined at:
  7103 ;;		line 98 in file "./lcd.h"
  7104 ;; Parameters:    Size  Location     Type
  7105 ;;  a               2    4[COMRAM] PTR unsigned char 
  7106 ;;		 -> datos(20), STR_3(12), STR_2(13), STR_1(20), 
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;  i               2    8[COMRAM] int 
  7109 ;; Return value:  Size  Location     Type
  7110 ;;                  1    wreg      void 
  7111 ;; Registers used:
  7112 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7113 ;; Tracked objects:
  7114 ;;		On entry : 0/0
  7115 ;;		On exit  : 0/0
  7116 ;;		Unchanged: 0/0
  7117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7118 ;;      Params:         2       0       0       0       0       0       0       0       0
  7119 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7120 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7121 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7122 ;;Total ram usage:        6 bytes
  7123 ;; Hardware stack levels used:    1
  7124 ;; Hardware stack levels required when called:    2
  7125 ;; This function calls:
  7126 ;;		_Lcd_Write_Char
  7127 ;; This function is called by:
  7128 ;;		_main
  7129 ;; This function uses a non-reentrant model
  7130 ;;
  7131                           
  7132                           	psect	text31
  7133  0029A8                     __ptext31:
  7134                           	opt callstack 0
  7135  0029A8                     _Lcd_Write_String:
  7136                           	opt callstack 28
  7137                           
  7138                           ;./lcd.h: 98: void Lcd_Write_String(char *a);./lcd.h: 99: {;./lcd.h: 100:  int i;;./lcd.
      +                          h: 101:  for(i=0;a[i]!='\0';i++)
  7139                           
  7140                           ;incstack = 0
  7141  0029A8  0E00               	movlw	0
  7142  0029AA  6E0A               	movwf	Lcd_Write_String@i+1,c
  7143  0029AC  0E00               	movlw	0
  7144  0029AE  6E09               	movwf	Lcd_Write_String@i,c
  7145  0029B0  D01A               	goto	l3908
  7146  0029B2                     l3904:
  7147                           
  7148                           ;./lcd.h: 102:     Lcd_Write_Char(a[i]);
  7149  0029B2  5009               	movf	Lcd_Write_String@i,w,c
  7150  0029B4  2405               	addwf	Lcd_Write_String@a,w,c
  7151  0029B6  6E07               	movwf	??_Lcd_Write_String& (0+255),c
  7152  0029B8  500A               	movf	Lcd_Write_String@i+1,w,c
  7153  0029BA  2006               	addwfc	Lcd_Write_String@a+1,w,c
  7154  0029BC  6E08               	movwf	(??_Lcd_Write_String+1)& (0+255),c
  7155  0029BE  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  7156  0029C2  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  7157  0029C6  6AF8               	clrf	tblptru,c
  7158  0029C8  0E07               	movlw	(high __ramtop+-1)
  7159  0029CA  64F7               	cpfsgt	tblptrh,c
  7160  0029CC  D003               	bra	u4807
  7161  0029CE  0008               	tblrd		*
  7162  0029D0  50F5               	movf	tablat,w,c
  7163  0029D2  D005               	bra	u4800
  7164  0029D4                     u4807:
  7165  0029D4  CFF6 FFE1          	movff	tblptrl,fsr1l
  7166  0029D8  CFF7 FFE2          	movff	tblptrh,fsr1h
  7167  0029DC  50E7               	movf	indf1,w,c
  7168  0029DE                     u4800:
  7169  0029DE  EC6E  F016         	call	_Lcd_Write_Char
  7170  0029E2  4A09               	infsnz	Lcd_Write_String@i,f,c
  7171  0029E4  2A0A               	incf	Lcd_Write_String@i+1,f,c
  7172  0029E6                     l3908:
  7173  0029E6  5009               	movf	Lcd_Write_String@i,w,c
  7174  0029E8  2405               	addwf	Lcd_Write_String@a,w,c
  7175  0029EA  6E07               	movwf	??_Lcd_Write_String& (0+255),c
  7176  0029EC  500A               	movf	Lcd_Write_String@i+1,w,c
  7177  0029EE  2006               	addwfc	Lcd_Write_String@a+1,w,c
  7178  0029F0  6E08               	movwf	(??_Lcd_Write_String+1)& (0+255),c
  7179  0029F2  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  7180  0029F6  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  7181  0029FA  6AF8               	clrf	tblptru,c
  7182  0029FC  0E07               	movlw	(high __ramtop+-1)
  7183  0029FE  64F7               	cpfsgt	tblptrh,c
  7184  002A00  D003               	bra	u4817
  7185  002A02  0008               	tblrd		*
  7186  002A04  50F5               	movf	tablat,w,c
  7187  002A06  D005               	bra	u4810
  7188  002A08                     u4817:
  7189  002A08  CFF6 FFE1          	movff	tblptrl,fsr1l
  7190  002A0C  CFF7 FFE2          	movff	tblptrh,fsr1h
  7191  002A10  50E7               	movf	indf1,w,c
  7192  002A12                     u4810:
  7193  002A12  0900               	iorlw	0
  7194  002A14  B4D8               	btfsc	status,2,c
  7195  002A16  0012               	return	
  7196  002A18  D7CC               	goto	l3904
  7197  002A1A                     __end_of_Lcd_Write_String:
  7198                           	opt callstack 0
  7199                           
  7200 ;; *************** function _Lcd_Write_Char *****************
  7201 ;; Defined at:
  7202 ;;		line 82 in file "./lcd.h"
  7203 ;; Parameters:    Size  Location     Type
  7204 ;;  a               1    wreg     unsigned char 
  7205 ;; Auto vars:     Size  Location     Type
  7206 ;;  a               1    3[COMRAM] unsigned char 
  7207 ;;  y               1    2[COMRAM] unsigned char 
  7208 ;;  temp            1    1[COMRAM] unsigned char 
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  1    wreg      void 
  7211 ;; Registers used:
  7212 ;;		wreg, status,2, status,0, cstack
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7218 ;;      Params:         0       0       0       0       0       0       0       0       0
  7219 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7220 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7221 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7222 ;;Total ram usage:        3 bytes
  7223 ;; Hardware stack levels used:    1
  7224 ;; Hardware stack levels required when called:    1
  7225 ;; This function calls:
  7226 ;;		_Lcd_Port
  7227 ;; This function is called by:
  7228 ;;		_Lcd_Write_String
  7229 ;; This function uses a non-reentrant model
  7230 ;;
  7231                           
  7232                           	psect	text32
  7233  002CDC                     __ptext32:
  7234                           	opt callstack 0
  7235  002CDC                     _Lcd_Write_Char:
  7236                           	opt callstack 28
  7237                           
  7238                           ;incstack = 0
  7239                           ;Lcd_Write_Char@a stored from wreg
  7240  002CDC  6E04               	movwf	Lcd_Write_Char@a,c
  7241                           
  7242                           ;./lcd.h: 82: void Lcd_Write_Char(char a);./lcd.h: 83: {;./lcd.h: 84:    char temp,y;;./
      +                          lcd.h: 85:    temp = a&0x0F;
  7243  002CDE  5004               	movf	Lcd_Write_Char@a,w,c
  7244  002CE0  0B0F               	andlw	15
  7245  002CE2  6E02               	movwf	Lcd_Write_Char@temp,c
  7246                           
  7247                           ;./lcd.h: 86:    y = a&0xF0;
  7248  002CE4  5004               	movf	Lcd_Write_Char@a,w,c
  7249  002CE6  0BF0               	andlw	240
  7250  002CE8  6E03               	movwf	Lcd_Write_Char@y,c
  7251                           
  7252                           ;./lcd.h: 87:    PORTDbits.RD2 = 1;
  7253  002CEA  8483               	bsf	3971,2,c	;volatile
  7254                           
  7255                           ;./lcd.h: 88:    Lcd_Port(y>>4);
  7256  002CEC  3803               	swapf	Lcd_Write_Char@y,w,c
  7257  002CEE  0B0F               	andlw	15
  7258  002CF0  ECEA  F016         	call	_Lcd_Port
  7259                           
  7260                           ;./lcd.h: 89:    PORTDbits.RD3 = 1;
  7261  002CF4  8683               	bsf	3971,3,c	;volatile
  7262                           
  7263                           ;./lcd.h: 90:    _delay((unsigned long)((40)*(16000000L/4000000.0)));
  7264  002CF6  0E35               	movlw	53
  7265  002CF8                     u4987:
  7266  002CF8  2EE8               	decfsz	wreg,f,c
  7267  002CFA  D7FE               	bra	u4987
  7268  002CFC  F000               	nop	
  7269                           
  7270                           ;./lcd.h: 91:    PORTDbits.RD3 = 0;
  7271  002CFE  9683               	bcf	3971,3,c	;volatile
  7272                           
  7273                           ;./lcd.h: 92:    Lcd_Port(temp);
  7274  002D00  5002               	movf	Lcd_Write_Char@temp,w,c
  7275  002D02  ECEA  F016         	call	_Lcd_Port
  7276                           
  7277                           ;./lcd.h: 93:    PORTDbits.RD3 = 1;
  7278  002D06  8683               	bsf	3971,3,c	;volatile
  7279                           
  7280                           ;./lcd.h: 94:    _delay((unsigned long)((40)*(16000000L/4000000.0)));
  7281  002D08  0E35               	movlw	53
  7282  002D0A                     u4997:
  7283  002D0A  2EE8               	decfsz	wreg,f,c
  7284  002D0C  D7FE               	bra	u4997
  7285  002D0E  F000               	nop	
  7286                           
  7287                           ;./lcd.h: 95:    PORTDbits.RD3 = 0;
  7288  002D10  9683               	bcf	3971,3,c	;volatile
  7289  002D12  0012               	return		;funcret
  7290  002D14                     __end_of_Lcd_Write_Char:
  7291                           	opt callstack 0
  7292                           
  7293 ;; *************** function _Lcd_Set_Cursor *****************
  7294 ;; Defined at:
  7295 ;;		line 42 in file "./lcd.h"
  7296 ;; Parameters:    Size  Location     Type
  7297 ;;  a               1    wreg     unsigned char 
  7298 ;;  b               1    3[COMRAM] unsigned char 
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;  a               1    4[COMRAM] unsigned char 
  7301 ;;  temp            1    7[COMRAM] unsigned char 
  7302 ;;  y               1    6[COMRAM] unsigned char 
  7303 ;;  z               1    5[COMRAM] unsigned char 
  7304 ;; Return value:  Size  Location     Type
  7305 ;;                  1    wreg      void 
  7306 ;; Registers used:
  7307 ;;		wreg, status,2, status,0, cstack
  7308 ;; Tracked objects:
  7309 ;;		On entry : 0/0
  7310 ;;		On exit  : 0/0
  7311 ;;		Unchanged: 0/0
  7312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7313 ;;      Params:         1       0       0       0       0       0       0       0       0
  7314 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7315 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7316 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7317 ;;Total ram usage:        5 bytes
  7318 ;; Hardware stack levels used:    1
  7319 ;; Hardware stack levels required when called:    2
  7320 ;; This function calls:
  7321 ;;		_Lcd_Cmd
  7322 ;; This function is called by:
  7323 ;;		_main
  7324 ;; This function uses a non-reentrant model
  7325 ;;
  7326                           
  7327                           	psect	text33
  7328  002B84                     __ptext33:
  7329                           	opt callstack 0
  7330  002B84                     _Lcd_Set_Cursor:
  7331                           	opt callstack 28
  7332                           
  7333                           ;incstack = 0
  7334                           ;Lcd_Set_Cursor@a stored from wreg
  7335  002B84  6E05               	movwf	Lcd_Set_Cursor@a,c
  7336                           
  7337                           ;./lcd.h: 42: void Lcd_Set_Cursor(char a, char b);./lcd.h: 43: {;./lcd.h: 44:  char temp
      +                          ,z,y;;./lcd.h: 45:  if(a == 1)
  7338  002B86  0405               	decf	Lcd_Set_Cursor@a,w,c
  7339  002B88  A4D8               	btfss	status,2,c
  7340  002B8A  D010               	goto	l3866
  7341                           
  7342                           ;./lcd.h: 46:  {;./lcd.h: 47:    temp = 0x80 + b - 1;
  7343  002B8C  5004               	movf	Lcd_Set_Cursor@b,w,c
  7344  002B8E  0F7F               	addlw	127
  7345  002B90  6E08               	movwf	Lcd_Set_Cursor@temp,c
  7346                           
  7347                           ;./lcd.h: 48:   z = temp>>4;
  7348  002B92  3808               	swapf	Lcd_Set_Cursor@temp,w,c
  7349  002B94  0B0F               	andlw	15
  7350  002B96  6E06               	movwf	Lcd_Set_Cursor@z,c
  7351                           
  7352                           ;./lcd.h: 49:   y = temp & 0x0F;
  7353  002B98  5008               	movf	Lcd_Set_Cursor@temp,w,c
  7354  002B9A  0B0F               	andlw	15
  7355  002B9C  6E07               	movwf	Lcd_Set_Cursor@y,c
  7356                           
  7357                           ;./lcd.h: 50:   Lcd_Cmd(z);
  7358  002B9E  5006               	movf	Lcd_Set_Cursor@z,w,c
  7359  002BA0  EC4C  F017         	call	_Lcd_Cmd
  7360                           
  7361                           ;./lcd.h: 51:   Lcd_Cmd(y);
  7362  002BA4  5007               	movf	Lcd_Set_Cursor@y,w,c
  7363  002BA6  EC4C  F017         	call	_Lcd_Cmd
  7364                           
  7365                           ;./lcd.h: 52:  }
  7366  002BAA  0012               	return	
  7367  002BAC                     l3866:
  7368  002BAC  0E02               	movlw	2
  7369  002BAE  1805               	xorwf	Lcd_Set_Cursor@a,w,c
  7370  002BB0  A4D8               	btfss	status,2,c
  7371  002BB2  0012               	return	
  7372                           
  7373                           ;./lcd.h: 54:  {;./lcd.h: 55:   temp = 0xC0 + b - 1;
  7374  002BB4  5004               	movf	Lcd_Set_Cursor@b,w,c
  7375  002BB6  0FBF               	addlw	191
  7376  002BB8  6E08               	movwf	Lcd_Set_Cursor@temp,c
  7377                           
  7378                           ;./lcd.h: 56:   z = temp>>4;
  7379  002BBA  3808               	swapf	Lcd_Set_Cursor@temp,w,c
  7380  002BBC  0B0F               	andlw	15
  7381  002BBE  6E06               	movwf	Lcd_Set_Cursor@z,c
  7382                           
  7383                           ;./lcd.h: 57:   y = temp & 0x0F;
  7384  002BC0  5008               	movf	Lcd_Set_Cursor@temp,w,c
  7385  002BC2  0B0F               	andlw	15
  7386  002BC4  6E07               	movwf	Lcd_Set_Cursor@y,c
  7387                           
  7388                           ;./lcd.h: 58:   Lcd_Cmd(z);
  7389  002BC6  5006               	movf	Lcd_Set_Cursor@z,w,c
  7390  002BC8  EC4C  F017         	call	_Lcd_Cmd
  7391                           
  7392                           ;./lcd.h: 59:   Lcd_Cmd(y);
  7393  002BCC  5007               	movf	Lcd_Set_Cursor@y,w,c
  7394  002BCE  EC4C  F017         	call	_Lcd_Cmd
  7395  002BD2  0012               	return		;funcret
  7396  002BD4                     __end_of_Lcd_Set_Cursor:
  7397                           	opt callstack 0
  7398                           
  7399 ;; *************** function _Lcd_Init *****************
  7400 ;; Defined at:
  7401 ;;		line 63 in file "./lcd.h"
  7402 ;; Parameters:    Size  Location     Type
  7403 ;;		None
  7404 ;; Auto vars:     Size  Location     Type
  7405 ;;		None
  7406 ;; Return value:  Size  Location     Type
  7407 ;;                  1    wreg      void 
  7408 ;; Registers used:
  7409 ;;		wreg, status,2, cstack
  7410 ;; Tracked objects:
  7411 ;;		On entry : 0/0
  7412 ;;		On exit  : 0/0
  7413 ;;		Unchanged: 0/0
  7414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7415 ;;      Params:         0       0       0       0       0       0       0       0       0
  7416 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7417 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7418 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7419 ;;Total ram usage:        1 bytes
  7420 ;; Hardware stack levels used:    1
  7421 ;; Hardware stack levels required when called:    2
  7422 ;; This function calls:
  7423 ;;		_Lcd_Cmd
  7424 ;;		_Lcd_Port
  7425 ;; This function is called by:
  7426 ;;		_main
  7427 ;; This function uses a non-reentrant model
  7428 ;;
  7429                           
  7430                           	psect	text34
  7431  002934                     __ptext34:
  7432                           	opt callstack 0
  7433  002934                     _Lcd_Init:
  7434                           	opt callstack 28
  7435                           
  7436                           ;./lcd.h: 65:   Lcd_Port(0x00);
  7437                           
  7438                           ;incstack = 0
  7439  002934  0E00               	movlw	0
  7440  002936  ECEA  F016         	call	_Lcd_Port
  7441                           
  7442                           ;./lcd.h: 66:    _delay((unsigned long)((20)*(16000000L/4000.0)));
  7443  00293A  0E68               	movlw	104
  7444  00293C  6E04               	movwf	??_Lcd_Init& (0+255),c
  7445  00293E  0EE4               	movlw	228
  7446  002940                     u5007:
  7447  002940  2EE8               	decfsz	wreg,f,c
  7448  002942  D7FE               	bra	u5007
  7449  002944  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7450  002946  D7FC               	bra	u5007
  7451  002948  D000               	nop2	
  7452                           
  7453                           ;./lcd.h: 67:   Lcd_Cmd(0x03);
  7454  00294A  0E03               	movlw	3
  7455  00294C  EC4C  F017         	call	_Lcd_Cmd
  7456                           
  7457                           ;./lcd.h: 68:  _delay((unsigned long)((5)*(16000000L/4000.0)));
  7458  002950  0E1A               	movlw	26
  7459  002952  6E04               	movwf	??_Lcd_Init& (0+255),c
  7460  002954  0EF8               	movlw	248
  7461  002956                     u5017:
  7462  002956  2EE8               	decfsz	wreg,f,c
  7463  002958  D7FE               	bra	u5017
  7464  00295A  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7465  00295C  D7FC               	bra	u5017
  7466  00295E  D000               	nop2	
  7467                           
  7468                           ;./lcd.h: 69:   Lcd_Cmd(0x03);
  7469  002960  0E03               	movlw	3
  7470  002962  EC4C  F017         	call	_Lcd_Cmd
  7471                           
  7472                           ;./lcd.h: 70:  _delay((unsigned long)((11)*(16000000L/4000.0)));
  7473  002966  0E3A               	movlw	58
  7474  002968  6E04               	movwf	??_Lcd_Init& (0+255),c
  7475  00296A  0E23               	movlw	35
  7476  00296C                     u5027:
  7477  00296C  2EE8               	decfsz	wreg,f,c
  7478  00296E  D7FE               	bra	u5027
  7479  002970  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  7480  002972  D7FC               	bra	u5027
  7481  002974  F000               	nop	
  7482                           
  7483                           ;./lcd.h: 71:   Lcd_Cmd(0x03);
  7484  002976  0E03               	movlw	3
  7485  002978  EC4C  F017         	call	_Lcd_Cmd
  7486                           
  7487                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  7488  00297C  0E02               	movlw	2
  7489  00297E  EC4C  F017         	call	_Lcd_Cmd
  7490                           
  7491                           ;./lcd.h: 74:   Lcd_Cmd(0x02);
  7492  002982  0E02               	movlw	2
  7493  002984  EC4C  F017         	call	_Lcd_Cmd
  7494                           
  7495                           ;./lcd.h: 75:   Lcd_Cmd(0x08);
  7496  002988  0E08               	movlw	8
  7497  00298A  EC4C  F017         	call	_Lcd_Cmd
  7498                           
  7499                           ;./lcd.h: 76:   Lcd_Cmd(0x00);
  7500  00298E  0E00               	movlw	0
  7501  002990  EC4C  F017         	call	_Lcd_Cmd
  7502                           
  7503                           ;./lcd.h: 77:   Lcd_Cmd(0x0C);
  7504  002994  0E0C               	movlw	12
  7505  002996  EC4C  F017         	call	_Lcd_Cmd
  7506                           
  7507                           ;./lcd.h: 78:   Lcd_Cmd(0x00);
  7508  00299A  0E00               	movlw	0
  7509  00299C  EC4C  F017         	call	_Lcd_Cmd
  7510                           
  7511                           ;./lcd.h: 79:   Lcd_Cmd(0x06);
  7512  0029A0  0E06               	movlw	6
  7513  0029A2  EC4C  F017         	call	_Lcd_Cmd
  7514  0029A6  0012               	return		;funcret
  7515  0029A8                     __end_of_Lcd_Init:
  7516                           	opt callstack 0
  7517                           
  7518 ;; *************** function _Lcd_Clear *****************
  7519 ;; Defined at:
  7520 ;;		line 36 in file "./lcd.h"
  7521 ;; Parameters:    Size  Location     Type
  7522 ;;		None
  7523 ;; Auto vars:     Size  Location     Type
  7524 ;;		None
  7525 ;; Return value:  Size  Location     Type
  7526 ;;                  1    wreg      void 
  7527 ;; Registers used:
  7528 ;;		wreg, status,2, cstack
  7529 ;; Tracked objects:
  7530 ;;		On entry : 0/0
  7531 ;;		On exit  : 0/0
  7532 ;;		Unchanged: 0/0
  7533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7534 ;;      Params:         0       0       0       0       0       0       0       0       0
  7535 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7536 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7537 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7538 ;;Total ram usage:        0 bytes
  7539 ;; Hardware stack levels used:    1
  7540 ;; Hardware stack levels required when called:    2
  7541 ;; This function calls:
  7542 ;;		_Lcd_Cmd
  7543 ;; This function is called by:
  7544 ;;		_main
  7545 ;; This function uses a non-reentrant model
  7546 ;;
  7547                           
  7548                           	psect	text35
  7549  002EB8                     __ptext35:
  7550                           	opt callstack 0
  7551  002EB8                     _Lcd_Clear:
  7552                           	opt callstack 28
  7553                           
  7554                           ;./lcd.h: 38:  Lcd_Cmd(0);
  7555                           
  7556                           ;incstack = 0
  7557  002EB8  0E00               	movlw	0
  7558  002EBA  EC4C  F017         	call	_Lcd_Cmd
  7559                           
  7560                           ;./lcd.h: 39:  Lcd_Cmd(1);
  7561  002EBE  0E01               	movlw	1
  7562  002EC0  EC4C  F017         	call	_Lcd_Cmd
  7563  002EC4  0012               	return		;funcret
  7564  002EC6                     __end_of_Lcd_Clear:
  7565                           	opt callstack 0
  7566                           
  7567 ;; *************** function _Lcd_Cmd *****************
  7568 ;; Defined at:
  7569 ;;		line 27 in file "./lcd.h"
  7570 ;; Parameters:    Size  Location     Type
  7571 ;;  a               1    wreg     unsigned char 
  7572 ;; Auto vars:     Size  Location     Type
  7573 ;;  a               1    2[COMRAM] unsigned char 
  7574 ;; Return value:  Size  Location     Type
  7575 ;;                  1    wreg      void 
  7576 ;; Registers used:
  7577 ;;		wreg, status,2, cstack
  7578 ;; Tracked objects:
  7579 ;;		On entry : 0/0
  7580 ;;		On exit  : 0/0
  7581 ;;		Unchanged: 0/0
  7582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7583 ;;      Params:         0       0       0       0       0       0       0       0       0
  7584 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7585 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7586 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7587 ;;Total ram usage:        2 bytes
  7588 ;; Hardware stack levels used:    1
  7589 ;; Hardware stack levels required when called:    1
  7590 ;; This function calls:
  7591 ;;		_Lcd_Port
  7592 ;; This function is called by:
  7593 ;;		_Lcd_Clear
  7594 ;;		_Lcd_Set_Cursor
  7595 ;;		_Lcd_Init
  7596 ;;		_Lcd_Shift_Right
  7597 ;;		_Lcd_Shift_Left
  7598 ;; This function uses a non-reentrant model
  7599 ;;
  7600                           
  7601                           	psect	text36
  7602  002E98                     __ptext36:
  7603                           	opt callstack 0
  7604  002E98                     _Lcd_Cmd:
  7605                           	opt callstack 28
  7606                           
  7607                           ;incstack = 0
  7608                           ;Lcd_Cmd@a stored from wreg
  7609  002E98  6E03               	movwf	Lcd_Cmd@a,c
  7610                           
  7611                           ;./lcd.h: 27: void Lcd_Cmd(char a);./lcd.h: 28: {;./lcd.h: 29:  PORTDbits.RD2 = 0;
  7612  002E9A  9483               	bcf	3971,2,c	;volatile
  7613                           
  7614                           ;./lcd.h: 30:  Lcd_Port(a);
  7615  002E9C  5003               	movf	Lcd_Cmd@a,w,c
  7616  002E9E  ECEA  F016         	call	_Lcd_Port
  7617                           
  7618                           ;./lcd.h: 31:  PORTDbits.RD3 = 1;
  7619  002EA2  8683               	bsf	3971,3,c	;volatile
  7620                           
  7621                           ;./lcd.h: 32:         _delay((unsigned long)((4)*(16000000L/4000.0)));
  7622  002EA4  0E15               	movlw	21
  7623  002EA6  6E02               	movwf	??_Lcd_Cmd& (0+255),c
  7624  002EA8  0EC6               	movlw	198
  7625  002EAA                     u5037:
  7626  002EAA  2EE8               	decfsz	wreg,f,c
  7627  002EAC  D7FE               	bra	u5037
  7628  002EAE  2E02               	decfsz	??_Lcd_Cmd& (0+255),f,c
  7629  002EB0  D7FC               	bra	u5037
  7630  002EB2  D000               	nop2	
  7631                           
  7632                           ;./lcd.h: 33:         PORTDbits.RD3 = 0;
  7633  002EB4  9683               	bcf	3971,3,c	;volatile
  7634  002EB6  0012               	return		;funcret
  7635  002EB8                     __end_of_Lcd_Cmd:
  7636                           	opt callstack 0
  7637                           
  7638 ;; *************** function _Lcd_Port *****************
  7639 ;; Defined at:
  7640 ;;		line 5 in file "./lcd.h"
  7641 ;; Parameters:    Size  Location     Type
  7642 ;;  a               1    wreg     unsigned char 
  7643 ;; Auto vars:     Size  Location     Type
  7644 ;;  a               1    0[COMRAM] unsigned char 
  7645 ;; Return value:  Size  Location     Type
  7646 ;;                  1    wreg      void 
  7647 ;; Registers used:
  7648 ;;		wreg
  7649 ;; Tracked objects:
  7650 ;;		On entry : 0/0
  7651 ;;		On exit  : 0/0
  7652 ;;		Unchanged: 0/0
  7653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7654 ;;      Params:         0       0       0       0       0       0       0       0       0
  7655 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7656 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7657 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7658 ;;Total ram usage:        1 bytes
  7659 ;; Hardware stack levels used:    1
  7660 ;; This function calls:
  7661 ;;		Nothing
  7662 ;; This function is called by:
  7663 ;;		_Lcd_Cmd
  7664 ;;		_Lcd_Init
  7665 ;;		_Lcd_Write_Char
  7666 ;; This function uses a non-reentrant model
  7667 ;;
  7668                           
  7669                           	psect	text37
  7670  002DD4                     __ptext37:
  7671                           	opt callstack 0
  7672  002DD4                     _Lcd_Port:
  7673                           	opt callstack 28
  7674                           
  7675                           ;incstack = 0
  7676                           ;Lcd_Port@a stored from wreg
  7677  002DD4  6E01               	movwf	Lcd_Port@a,c
  7678                           
  7679                           ;./lcd.h: 5: void Lcd_Port(char a);./lcd.h: 6: {;./lcd.h: 7:  if(a & 1)
  7680  002DD6  A001               	btfss	Lcd_Port@a,0,c
  7681  002DD8  D002               	goto	l17
  7682                           
  7683                           ;./lcd.h: 8:   PORTDbits.RD4 = 1;
  7684  002DDA  8883               	bsf	3971,4,c	;volatile
  7685  002DDC  D001               	goto	l3716
  7686  002DDE                     l17:
  7687                           
  7688                           ;./lcd.h: 10:   PORTDbits.RD4 = 0;
  7689  002DDE  9883               	bcf	3971,4,c	;volatile
  7690  002DE0                     l3716:
  7691                           
  7692                           ;./lcd.h: 12:  if(a & 2)
  7693  002DE0  A201               	btfss	Lcd_Port@a,1,c
  7694  002DE2  D002               	goto	l19
  7695                           
  7696                           ;./lcd.h: 13:   PORTDbits.RD5 = 1;
  7697  002DE4  8A83               	bsf	3971,5,c	;volatile
  7698  002DE6  D001               	goto	l3720
  7699  002DE8                     l19:
  7700                           
  7701                           ;./lcd.h: 15:   PORTDbits.RD5 = 0;
  7702  002DE8  9A83               	bcf	3971,5,c	;volatile
  7703  002DEA                     l3720:
  7704                           
  7705                           ;./lcd.h: 17:  if(a & 4)
  7706  002DEA  A401               	btfss	Lcd_Port@a,2,c
  7707  002DEC  D002               	goto	l21
  7708                           
  7709                           ;./lcd.h: 18:   PORTDbits.RD6 = 1;
  7710  002DEE  8C83               	bsf	3971,6,c	;volatile
  7711  002DF0  D001               	goto	l3724
  7712  002DF2                     l21:
  7713                           
  7714                           ;./lcd.h: 20:   PORTDbits.RD6 = 0;
  7715  002DF2  9C83               	bcf	3971,6,c	;volatile
  7716  002DF4                     l3724:
  7717                           
  7718                           ;./lcd.h: 22:  if(a & 8)
  7719  002DF4  A601               	btfss	Lcd_Port@a,3,c
  7720  002DF6  D002               	goto	l23
  7721                           
  7722                           ;./lcd.h: 23:   PORTDbits.RD7 = 1;
  7723  002DF8  8E83               	bsf	3971,7,c	;volatile
  7724  002DFA  0012               	return	
  7725  002DFC                     l23:
  7726                           
  7727                           ;./lcd.h: 25:   PORTDbits.RD7 = 0;
  7728  002DFC  9E83               	bcf	3971,7,c	;volatile
  7729  002DFE  0012               	return		;funcret
  7730  002E00                     __end_of_Lcd_Port:
  7731                           	opt callstack 0
  7732                           
  7733 ;; *************** function _ADC_Read *****************
  7734 ;; Defined at:
  7735 ;;		line 35 in file "ADC.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;  ch              1    wreg     unsigned char 
  7738 ;; Auto vars:     Size  Location     Type
  7739 ;;  ch              1    2[COMRAM] unsigned char 
  7740 ;; Return value:  Size  Location     Type
  7741 ;;                  2    0[COMRAM] unsigned int 
  7742 ;; Registers used:
  7743 ;;		wreg, status,2, status,0
  7744 ;; Tracked objects:
  7745 ;;		On entry : 0/0
  7746 ;;		On exit  : 0/0
  7747 ;;		Unchanged: 0/0
  7748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7749 ;;      Params:         2       0       0       0       0       0       0       0       0
  7750 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7751 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7752 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7753 ;;Total ram usage:        3 bytes
  7754 ;; Hardware stack levels used:    1
  7755 ;; This function calls:
  7756 ;;		Nothing
  7757 ;; This function is called by:
  7758 ;;		_main
  7759 ;; This function uses a non-reentrant model
  7760 ;;
  7761                           
  7762                           	psect	text38
  7763  002D14                     __ptext38:
  7764                           	opt callstack 0
  7765  002D14                     _ADC_Read:
  7766                           	opt callstack 30
  7767                           
  7768                           ;incstack = 0
  7769                           ;ADC_Read@ch stored from wreg
  7770  002D14  6E03               	movwf	ADC_Read@ch,c
  7771                           
  7772                           ;ADC.c: 36:     if(ch>13){
  7773  002D16  0E0D               	movlw	13
  7774  002D18  6403               	cpfsgt	ADC_Read@ch,c
  7775  002D1A  D005               	goto	l3922
  7776                           
  7777                           ;ADC.c: 37:         return 0;
  7778  002D1C  0E00               	movlw	0
  7779  002D1E  6E02               	movwf	?_ADC_Read+1,c
  7780  002D20  0E00               	movlw	0
  7781  002D22  6E01               	movwf	?_ADC_Read,c
  7782  002D24  0012               	return	
  7783  002D26                     l3922:
  7784                           
  7785                           ;ADC.c: 39:     ADCON0=0;
  7786  002D26  0E00               	movlw	0
  7787  002D28  6EC2               	movwf	4034,c	;volatile
  7788                           
  7789                           ;ADC.c: 40:     ADCON0 = (ch<<2);
  7790  002D2A  4403               	rlncf	ADC_Read@ch,w,c
  7791  002D2C  46E8               	rlncf	wreg,f,c
  7792  002D2E  0BFC               	andlw	252
  7793  002D30  6EC2               	movwf	4034,c	;volatile
  7794                           
  7795                           ;ADC.c: 41:     ADCON0bits.ADON = 1;
  7796  002D32  80C2               	bsf	4034,0,c	;volatile
  7797                           
  7798                           ;ADC.c: 42:     ADCON0bits.GO_DONE = 1;
  7799  002D34  82C2               	bsf	4034,1,c	;volatile
  7800  002D36                     l87:
  7801  002D36  B2C2               	btfsc	4034,1,c	;volatile
  7802  002D38  D7FE               	goto	l87
  7803                           
  7804                           ;ADC.c: 44:     ADCON0bits.ADON = 0;
  7805  002D3A  90C2               	bcf	4034,0,c	;volatile
  7806                           
  7807                           ;ADC.c: 45:     return ADRES;
  7808  002D3C  CFC3 F001          	movff	4035,?_ADC_Read	;volatile
  7809  002D40  CFC4 F002          	movff	4036,?_ADC_Read+1	;volatile
  7810  002D44  0012               	return		;funcret
  7811  002D46                     __end_of_ADC_Read:
  7812                           	opt callstack 0
  7813                           
  7814 ;; *************** function _ADCInit *****************
  7815 ;; Defined at:
  7816 ;;		line 24 in file "ADC.c"
  7817 ;; Parameters:    Size  Location     Type
  7818 ;;		None
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;		None
  7821 ;; Return value:  Size  Location     Type
  7822 ;;                  1    wreg      void 
  7823 ;; Registers used:
  7824 ;;		wreg, status,2
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7830 ;;      Params:         0       0       0       0       0       0       0       0       0
  7831 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7832 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7833 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7834 ;;Total ram usage:        0 bytes
  7835 ;; Hardware stack levels used:    1
  7836 ;; This function calls:
  7837 ;;		Nothing
  7838 ;; This function is called by:
  7839 ;;		_main
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843                           	psect	text39
  7844  002E50                     __ptext39:
  7845                           	opt callstack 0
  7846  002E50                     _ADCInit:
  7847                           	opt callstack 30
  7848                           
  7849                           ;ADC.c: 27:     ADCON1bits.PCFG = 0b1110;
  7850                           
  7851                           ;incstack = 0
  7852  002E50  50C1               	movf	4033,w,c	;volatile
  7853  002E52  0BF0               	andlw	-16
  7854  002E54  090E               	iorlw	14
  7855  002E56  6EC1               	movwf	4033,c	;volatile
  7856                           
  7857                           ;ADC.c: 28:     ADCON1bits.VCFG = 0b00;
  7858  002E58  0ECF               	movlw	-49
  7859  002E5A  16C1               	andwf	4033,f,c	;volatile
  7860                           
  7861                           ;ADC.c: 29:     ADCON0 = 0x00;
  7862  002E5C  0E00               	movlw	0
  7863  002E5E  6EC2               	movwf	4034,c	;volatile
  7864                           
  7865                           ;ADC.c: 30:     ADCON2bits.ACQT = 0b010;
  7866  002E60  50C0               	movf	4032,w,c	;volatile
  7867  002E62  0BC7               	andlw	-57
  7868  002E64  0910               	iorlw	16
  7869  002E66  6EC0               	movwf	4032,c	;volatile
  7870                           
  7871                           ;ADC.c: 31:     ADCON2bits.ADCS = 0b101;
  7872  002E68  50C0               	movf	4032,w,c	;volatile
  7873  002E6A  0BF8               	andlw	-8
  7874  002E6C  0905               	iorlw	5
  7875  002E6E  6EC0               	movwf	4032,c	;volatile
  7876                           
  7877                           ;ADC.c: 32:     ADCON2bits.ADFM = 1;
  7878  002E70  8EC0               	bsf	4032,7,c	;volatile
  7879                           
  7880                           ;ADC.c: 33:     ADCON0bits.ADON = 1;
  7881  002E72  80C2               	bsf	4034,0,c	;volatile
  7882  002E74  0012               	return		;funcret
  7883  002E76                     __end_of_ADCInit:
  7884                           	opt callstack 0
  7885                           
  7886                           	psect	rparam
  7887  0000                     tosu	equ	0xFFF
  7888                           tosh	equ	0xFFE
  7889                           tosl	equ	0xFFD
  7890                           stkptr	equ	0xFFC
  7891                           pclatu	equ	0xFFB
  7892                           pclath	equ	0xFFA
  7893                           pcl	equ	0xFF9
  7894                           tblptru	equ	0xFF8
  7895                           tblptrh	equ	0xFF7
  7896                           tblptrl	equ	0xFF6
  7897                           tablat	equ	0xFF5
  7898                           prodh	equ	0xFF4
  7899                           prodl	equ	0xFF3
  7900                           indf0	equ	0xFEF
  7901                           postinc0	equ	0xFEE
  7902                           postdec0	equ	0xFED
  7903                           preinc0	equ	0xFEC
  7904                           plusw0	equ	0xFEB
  7905                           fsr0h	equ	0xFEA
  7906                           fsr0l	equ	0xFE9
  7907                           wreg	equ	0xFE8
  7908                           indf1	equ	0xFE7
  7909                           postinc1	equ	0xFE6
  7910                           postdec1	equ	0xFE5
  7911                           preinc1	equ	0xFE4
  7912                           plusw1	equ	0xFE3
  7913                           fsr1h	equ	0xFE2
  7914                           fsr1l	equ	0xFE1
  7915                           bsr	equ	0xFE0
  7916                           indf2	equ	0xFDF
  7917                           postinc2	equ	0xFDE
  7918                           postdec2	equ	0xFDD
  7919                           preinc2	equ	0xFDC
  7920                           plusw2	equ	0xFDB
  7921                           fsr2h	equ	0xFDA
  7922                           fsr2l	equ	0xFD9
  7923                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    0
    Data        0
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    107     149
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> datos(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> datos(BANK0[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S937_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> datos(BANK0[20]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> datos(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> datos(BANK0[20]), STR_3(CODE[12]), STR_2(CODE[13]), STR_1(CODE[20]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _atoi->_isspace
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   34542
                                            105 BANK0      2     2      0
                            _ADCInit
                           _ADC_Read
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   27873
                                             87 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   27516
                                             79 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   27144
                                             91 COMRAM     4     4      0
                                             61 BANK0     18    12      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   21845
                                             84 COMRAM     7     0      7
                                              0 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2504
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     638
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1152
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     6     4      2     572
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     684
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             3     1      2      44
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _ADC_Read
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6B      95       5       93.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     144      20        0.0%
DATA                 0      0     144       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jul 31 02:17:41 2019

             ___fldiv@aexp 0040               ___fldiv@bexp 003F               ___fldiv@sign 0038  
                       l21 2DF2                         l23 2DFC                         l17 2DDE  
                       l19 2DE8                         l87 2D36               ___awdiv@sign 0006  
              __CFG_BOR$ON 000000        ___wmul@multiplicand 0003                __CFG_BORV$3 000000  
             __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000  
             __CFG_CP3$OFF 000000                __CFG_WDT$ON 000000                        l130 27BC  
                      l171 0B84                        l525 2488                        l197 0E66  
                      l805 1ADC                        l814 1B42                        l815 1B3E  
                      l922 2370                        l915 22F2                        l844 1D46  
                      l790 19E8                        l855 1DB4                        l856 1DB0  
                      l970 22AA                        l874 15F6                        l891 1894  
                      l883 180E                        l884 180A                        l789 1A0A  
                      l982 1F72               __CFG_CPB$OFF 000000               __CFG_CPD$OFF 000000  
                      _pad 278C            __end_of_ADCInit 2E76               ___awmod@sign 0006  
                      wreg 000FE8               __CFG_FOSC$HS 000000               ___flmul@aexp 0020  
             ___flmul@bexp 0021               ___flmul@sign 001B               ___flmul@temp 0026  
             ___flmul@prod 0022               __CFG_LVP$OFF 000000               ___fltol@exp1 000A  
                     l1062 2C16                       l3010 1DF8                       l3014 1E1C  
                     l3024 1E52                       l3210 292A                       l3202 2912  
                     l3026 1E54                       l3018 1E46                       l3122 17D4  
                     l3050 15B6                       l3116 17B6                       l3206 291C  
                     l3230 2A48                       l3222 2A2E                       l3142 1852  
                     l3046 15A2                       l3302 25AE                       l4014 206E  
                     l3232 2A50                       l3064 15E2                       l3048 15A6  
                     l3400 098A                       l3242 2A72                       l3226 2A3A  
                     l3146 1870                       l3074 1614                       l3066 15E6  
                     l2610 18F4                       l3330 261C                       l3322 2608  
                     l3410 09F6                       l3500 0D52                       l3190 28EA  
                     l3246 2A80                       l3238 2A68                       l3262 28AC  
                     l3254 285A                       l3270 2428                       l3158 18B2  
                     l2614 18F8                       l3318 25F8                       l3430 0ADC  
                     l3192 28F2                       l3184 28D4                       l2712 1A50  
                     l2704 1A2E                       l3336 2638                       l3328 2610  
                     l3600 109A                       l3424 0A54                       l3178 28C4  
                     l3258 288E                       l3274 245C                       l2714 1A54  
                     l2722 1A66                       l2634 193C                       l2810 27C6  
                     l3602 10A4                       l3522 0E5E                       l3514 0E06  
                     l3450 0B8E                       l3434 0B18                       l3418 0A10  
                     l3362 0892                       l3348 2C9C                       l3284 24C0  
                     l3292 2DC2                       l2740 1B00                       l2732 1ACC  
                     l2804 27A6                       l3612 10FA                       l3524 0E80  
                     l3508 0DC8                       l3428 0A8E                       l3700 2682  
                     l3278 2472                       l2750 1B16                       l2646 1960  
                     l2638 1940                       l2830 253C                       l2582 2CC4  
                     l2814 27DE                       l3622 1126                       l3446 0B6C  
                     l3374 08C0                       l3382 08D6                       l3720 2DEA  
                     l2912 1C04                       l2840 2586                       l2568 2704  
                     l2808 27B4                       l3536 0F02                       l3464 0BDC  
                     l3456 0B94                       l3392 0942                       l3800 151C  
                     l2690 19FA                       l2834 2546                       l2578 2CAE  
                     l2586 2E0A                       l2818 280C                       l3482 0C22  
                     l3466 0BE0                       l3394 095A                       l3810 1542  
                     l3724 2DF4                       l3716 2DE0                       l3652 2186  
                     l2940 1C78                       l2932 1C44                       l2908 1C00  
                     l2756 1B20                       l2676 199C                       l2588 2E0E  
                     l3548 0F30                       l3556 0F50                       l3564 0F74  
                     l3572 100C                       l3492 0C5C                       l3476 0BFE  
                     l3396 0964                       l3804 1528                       l3670 21E8  
                     l3662 21D0                       l3654 218A                       l2790 1BB8  
                     l2846 2B42                       l3638 1186                       l3486 0C32  
                     l3750 12B0                       ?_pad 0011                       l3904 29B2  
                     l3672 21EE                       l2928 1C40                       l2784 1BAE  
                     l2776 1B88                       l2688 19F6                       l2864 1ED4  
                     l3584 104E                       l3922 2D26                       l3674 2216  
                     l2954 1CA6                       l2946 1C8E                       l2882 2000  
                     l2874 1F94                       l3746 1284                       l3908 29E6  
                     l3668 21E0                       l2972 1D1E                       l2964 1CF6  
                     l2788 1BB6                       l3748 12A2                       l3852 2A9E  
                     l3678 224A                       l2990 1D7A                       l2878 1FD2  
                     l3774 13E6                       l3766 138A                       l3854 2AC4  
                     l3960 2358                       l2984 1D5C                       l3866 2BAC  
                     l3954 2320                       l2978 1D44                       l3698 2674  
                     l3794 14E0                       l3778 1410                       l3956 2326  
                     l3948 2302                       l3966 2396                       l3958 2332  
                     l3984 23E2                       l3968 23A2                       STR_1 0801  
                     STR_2 0815                       STR_3 0822                       STR_4 082E  
                     STR_5 0833                       STR_6 083B                       STR_9 0837  
                     u3110 1EA2                       u3040 257E                       u3120 1EC2  
                     u4000 091A                       u3210 2D9E                       u3050 2580  
                     u4010 091C                       u3035 2560                       u3115 1E98  
                     u3220 2DA0                       u3060 2B7A                       u2510 2744  
                     u3160 1F52                       u3080 2BFC                       u4120 0B7A  
                     u4040 09CE                       u3145 1EEC                       u3146 1EF2  
                     u3090 2BFE                       u4050 09D0                       u3147 1F00  
                     u3067 2B70                       u2700 1A12                       u3180 1FB2  
                     u2540 2D6E                       u3165 1F48                       u3430 1E06  
                     u2550 2D70                       u4150 0BAC                       u5007 2940  
                     u3440 1E2A                       u5017 2956                       u3185 1FA8  
                     u3530 1602                       u2650 19BE                       u2490 26FC  
                     u4090 0B40                       u5027 296C                       u4500 227A  
                     u3620 1860                       u3540 1778                       u2660 19CE  
                     u4420 1110                       u5037 2EAA                       u4510 227C  
                     u3390 1DAA                       u3630 187E                       u2910 1B94  
                     u2830 1B24                       u2670 19D0                       u4190 0BFA  
                     u4440 1170                       u4360 1030                       u3545 176E  
                     u2850 1B38                       u4450 1172                       u3740 2A54  
                     u3580 1804                       u3910 2622                       u4800 29DE  
                     u4480 21CC                       u3680 28F6                       u4810 2A12  
                     u4730 1492                       u3940 2C98                       u3860 259C  
                     u4580 26C8                       u4740 1494                       u4660 12E8  
                     u4910 23AC                       u3790 28A8                       u3870 25CC  
                     u2990 2502                       u4670 12EA                       u4807 29D4  
                     u4680 12F8                       u4817 2A08                       u3970 08B0  
                     u3875 25C2                       u2995 24F8                       u4957 205C  
                     u4967 2090                       u4977 2164                       u4987 2CF8  
                     u4997 2D0A          ?_Lcd_Write_String 0005                       _dbuf 0100  
                     _atoi 2174                       _main 2012                       _prec 00DB  
                     _nout 00D7                       pad@i 0018                       pad@p 0015  
                     fsr1h 000FE2                       fsr2h 000FDA                       indf1 000FE7  
                     indf2 000FDF                       fsr1l 000FE1                       pad@w 001A  
                     fsr2l 000FD9           __end_of_ADC_Read 2D46              ___fpclassifyf 24C4  
                     prodh 000FF4                       prodl 000FF3                       start 0000  
       ??_Lcd_Write_String 0007              __CFG_IESO$OFF 000000            ___fldiv@new_exp 0039  
          __end_of_Lcd_Cmd 2EB8               _tolower$1009 000D              __CFG_MCLRE$ON 000000  
             ___param_bank 000000                      ??_pad 0017              __CFG_PLLDIV$1 000000  
           __CFG_CCP2MX$ON 000000              ___fltol@sign1 0009                      ?_atoi 0008  
          __end_of___fladd 1BD4                      ?_main 0001            __end_of___fldiv 1E5C  
          __end_of___awdiv 2934            __end_of___flneg 2DD4                      _ADRES 000FC3  
                    STR_10 083F                      STR_13 0843                      STR_15 0843  
          __end_of___awmod 2A8A            __end_of___flmul 18C8            __end_of___flsub 2C66  
          __end_of___fltol 264A            ___awdiv@divisor 0003            ___awdiv@counter 0005  
             vfpfcnvrt@fmt 009F              __CFG_USBDIV$1 000000    __size_of_Lcd_Set_Cursor 0050  
                    _TRISA 000F92                      _TRISD 000F95              __CFG_PWRT$OFF 000000  
            __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000  
            __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000  
           __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000             __CFG_EBTR3$OFF 000000  
                    _Value 00DF              __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000  
            __CFG_WRTD$OFF 000000             __CFG_EBTRB$OFF 000000                      _datos 00E1  
                    _flags 00DD                      _fputc 26EC                      _fputs 2CA4  
          __end_of_isdigit 2DA6                      atoi@n 0015                      pad@fp 0011  
                    atoi@s 0008                      _width 00D9                      _putch 2EC6  
          __end_of_isspace 2CA4            __end_of_isupper 2D76                      tablat 000FF5  
                    status 000FD8            __end_of_sprintf 2B32             ?___fpclassifyf 0001  
          __end_of_tolower 2C20            __end_of_strncmp 26EC             __CFG_ICPRT$OFF 000000  
           __CFG_PBADEN$ON 000000           __end_of_Lcd_Init 29A8           __end_of_Lcd_Port 2E00  
          __initialization 2E76               __end_of_atoi 22B4               __end_of_main 2174  
                ??_ADCInit 0001                     ??_atoi 000A                     ??_main 00C9  
       __size_of_Lcd_Clear 000E              __activetblptr 000002                     _ADCON0 000FC2  
                   ?_fputc 0001                     ?_fputs 000A           ___awdiv@dividend 0001  
                   ?_putch 0001                  ??_Lcd_Cmd 0002    __size_of_Lcd_Write_Char 0038  
         __end_of___xxtofl 23F4             __CFG_XINST$OFF 000000               vfprintf@cfmt 00B5  
                   ___flge 23F4                     ___fleq 2826                  ??___fladd 0009  
                   ___wmul 2E2A                  ??___fldiv 0030                  ??___awdiv 0005  
                ??___flneg 0005             __CFG_STVREN$ON 000000                  ??___awmod 0005  
                ??___flmul 0017                  ??___flsub 0030                  ??___fltol 0005  
                   _efgtoa 0848                     _floorf 1E5C                     clear_0 2E7C  
                   clear_1 2E88           ___awdiv@quotient 0007            ___awmod@divisor 0003  
          ___awmod@counter 0005                     pad@buf 0013                     _strcpy 2B32  
                   _strlen 2E00                     fputc@c 0001                     fputs@c 000E  
                   fputs@i 000F                     fputs@s 000A                  ??_isdigit 0003  
          ___fpclassifyf@e 0009            ___fpclassifyf@u 000B                  ?_ADC_Read 0001  
          ___fpclassifyf@x 0001               __mediumconst 0000                  ??_isspace 0003  
                   tblptrh 000FF7                  ??_isupper 0003                     tblptrl 000FF6  
                   tblptru 000FF8                     putch@c 0001           __end_of_vfprintf 2AE0  
                ??_sprintf 0060                  ??_tolower 0009                  ??_strncmp 0007  
          Lcd_Set_Cursor@a 0005            Lcd_Set_Cursor@b 0004            Lcd_Set_Cursor@y 0007  
          Lcd_Set_Cursor@z 0006                 ___flge@ff1 0028                 ___flge@ff2 002C  
          ??___fpclassifyf 0005               ___xxtofl@arg 000B               ___xxtofl@exp 000A  
             ___xxtofl@val 0001                 ___fleq@ff1 0001                 ___fleq@ff2 0005  
               __accesstop 0060    __end_of__initialization 2E8E                 ___flneg@f1 0001  
        __end_of_Lcd_Clear 2EC6              ___rparam_used 000001                 ___fltol@f1 0001  
           __pcstackCOMRAM 0001              __end_of_fputc 278C              __end_of_fputs 2CDC  
            __end_of_putch 2EC8             _Lcd_Set_Cursor 2B84                 ??_ADC_Read 0003  
                ?_Lcd_Init 0001                  ?_Lcd_Port 0001                    ??_fputc 0005  
                  ??_fputs 000E                    ??_putch 0001                 __pbssBANK0 00CB  
               __pbssBANK1 0100                 _efgtoa$402 006F                 _efgtoa$403 0071  
               _efgtoa$404 0073                 _efgtoa$392 0069                 _efgtoa$393 006B  
               _efgtoa$398 006D                    ?___flge 0028                    ?___fleq 0001  
                  ?___wmul 0001                    ?_efgtoa 0055                    ?_floorf 0041  
                  _ADCInit 2E50  __size_of_Lcd_Write_String 0072     __end_of_Lcd_Set_Cursor 2BD4  
               ADC_Read@ch 0003                    ?_strcpy 0001                    ?_strlen 0001  
                ?___xxtofl 0001         __size_of_vfpfcnvrt 03B2                 ??_Lcd_Init 0004  
               ??_Lcd_Port 0001            __CFG_VREGEN$OFF 000000             _Lcd_Write_Char 2CDC  
                  _Lcd_Cmd 2E98                    __Hparam 0000                    __Lparam 0000  
          __size_of___flge 00D0            __size_of___fleq 008A                    ___fladd 18C8  
                  ___fldiv 1BD4                    ___awdiv 28B0                    ___flneg 2DA6  
                  ___awmod 2A1A                    ___flmul 1576                    ___flsub 2C20  
                  ___fltol 2590            __size_of___wmul 0026                  ?_vfprintf 00AF  
             __psmallconst 0800            __size_of_efgtoa 097C            __size_of_floorf 01B6  
                  __pcinit 2E76                    __ramtop 0800            ?_Lcd_Set_Cursor 0004  
                  __ptext0 2012                    __ptext1 2AE0                    __ptext2 2A8A  
                  __ptext3 11C4                    __ptext4 264A                    __ptext5 0848  
                  __ptext6 2BD4                    __ptext7 2D46                    __ptext8 2B32  
                  __ptext9 278C            __size_of_strcpy 0052            __size_of_strlen 002A  
             __size_of_pad 009A                    _isdigit 2D76                 ??___xxtofl 0005  
         ___awmod@dividend 0001                    _isspace 2C66                    _isupper 2D46  
                  efgtoa@c 005B                    efgtoa@d 007D                    efgtoa@e 0095  
                  efgtoa@f 0057                    efgtoa@g 0091                    efgtoa@h 0087  
                  efgtoa@i 008F                    efgtoa@l 008B                    efgtoa@m 0079  
                  efgtoa@n 0097                    efgtoa@p 0081                    efgtoa@t 0075  
                  efgtoa@u 0099                    efgtoa@w 0084                    atoi@neg 000E  
                  _sprintf 2AE0                    _tolower 2BD4                    _voltage 00D3  
   __end_of_Lcd_Write_Char 2D14                    _strncmp 264A       end_of_initialization 2E8E  
                  floorf@e 004F                    floorf@m 004B                    floorf@u 0051  
                  floorf@x 0041                    fputc@fp 0003              __Lmediumconst 0000  
                  fputs@fp 000C          __end_of_vfpfcnvrt 1576                 efgtoa@mode 0086  
               efgtoa@sign 007F                    postdec2 000FDD                    postinc0 000FEE  
                  postinc1 000FE6                    postinc2 000FDE                  Lcd_Port@a 0001  
               ??_vfprintf 0060                    strcpy@d 0009                    strlen@a 0003  
                  strcpy@s 0007                    strlen@s 0001                  _PORTDbits 000F83  
              ___fladd@grs 0010              ___xxtofl@sign 0009                ___fldiv@grs 003B  
              ___fldiv@rem 0034          __size_of_ADC_Read 0032            ?_Lcd_Write_Char 0001  
        Lcd_Write_String@a 0005          Lcd_Write_String@i 0009                ___flmul@grs 001C  
                _Lcd_Clear 2EB8             __end_of___flge 24C4             __end_of___fleq 28B0  
              vfpfcnvrt@ap 00A1                vfpfcnvrt@ct 00AB                vfpfcnvrt@fp 009D  
           __end_of___wmul 2E50           _Lcd_Write_String 29A8             __end_of_efgtoa 11C4  
           __end_of_floorf 2012                 floorf@F524 00CB             __end_of_strcpy 2B84  
           __end_of_strlen 2E2A        start_initialization 2E76                __end_of_pad 2826  
        __size_of_Lcd_Init 0074          __size_of_Lcd_Port 002C      __end_of___fpclassifyf 2590  
              vfprintf@fmt 00B1                 ?_Lcd_Clear 0001                   ??___flge 0030  
                 ??___fleq 0009                   ??___wmul 0005                   ??_efgtoa 0060  
                 ??_floorf 0045           __CFG_LPT1OSC$OFF 000000            Lcd_Write_Char@a 0004  
          Lcd_Write_Char@y 0003                   ?_ADCInit 0001                   ??_strcpy 0005  
                 ??_strlen 0003                  ___fladd@a 0005                  ___fladd@b 0001  
                ___fldiv@a 002C                  ___fldiv@b 0028                  ___flmul@a 0013  
                ___flmul@b 000F                  ___flsub@a 002C                  ___flsub@b 0028  
            __pcstackBANK0 0060          __size_of___xxtofl 0140                   ?_Lcd_Cmd 0001  
         ??_Lcd_Set_Cursor 0005                   ?___fladd 0001                   ?___fldiv 0028  
                 ?___awdiv 0001                   ?___flneg 0001                   ?___awmod 0001  
                 ?___flmul 000F                   ?___flsub 0028                   ?___fltol 0001  
        __size_of_vfprintf 0056                __smallconst 0800                   ?_isdigit 0001  
                 _ADC_Read 2D14                   ?_isspace 0001                   ?_isupper 0001  
                 ?_sprintf 00B7                   ?_tolower 0007             __size_of_fputc 00A0  
           __size_of_fputs 0038                   ?_strncmp 0001             __size_of_putch 0002  
           ___wmul@product 0005                   Lcd_Cmd@a 0003                ??_Lcd_Clear 0004  
         __CFG_WDTPS$32768 000000                  _vfpfcnvrt 11C4           __size_of_ADCInit 0026  
               _ADCON0bits 000FC2                 _ADCON1bits 000FC1                 _ADCON2bits 000FC0  
        ___wmul@multiplier 0001           ??_Lcd_Write_Char 0002                   _Lcd_Init 2934  
                 _Lcd_Port 2DD4                 vfpfcnvrt@c 00AE                 vfpfcnvrt@f 00A7  
 __end_of_Lcd_Write_String 2A1A           __size_of_Lcd_Cmd 0020                   __Hrparam 0000  
               vfprintf@ap 00B3                   __Lrparam 0000                 vfprintf@fp 00AF  
         __size_of___fladd 030C           __size_of___fldiv 0288           __size_of___awdiv 0084  
         __size_of___flneg 002E           __size_of___awmod 0070           __size_of___flmul 0352  
         __size_of___flsub 0046           __size_of___fltol 00BA                 ?_vfpfcnvrt 009D  
       ___fpclassifyf@F463 00CF                 sprintf@fmt 00B9                   ___xxtofl 22B4  
                 _atoi$893 0010                   _atoi$894 0014                   _atoi$895 0012  
         __size_of_isdigit 0030           __size_of_isspace 003E                   __ptext10 2E00  
                 __ptext11 2CA4                   __ptext20 1576                   __ptext12 26EC  
                 __ptext21 23F4                   __ptext13 2EC6                   __ptext30 22B4  
                 __ptext22 2826                   __ptext14 1E5C                   __ptext31 29A8  
                 __ptext23 1BD4                   __ptext15 24C4                   __ptext32 2CDC  
                 __ptext24 2A1A                   __ptext16 2590                   __ptext33 2B84  
                 __ptext25 28B0                   __ptext17 2C20                   __ptext34 2934  
                 __ptext26 2174                   __ptext18 18C8                   __ptext35 2EB8  
                 __ptext27 2C66                   __ptext19 2DA6                   __ptext36 2E98  
                 __ptext28 2D76                   __ptext37 2DD4                   __ptext29 2E2A  
                 __ptext38 2D14                   __ptext39 2E50           __size_of_isupper 0030  
         __size_of_sprintf 0052           __size_of_tolower 004C                 strcpy@dest 0001  
         __size_of_strncmp 00A2              __size_of_atoi 0140              __size_of_main 0162  
                 efgtoa@fp 0055                   efgtoa@ne 007B                   efgtoa@pp 0077  
                 efgtoa@ou 0065                   _vfprintf 2A8A                _isspace$924 0007  
    __CFG_CPUDIV$OSC1_PLL2 000000                   isdigit@c 0001         Lcd_Write_Char@temp 0002  
                sprintf@ap 00C1                   isspace@c 0001                  strcpy@src 0003  
                 isupper@c 0001                  strncmp@_l 0001                  strncmp@_r 0003  
              efgtoa@nmode 0083                ??_vfpfcnvrt 005C              _vfpfcnvrt$422 00A5  
            _vfpfcnvrt$418 00A3         Lcd_Set_Cursor@temp 0008                   sprintf@f 00C3  
                 tolower@c 0007                   sprintf@s 00B7     __size_of___fpclassifyf 00CC  
                 strncmp@l 0008                   strncmp@n 0005                   strncmp@r 000A  
            ___fladd@signs 000D               ___fladd@aexp 000E               ___fladd@bexp 000F  
