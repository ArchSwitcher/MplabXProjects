

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Aug 10 01:49:33 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           ; Version 2.05
    44                           ; Generated 20/12/2018 GMT
    45                           ; 
    46                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F4550 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     _TMR0	set	4054
    78  0000                     _T0CONbits	set	4053
    79  0000                     _INTCON2bits	set	4081
    80  0000                     _LATB	set	3978
    81  0000                     _TRISB	set	3987
    82  0000                     _ADCON1bits	set	4033
    83  0000                     _INTCON3bits	set	4080
    84  0000                     _INTCONbits	set	4082
    85  0000                     _TRISD	set	3989
    86  0000                     _LATA	set	3977
    87  0000                     _TRISA	set	3986
    88  0000                     _PORTDbits	set	3971
    89  0000                     _INT1IF	set	32640
    90  0000                     _INT1E	set	32643
    91  0000                     _TMR0IF	set	32658
    92  0000                     _TMR0IE	set	32661
    93                           
    94                           	psect	smallconst
    95  000800                     __psmallconst:
    96                           	opt callstack 0
    97  000800  00                 	db	0
    98  000801                     STR_5:
    99  000801  52                 	db	82	;'R'
   100  000802  45                 	db	69	;'E'
   101  000803  53                 	db	83	;'S'
   102  000804  55                 	db	85	;'U'
   103  000805  4C                 	db	76	;'L'
   104  000806  54                 	db	84	;'T'
   105  000807  41                 	db	65	;'A'
   106  000808  44                 	db	68	;'D'
   107  000809  4F                 	db	79	;'O'
   108  00080A  53                 	db	83	;'S'
   109  00080B  21                 	db	33
   110  00080C  21                 	db	33
   111  00080D  21                 	db	33
   112  00080E  21                 	db	33
   113  00080F  21                 	db	33
   114  000810  00                 	db	0
   115  000811                     STR_3:
   116  000811  50                 	db	80	;'P'
   117  000812  72                 	db	114	;'r'
   118  000813  65                 	db	101	;'e'
   119  000814  70                 	db	112	;'p'
   120  000815  61                 	db	97	;'a'
   121  000816  72                 	db	114	;'r'
   122  000817  61                 	db	97	;'a'
   123  000818  64                 	db	100	;'d'
   124  000819  6F                 	db	111	;'o'
   125  00081A  73                 	db	115	;'s'
   126  00081B  21                 	db	33
   127  00081C  21                 	db	33
   128  00081D  21                 	db	33
   129  00081E  21                 	db	33
   130  00081F  21                 	db	33
   131  000820  00                 	db	0
   132  000821                     STR_2:
   133  000821  50                 	db	80	;'P'
   134  000822  4F                 	db	79	;'O'
   135  000823  52                 	db	82	;'R'
   136  000824  20                 	db	32
   137  000825  35                 	db	53	;'5'
   138  000826  20                 	db	32
   139  000827  53                 	db	83	;'S'
   140  000828  65                 	db	101	;'e'
   141  000829  67                 	db	103	;'g'
   142  00082A  75                 	db	117	;'u'
   143  00082B  6E                 	db	110	;'n'
   144  00082C  64                 	db	100	;'d'
   145  00082D  6F                 	db	111	;'o'
   146  00082E  73                 	db	115	;'s'
   147  00082F  00                 	db	0
   148  000830                     STR_1:
   149  000830  4C                 	db	76	;'L'
   150  000831  43                 	db	67	;'C'
   151  000832  44                 	db	68	;'D'
   152  000833  20                 	db	32
   153  000834  43                 	db	67	;'C'
   154  000835  4F                 	db	79	;'O'
   155  000836  4E                 	db	78	;'N'
   156  000837  54                 	db	84	;'T'
   157  000838  41                 	db	65	;'A'
   158  000839  44                 	db	68	;'D'
   159  00083A  4F                 	db	79	;'O'
   160  00083B  52                 	db	82	;'R'
   161  00083C  00                 	db	0
   162  00083D                     STR_4:
   163  00083D  43                 	db	67	;'C'
   164  00083E  4F                 	db	79	;'O'
   165  00083F  4E                 	db	78	;'N'
   166  000840  54                 	db	84	;'T'
   167  000841  41                 	db	65	;'A'
   168  000842  4E                 	db	78	;'N'
   169  000843  44                 	db	68	;'D'
   170  000844  4F                 	db	79	;'O'
   171  000845  00                 	db	0
   172                           
   173                           ; #config settings
   174  000846  00                 	db	0	; dummy byte at the end
   175  0000                     
   176                           	psect	cinit
   177  00107E                     __pcinit:
   178                           	opt callstack 0
   179  00107E                     start_initialization:
   180                           	opt callstack 0
   181  00107E                     __initialization:
   182                           	opt callstack 0
   183                           
   184                           ; Clear objects allocated to BANK0 (7 bytes)
   185  00107E  EE00  F06E         	lfsr	0,__pbssBANK0
   186  001082  0E07               	movlw	7
   187  001084                     clear_0:
   188  001084  6AEE               	clrf	postinc0,c
   189  001086  06E8               	decf	wreg,f,c
   190  001088  E1FD               	bnz	clear_0
   191                           
   192                           ; Clear objects allocated to COMRAM (6 bytes)
   193  00108A  6A3A               	clrf	(__pbssCOMRAM+5)& (0+255),c
   194  00108C  6A39               	clrf	(__pbssCOMRAM+4)& (0+255),c
   195  00108E  6A38               	clrf	(__pbssCOMRAM+3)& (0+255),c
   196  001090  6A37               	clrf	(__pbssCOMRAM+2)& (0+255),c
   197  001092  6A36               	clrf	(__pbssCOMRAM+1)& (0+255),c
   198  001094  6A35               	clrf	__pbssCOMRAM& (0+255),c
   199  001096                     end_of_initialization:
   200                           	opt callstack 0
   201  001096                     __end_of__initialization:
   202                           	opt callstack 0
   203  001096  903B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   204  001098  923B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   205  00109A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   206  00109C  6EF8               	movwf	tblptru,c
   207  00109E  0100               	movlb	0
   208  0010A0  EF24  F004         	goto	_main	;jump to C main() function
   209                           
   210                           	psect	bssCOMRAM
   211  000035                     __pbssCOMRAM:
   212                           	opt callstack 0
   213  000035                     _delay:
   214                           	opt callstack 0
   215  000035                     	ds	2
   216  000037                     _b:
   217                           	opt callstack 0
   218  000037                     	ds	2
   219  000039                     _Counter:
   220                           	opt callstack 0
   221  000039                     	ds	2
   222                           
   223                           	psect	bssBANK0
   224  00006E                     __pbssBANK0:
   225                           	opt callstack 0
   226  00006E                     _flagEntry:
   227                           	opt callstack 0
   228  00006E                     	ds	2
   229  000070                     _i:
   230                           	opt callstack 0
   231  000070                     	ds	2
   232  000072                     _Show:
   233                           	opt callstack 0
   234  000072                     	ds	3
   235                           
   236                           	psect	cstackBANK0
   237  000060                     __pcstackBANK0:
   238                           	opt callstack 0
   239  000060                     itoa@buf:
   240                           	opt callstack 0
   241                           
   242                           ; 2 bytes @ 0x0
   243  000060                     	ds	2
   244  000062                     itoa@val:
   245                           	opt callstack 0
   246                           
   247                           ; 2 bytes @ 0x2
   248  000062                     	ds	2
   249  000064                     itoa@base:
   250                           	opt callstack 0
   251                           
   252                           ; 2 bytes @ 0x4
   253  000064                     	ds	4
   254  000068                     transform@value:
   255                           	opt callstack 0
   256                           
   257                           ; 2 bytes @ 0x8
   258  000068                     	ds	2
   259  00006A                     ??_transform:
   260                           
   261                           ; 1 bytes @ 0xA
   262  00006A                     	ds	2
   263  00006C                     ??_main:
   264                           
   265                           ; 1 bytes @ 0xC
   266  00006C                     	ds	2
   267                           
   268                           	psect	cstackCOMRAM
   269  000001                     __pcstackCOMRAM:
   270                           	opt callstack 0
   271  000001                     ?i2___lwdiv:
   272                           	opt callstack 0
   273  000001                     ?i2___lwmod:
   274                           	opt callstack 0
   275  000001                     i2Lcd_Port@a:
   276                           	opt callstack 0
   277  000001                     i2___lwdiv@dividend:
   278                           	opt callstack 0
   279  000001                     i2___lwmod@dividend:
   280                           	opt callstack 0
   281                           
   282                           ; 2 bytes @ 0x0
   283  000001                     	ds	1
   284  000002                     ??i2_Lcd_Cmd:
   285  000002                     i2Lcd_Write_Char@temp:
   286                           	opt callstack 0
   287                           
   288                           ; 1 bytes @ 0x1
   289  000002                     	ds	1
   290  000003                     i2Lcd_Cmd@a:
   291                           	opt callstack 0
   292  000003                     i2Lcd_Write_Char@y:
   293                           	opt callstack 0
   294  000003                     i2___lwdiv@divisor:
   295                           	opt callstack 0
   296  000003                     i2___lwmod@divisor:
   297                           	opt callstack 0
   298                           
   299                           ; 2 bytes @ 0x2
   300  000003                     	ds	1
   301  000004                     i2Lcd_Set_Cursor@b:
   302                           	opt callstack 0
   303  000004                     i2Lcd_Write_Char@a:
   304                           	opt callstack 0
   305                           
   306                           ; 1 bytes @ 0x3
   307  000004                     	ds	1
   308  000005                     i2Lcd_Set_Cursor@a:
   309                           	opt callstack 0
   310  000005                     i2___lwmod@counter:
   311                           	opt callstack 0
   312  000005                     i2Lcd_Write_String@a:
   313                           	opt callstack 0
   314  000005                     i2___lwdiv@quotient:
   315                           	opt callstack 0
   316                           
   317                           ; 2 bytes @ 0x4
   318  000005                     	ds	1
   319  000006                     i2Lcd_Set_Cursor@z:
   320                           	opt callstack 0
   321                           
   322                           ; 1 bytes @ 0x5
   323  000006                     	ds	1
   324  000007                     ??i2_Lcd_Write_String:
   325  000007                     i2Lcd_Set_Cursor@y:
   326                           	opt callstack 0
   327  000007                     i2___lwdiv@counter:
   328                           	opt callstack 0
   329                           
   330                           ; 1 bytes @ 0x6
   331  000007                     	ds	1
   332  000008                     i2Lcd_Set_Cursor@temp:
   333                           	opt callstack 0
   334  000008                     i2utoa@buf:
   335                           	opt callstack 0
   336                           
   337                           ; 2 bytes @ 0x7
   338  000008                     	ds	1
   339  000009                     i2Lcd_Write_String@i:
   340                           	opt callstack 0
   341                           
   342                           ; 2 bytes @ 0x8
   343  000009                     	ds	1
   344  00000A                     i2utoa@val:
   345                           	opt callstack 0
   346                           
   347                           ; 2 bytes @ 0x9
   348  00000A                     	ds	2
   349  00000C                     i2utoa@base:
   350                           	opt callstack 0
   351                           
   352                           ; 2 bytes @ 0xB
   353  00000C                     	ds	2
   354  00000E                     i2utoa@v:
   355                           	opt callstack 0
   356                           
   357                           ; 2 bytes @ 0xD
   358  00000E                     	ds	2
   359  000010                     i2utoa@c:
   360                           	opt callstack 0
   361                           
   362                           ; 1 bytes @ 0xF
   363  000010                     	ds	1
   364  000011                     i2itoa@buf:
   365                           	opt callstack 0
   366                           
   367                           ; 2 bytes @ 0x10
   368  000011                     	ds	2
   369  000013                     i2itoa@val:
   370                           	opt callstack 0
   371                           
   372                           ; 2 bytes @ 0x12
   373  000013                     	ds	2
   374  000015                     i2itoa@base:
   375                           	opt callstack 0
   376                           
   377                           ; 2 bytes @ 0x14
   378  000015                     	ds	2
   379  000017                     
   380                           ; 1 bytes @ 0x16
   381  000017                     	ds	2
   382  000019                     i2transform@value:
   383                           	opt callstack 0
   384                           
   385                           ; 2 bytes @ 0x18
   386  000019                     	ds	2
   387  00001B                     ??i2_transform:
   388                           
   389                           ; 1 bytes @ 0x1A
   390  00001B                     	ds	2
   391  00001D                     ??_interruptRB:
   392                           
   393                           ; 1 bytes @ 0x1C
   394  00001D                     	ds	8
   395  000025                     ?___lwdiv:
   396                           	opt callstack 0
   397  000025                     ?___lwmod:
   398                           	opt callstack 0
   399  000025                     Lcd_Port@a:
   400                           	opt callstack 0
   401  000025                     ___lwdiv@dividend:
   402                           	opt callstack 0
   403  000025                     ___lwmod@dividend:
   404                           	opt callstack 0
   405                           
   406                           ; 2 bytes @ 0x24
   407  000025                     	ds	1
   408  000026                     ??_Lcd_Cmd:
   409  000026                     Lcd_Write_Char@temp:
   410                           	opt callstack 0
   411                           
   412                           ; 1 bytes @ 0x25
   413  000026                     	ds	1
   414  000027                     Lcd_Cmd@a:
   415                           	opt callstack 0
   416  000027                     Lcd_Write_Char@y:
   417                           	opt callstack 0
   418  000027                     ___lwdiv@divisor:
   419                           	opt callstack 0
   420  000027                     ___lwmod@divisor:
   421                           	opt callstack 0
   422                           
   423                           ; 2 bytes @ 0x26
   424  000027                     	ds	1
   425  000028                     ??_Lcd_Init:
   426  000028                     Lcd_Set_Cursor@b:
   427                           	opt callstack 0
   428  000028                     Lcd_Write_Char@a:
   429                           	opt callstack 0
   430                           
   431                           ; 1 bytes @ 0x27
   432  000028                     	ds	1
   433  000029                     Lcd_Set_Cursor@a:
   434                           	opt callstack 0
   435  000029                     ___lwmod@counter:
   436                           	opt callstack 0
   437  000029                     Lcd_Write_String@a:
   438                           	opt callstack 0
   439  000029                     ___lwdiv@quotient:
   440                           	opt callstack 0
   441                           
   442                           ; 2 bytes @ 0x28
   443  000029                     	ds	1
   444  00002A                     Lcd_Set_Cursor@z:
   445                           	opt callstack 0
   446                           
   447                           ; 1 bytes @ 0x29
   448  00002A                     	ds	1
   449  00002B                     ??_Lcd_Write_String:
   450  00002B                     Lcd_Set_Cursor@y:
   451                           	opt callstack 0
   452  00002B                     ___lwdiv@counter:
   453                           	opt callstack 0
   454                           
   455                           ; 1 bytes @ 0x2A
   456  00002B                     	ds	1
   457  00002C                     Lcd_Set_Cursor@temp:
   458                           	opt callstack 0
   459  00002C                     utoa@buf:
   460                           	opt callstack 0
   461                           
   462                           ; 2 bytes @ 0x2B
   463  00002C                     	ds	1
   464  00002D                     Lcd_Write_String@i:
   465                           	opt callstack 0
   466                           
   467                           ; 2 bytes @ 0x2C
   468  00002D                     	ds	1
   469  00002E                     utoa@val:
   470                           	opt callstack 0
   471                           
   472                           ; 2 bytes @ 0x2D
   473  00002E                     	ds	2
   474  000030                     utoa@base:
   475                           	opt callstack 0
   476                           
   477                           ; 2 bytes @ 0x2F
   478  000030                     	ds	2
   479  000032                     utoa@v:
   480                           	opt callstack 0
   481                           
   482                           ; 2 bytes @ 0x31
   483  000032                     	ds	2
   484  000034                     utoa@c:
   485                           	opt callstack 0
   486                           
   487                           ; 1 bytes @ 0x33
   488  000034                     	ds	1
   489  000035                     
   490                           ; 1 bytes @ 0x34
   491 ;;
   492 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   493 ;;
   494 ;; *************** function _main *****************
   495 ;; Defined at:
   496 ;;		line 42 in file "main.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;		None
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   510 ;;      Params:         0       0       0       0       0       0       0       0       0
   511 ;;      Locals:         0       0       0       0       0       0       0       0       0
   512 ;;      Temps:          0       2       0       0       0       0       0       0       0
   513 ;;      Totals:         0       2       0       0       0       0       0       0       0
   514 ;;Total ram usage:        2 bytes
   515 ;; Hardware stack levels required when called:    9
   516 ;; This function calls:
   517 ;;		_InitALL
   518 ;;		_InitInterruptRB
   519 ;;		_Lcd_Clear
   520 ;;		_Lcd_Init
   521 ;;		_Lcd_Set_Cursor
   522 ;;		_Lcd_Write_String
   523 ;;		_Timer0_Init
   524 ;;		_transform
   525 ;; This function is called by:
   526 ;;		Startup code after reset
   527 ;; This function uses a non-reentrant model
   528 ;;
   529                           
   530                           	psect	text0
   531  000848                     __ptext0:
   532                           	opt callstack 0
   533  000848                     _main:
   534                           	opt callstack 22
   535                           
   536                           ;main.c: 46: TRISD = 0x03;
   537                           
   538                           ;incstack = 0
   539  000848  0E03               	movlw	3
   540  00084A  6E95               	movwf	3989,c	;volatile
   541                           
   542                           ;main.c: 47: InitALL();
   543  00084C  EC13  F008         	call	_InitALL	;wreg free
   544                           
   545                           ;main.c: 48: Lcd_Init();
   546  000850  ECAC  F005         	call	_Lcd_Init	;wreg free
   547                           
   548                           ;main.c: 49: Lcd_Clear();
   549  000854  EC8E  F008         	call	_Lcd_Clear	;wreg free
   550                           
   551                           ;main.c: 58: Lcd_Set_Cursor(1,1);
   552  000858  0E01               	movlw	1
   553  00085A  6E28               	movwf	Lcd_Set_Cursor@b,c
   554  00085C  0E01               	movlw	1
   555  00085E  ECD2  F006         	call	_Lcd_Set_Cursor
   556                           
   557                           ;main.c: 59: Lcd_Write_String("LCD CONTADOR");
   558  000862  0E30               	movlw	low STR_1
   559  000864  6E29               	movwf	Lcd_Write_String@a,c
   560  000866  0E08               	movlw	high STR_1
   561  000868  6E2A               	movwf	Lcd_Write_String@a+1,c
   562  00086A  ECE6  F005         	call	_Lcd_Write_String	;wreg free
   563                           
   564                           ;main.c: 60: Lcd_Set_Cursor(2,1);
   565  00086E  0E01               	movlw	1
   566  000870  6E28               	movwf	Lcd_Set_Cursor@b,c
   567  000872  0E02               	movlw	2
   568  000874  ECD2  F006         	call	_Lcd_Set_Cursor
   569                           
   570                           ;main.c: 61: Lcd_Write_String("POR 5 Segundos");
   571  000878  0E21               	movlw	low STR_2
   572  00087A  6E29               	movwf	Lcd_Write_String@a,c
   573  00087C  0E08               	movlw	high STR_2
   574  00087E  6E2A               	movwf	Lcd_Write_String@a+1,c
   575  000880  ECE6  F005         	call	_Lcd_Write_String	;wreg free
   576                           
   577                           ;main.c: 62: _delay((unsigned long)((3000)*(16000000/4000.0)));
   578  000884  0E3D               	movlw	61
   579  000886  0100               	movlb	0	; () banked
   580  000888  6F6D               	movwf	(??_main+1)& (0+255),b
   581  00088A  0EE1               	movlw	225
   582  00088C  6F6C               	movwf	??_main& (0+255),b
   583  00088E  0E3F               	movlw	63
   584  000890                     u1007:
   585  000890  2EE8               	decfsz	wreg,f,c
   586  000892  D7FE               	bra	u1007
   587  000894  2F6C               	decfsz	??_main& (0+255),f,b
   588  000896  D7FC               	bra	u1007
   589  000898  2F6D               	decfsz	(??_main+1)& (0+255),f,b
   590  00089A  D7FA               	bra	u1007
   591  00089C  D000               	nop2	
   592                           
   593                           ;main.c: 63: Lcd_Clear();
   594  00089E  EC8E  F008         	call	_Lcd_Clear	;wreg free
   595  0008A2                     l1891:
   596                           
   597                           ;main.c: 69: {;main.c: 70: if(flagEntry==0){
   598  0008A2  0100               	movlb	0	; () banked
   599  0008A4  516E               	movf	_flagEntry& (0+255),w,b
   600  0008A6  116F               	iorwf	(_flagEntry+1)& (0+255),w,b
   601  0008A8  A4D8               	btfss	status,2,c
   602  0008AA  D01D               	goto	l1901
   603                           
   604                           ; BSR set to: 0
   605                           ;main.c: 71: Lcd_Set_Cursor(1,1);
   606  0008AC  0E01               	movlw	1
   607  0008AE  6E28               	movwf	Lcd_Set_Cursor@b,c
   608  0008B0  0E01               	movlw	1
   609  0008B2  ECD2  F006         	call	_Lcd_Set_Cursor
   610                           
   611                           ;main.c: 72: Lcd_Write_String("Preparados!!!!!");
   612  0008B6  0E11               	movlw	low STR_3
   613  0008B8  6E29               	movwf	Lcd_Write_String@a,c
   614  0008BA  0E08               	movlw	high STR_3
   615  0008BC  6E2A               	movwf	Lcd_Write_String@a+1,c
   616  0008BE  ECE6  F005         	call	_Lcd_Write_String	;wreg free
   617                           
   618                           ;main.c: 73: _delay((unsigned long)((500)*(16000000/4000.0)));
   619  0008C2  0E0B               	movlw	11
   620  0008C4  0100               	movlb	0	; () banked
   621  0008C6  6F6D               	movwf	(??_main+1)& (0+255),b
   622  0008C8  0E26               	movlw	38
   623  0008CA  6F6C               	movwf	??_main& (0+255),b
   624  0008CC  0E5D               	movlw	93
   625  0008CE                     u1017:
   626  0008CE  2EE8               	decfsz	wreg,f,c
   627  0008D0  D7FE               	bra	u1017
   628  0008D2  2F6C               	decfsz	??_main& (0+255),f,b
   629  0008D4  D7FC               	bra	u1017
   630  0008D6  2F6D               	decfsz	(??_main+1)& (0+255),f,b
   631  0008D8  D7FA               	bra	u1017
   632  0008DA  D000               	nop2	
   633                           
   634                           ;main.c: 74: flagEntry=1;
   635  0008DC  0E00               	movlw	0
   636  0008DE  0100               	movlb	0	; () banked
   637  0008E0  6F6F               	movwf	(_flagEntry+1)& (0+255),b
   638  0008E2  0E01               	movlw	1
   639  0008E4  6F6E               	movwf	_flagEntry& (0+255),b
   640  0008E6                     l1901:
   641                           
   642                           ; BSR set to: 0
   643                           ;main.c: 75: };main.c: 77: if((PORTDbits.RD0)&&(flagEntry==1)){
   644  0008E6  A083               	btfss	3971,0,c	;volatile
   645  0008E8  D7DC               	goto	l1891
   646                           
   647                           ; BSR set to: 0
   648  0008EA  056E               	decf	_flagEntry& (0+255),w,b
   649  0008EC  116F               	iorwf	(_flagEntry+1)& (0+255),w,b
   650  0008EE  A4D8               	btfss	status,2,c
   651  0008F0  D7D8               	goto	l1891
   652                           
   653                           ; BSR set to: 0
   654                           ;main.c: 79: Lcd_Clear();
   655  0008F2  EC8E  F008         	call	_Lcd_Clear	;wreg free
   656                           
   657                           ;main.c: 81: Lcd_Write_String("CONTANDO");
   658  0008F6  0E3D               	movlw	low STR_4
   659  0008F8  6E29               	movwf	Lcd_Write_String@a,c
   660  0008FA  0E08               	movlw	high STR_4
   661  0008FC  6E2A               	movwf	Lcd_Write_String@a+1,c
   662  0008FE  ECE6  F005         	call	_Lcd_Write_String	;wreg free
   663                           
   664                           ;main.c: 82: _delay((unsigned long)((500)*(16000000/4000.0)));
   665  000902  0E0B               	movlw	11
   666  000904  0100               	movlb	0	; () banked
   667  000906  6F6D               	movwf	(??_main+1)& (0+255),b
   668  000908  0E26               	movlw	38
   669  00090A  6F6C               	movwf	??_main& (0+255),b
   670  00090C  0E5D               	movlw	93
   671  00090E                     u1027:
   672  00090E  2EE8               	decfsz	wreg,f,c
   673  000910  D7FE               	bra	u1027
   674  000912  2F6C               	decfsz	??_main& (0+255),f,b
   675  000914  D7FC               	bra	u1027
   676  000916  2F6D               	decfsz	(??_main+1)& (0+255),f,b
   677  000918  D7FA               	bra	u1027
   678  00091A  D000               	nop2	
   679                           
   680                           ;main.c: 83: for(i=3; i>-1; i--){
   681  00091C  0E00               	movlw	0
   682  00091E  0100               	movlb	0	; () banked
   683  000920  6F71               	movwf	(_i+1)& (0+255),b
   684  000922  0E03               	movlw	3
   685  000924  6F70               	movwf	_i& (0+255),b
   686  000926                     l1917:
   687                           
   688                           ; BSR set to: 0
   689                           ;main.c: 84: transform(i);
   690  000926  C070  F068         	movff	_i,transform@value
   691  00092A  C071  F069         	movff	_i+1,transform@value+1
   692  00092E  ECAA  F006         	call	_transform	;wreg free
   693  000932  0100               	movlb	0	; () banked
   694  000934  0770               	decf	_i& (0+255),f,b
   695  000936  A0D8               	btfss	status,0,c
   696  000938  0771               	decf	(_i+1)& (0+255),f,b
   697                           
   698                           ; BSR set to: 0
   699  00093A  AF71               	btfss	(_i+1)& (0+255),7,b
   700  00093C  D7F4               	goto	l1917
   701                           
   702                           ; BSR set to: 0
   703                           ;main.c: 85: };main.c: 86: flagEntry=5;
   704  00093E  0E00               	movlw	0
   705  000940  6F6F               	movwf	(_flagEntry+1)& (0+255),b
   706  000942  0E05               	movlw	5
   707  000944  6F6E               	movwf	_flagEntry& (0+255),b
   708                           
   709                           ;main.c: 87: delay=0;
   710  000946  0E00               	movlw	0
   711  000948  6E36               	movwf	_delay+1,c
   712  00094A  0E00               	movlw	0
   713  00094C  6E35               	movwf	_delay,c
   714                           
   715                           ; BSR set to: 0
   716                           ;main.c: 88: Timer0_Init();
   717  00094E  EC52  F008         	call	_Timer0_Init	;wreg free
   718                           
   719                           ;main.c: 89: InitInterruptRB();
   720  000952  EC84  F008         	call	_InitInterruptRB	;wreg free
   721  000956  D7A5               	goto	l1891
   722  000958                     __end_of_main:
   723                           	opt callstack 0
   724                           
   725 ;; *************** function _transform *****************
   726 ;; Defined at:
   727 ;;		line 33 in file "main.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;  value           2    8[BANK0 ] int 
   730 ;; Auto vars:     Size  Location     Type
   731 ;;		None
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      void 
   734 ;; Registers used:
   735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   741 ;;      Params:         0       2       0       0       0       0       0       0       0
   742 ;;      Locals:         0       0       0       0       0       0       0       0       0
   743 ;;      Temps:          0       2       0       0       0       0       0       0       0
   744 ;;      Totals:         0       4       0       0       0       0       0       0       0
   745 ;;Total ram usage:        4 bytes
   746 ;; Hardware stack levels used:    1
   747 ;; Hardware stack levels required when called:    8
   748 ;; This function calls:
   749 ;;		_Lcd_Set_Cursor
   750 ;;		_Lcd_Write_String
   751 ;;		_itoa
   752 ;; This function is called by:
   753 ;;		_main
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           	psect	text1
   758  000D54                     __ptext1:
   759                           	opt callstack 0
   760  000D54                     _transform:
   761                           	opt callstack 22
   762                           
   763                           ;main.c: 35: itoa(Show, value, 10);
   764                           
   765                           ;incstack = 0
   766  000D54  0E72               	movlw	low _Show
   767  000D56  0100               	movlb	0	; () banked
   768  000D58  6F60               	movwf	itoa@buf& (0+255),b
   769  000D5A  0E00               	movlw	high _Show
   770  000D5C  6F61               	movwf	(itoa@buf+1)& (0+255),b
   771  000D5E  C068  F062         	movff	transform@value,itoa@val
   772  000D62  C069  F063         	movff	transform@value+1,itoa@val+1
   773  000D66  0E00               	movlw	0
   774  000D68  6F65               	movwf	(itoa@base+1)& (0+255),b
   775  000D6A  0E0A               	movlw	10
   776  000D6C  6F64               	movwf	itoa@base& (0+255),b
   777  000D6E  EC8A  F007         	call	_itoa	;wreg free
   778                           
   779                           ;main.c: 36: Lcd_Set_Cursor(2,7);
   780  000D72  0E07               	movlw	7
   781  000D74  6E28               	movwf	Lcd_Set_Cursor@b,c
   782  000D76  0E02               	movlw	2
   783  000D78  ECD2  F006         	call	_Lcd_Set_Cursor
   784                           
   785                           ;main.c: 37: Lcd_Write_String(Show);
   786  000D7C  0E72               	movlw	low _Show
   787  000D7E  6E29               	movwf	Lcd_Write_String@a,c
   788  000D80  0E00               	movlw	high _Show
   789  000D82  6E2A               	movwf	Lcd_Write_String@a+1,c
   790  000D84  ECE6  F005         	call	_Lcd_Write_String	;wreg free
   791                           
   792                           ;main.c: 38: _delay((unsigned long)((1000)*(16000000/4000.0)));
   793  000D88  0E15               	movlw	21
   794  000D8A  0100               	movlb	0	; () banked
   795  000D8C  6F6B               	movwf	(??_transform+1)& (0+255),b
   796  000D8E  0E4B               	movlw	75
   797  000D90  6F6A               	movwf	??_transform& (0+255),b
   798  000D92  0EBE               	movlw	190
   799  000D94                     u1037:
   800  000D94  2EE8               	decfsz	wreg,f,c
   801  000D96  D7FE               	bra	u1037
   802  000D98  2F6A               	decfsz	??_transform& (0+255),f,b
   803  000D9A  D7FC               	bra	u1037
   804  000D9C  2F6B               	decfsz	(??_transform+1)& (0+255),f,b
   805  000D9E  D7FA               	bra	u1037
   806  000DA0  F000               	nop	
   807  000DA2  0012               	return		;funcret
   808  000DA4                     __end_of_transform:
   809                           	opt callstack 0
   810                           
   811 ;; *************** function _itoa *****************
   812 ;; Defined at:
   813 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  buf             2    0[BANK0 ] PTR unsigned char 
   816 ;;		 -> Show(3), 
   817 ;;  val             2    2[BANK0 ] int 
   818 ;;  base            2    4[BANK0 ] int 
   819 ;; Auto vars:     Size  Location     Type
   820 ;;  cp              2    0        PTR unsigned char 
   821 ;;		 -> Show(3), 
   822 ;; Return value:  Size  Location     Type
   823 ;;                  2    0[BANK0 ] PTR unsigned char 
   824 ;; Registers used:
   825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   831 ;;      Params:         0       6       0       0       0       0       0       0       0
   832 ;;      Locals:         0       2       0       0       0       0       0       0       0
   833 ;;      Temps:          0       0       0       0       0       0       0       0       0
   834 ;;      Totals:         0       8       0       0       0       0       0       0       0
   835 ;;Total ram usage:        8 bytes
   836 ;; Hardware stack levels used:    1
   837 ;; Hardware stack levels required when called:    7
   838 ;; This function calls:
   839 ;;		_utoa
   840 ;; This function is called by:
   841 ;;		_transform
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text2
   846  000F14                     __ptext2:
   847                           	opt callstack 0
   848  000F14                     _itoa:
   849                           	opt callstack 22
   850                           
   851                           ;incstack = 0
   852  000F14  0100               	movlb	0	; () banked
   853  000F16  AF63               	btfss	(itoa@val+1)& (0+255),7,b
   854  000F18  D00C               	goto	l1859
   855                           
   856                           ; BSR set to: 0
   857  000F1A  C060  FFD9         	movff	itoa@buf,fsr2l
   858  000F1E  C061  FFDA         	movff	itoa@buf+1,fsr2h
   859  000F22  0E2D               	movlw	45
   860  000F24  6EDF               	movwf	indf2,c
   861                           
   862                           ; BSR set to: 0
   863  000F26  4B60               	infsnz	itoa@buf& (0+255),f,b
   864  000F28  2B61               	incf	(itoa@buf+1)& (0+255),f,b
   865                           
   866                           ; BSR set to: 0
   867  000F2A  6D62               	negf	itoa@val& (0+255),b
   868  000F2C  1F63               	comf	(itoa@val+1)& (0+255),f,b
   869  000F2E  B0D8               	btfsc	status,0,c
   870  000F30  2B63               	incf	(itoa@val+1)& (0+255),f,b
   871  000F32                     l1859:
   872                           
   873                           ; BSR set to: 0
   874  000F32  C060  F02C         	movff	itoa@buf,utoa@buf
   875  000F36  C061  F02D         	movff	itoa@buf+1,utoa@buf+1
   876  000F3A  C062  F02E         	movff	itoa@val,utoa@val
   877  000F3E  C063  F02F         	movff	itoa@val+1,utoa@val+1
   878  000F42  C064  F030         	movff	itoa@base,utoa@base
   879  000F46  C065  F031         	movff	itoa@base+1,utoa@base+1
   880  000F4A  EC08  F005         	call	_utoa	;wreg free
   881  000F4E  0012               	return		;funcret
   882  000F50                     __end_of_itoa:
   883                           	opt callstack 0
   884                           
   885 ;; *************** function _utoa *****************
   886 ;; Defined at:
   887 ;;		line 17 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;  buf             2   43[COMRAM] PTR unsigned char 
   890 ;;		 -> Show(3), 
   891 ;;  val             2   45[COMRAM] unsigned int 
   892 ;;  base            2   47[COMRAM] int 
   893 ;; Auto vars:     Size  Location     Type
   894 ;;  v               2   49[COMRAM] unsigned int 
   895 ;;  c               1   51[COMRAM] unsigned char 
   896 ;; Return value:  Size  Location     Type
   897 ;;                  2   43[COMRAM] PTR unsigned char 
   898 ;; Registers used:
   899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   905 ;;      Params:         6       0       0       0       0       0       0       0       0
   906 ;;      Locals:         3       0       0       0       0       0       0       0       0
   907 ;;      Temps:          0       0       0       0       0       0       0       0       0
   908 ;;      Totals:         9       0       0       0       0       0       0       0       0
   909 ;;Total ram usage:        9 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; Hardware stack levels required when called:    6
   912 ;; This function calls:
   913 ;;		___lwdiv
   914 ;;		___lwmod
   915 ;; This function is called by:
   916 ;;		_itoa
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           	psect	text3
   921  000A10                     __ptext3:
   922                           	opt callstack 0
   923  000A10                     _utoa:
   924                           	opt callstack 22
   925                           
   926                           ;incstack = 0
   927  000A10  C02E  F032         	movff	utoa@val,utoa@v
   928  000A14  C02F  F033         	movff	utoa@val+1,utoa@v+1
   929  000A18                     l1513:
   930  000A18  C032  F025         	movff	utoa@v,___lwdiv@dividend
   931  000A1C  C033  F026         	movff	utoa@v+1,___lwdiv@dividend+1
   932  000A20  C030  F027         	movff	utoa@base,___lwdiv@divisor
   933  000A24  C031  F028         	movff	utoa@base+1,___lwdiv@divisor+1
   934  000A28  EC58  F006         	call	___lwdiv	;wreg free
   935  000A2C  C025  F032         	movff	?___lwdiv,utoa@v
   936  000A30  C026  F033         	movff	?___lwdiv+1,utoa@v+1
   937  000A34  4A2C               	infsnz	utoa@buf,f,c
   938  000A36  2A2D               	incf	utoa@buf+1,f,c
   939  000A38  5032               	movf	utoa@v,w,c
   940  000A3A  1033               	iorwf	utoa@v+1,w,c
   941  000A3C  A4D8               	btfss	status,2,c
   942  000A3E  D7EC               	goto	l1513
   943  000A40  C02C  FFD9         	movff	utoa@buf,fsr2l
   944  000A44  C02D  FFDA         	movff	utoa@buf+1,fsr2h
   945  000A48  0E00               	movlw	0
   946  000A4A  6EDF               	movwf	indf2,c
   947  000A4C  062C               	decf	utoa@buf,f,c
   948  000A4E  A0D8               	btfss	status,0,c
   949  000A50  062D               	decf	utoa@buf+1,f,c
   950  000A52                     l1523:
   951  000A52  C02E  F025         	movff	utoa@val,___lwmod@dividend
   952  000A56  C02F  F026         	movff	utoa@val+1,___lwmod@dividend+1
   953  000A5A  C030  F027         	movff	utoa@base,___lwmod@divisor
   954  000A5E  C031  F028         	movff	utoa@base+1,___lwmod@divisor+1
   955  000A62  EC48  F007         	call	___lwmod	;wreg free
   956  000A66  5025               	movf	?___lwmod,w,c
   957  000A68  6E34               	movwf	utoa@c,c
   958  000A6A  C02E  F025         	movff	utoa@val,___lwdiv@dividend
   959  000A6E  C02F  F026         	movff	utoa@val+1,___lwdiv@dividend+1
   960  000A72  C030  F027         	movff	utoa@base,___lwdiv@divisor
   961  000A76  C031  F028         	movff	utoa@base+1,___lwdiv@divisor+1
   962  000A7A  EC58  F006         	call	___lwdiv	;wreg free
   963  000A7E  C025  F02E         	movff	?___lwdiv,utoa@val
   964  000A82  C026  F02F         	movff	?___lwdiv+1,utoa@val+1
   965  000A86  0E09               	movlw	9
   966  000A88  6434               	cpfsgt	utoa@c,c
   967  000A8A  D002               	goto	l807
   968  000A8C  0E07               	movlw	7
   969  000A8E  2634               	addwf	utoa@c,f,c
   970  000A90                     l807:
   971  000A90  0E30               	movlw	48
   972  000A92  2634               	addwf	utoa@c,f,c
   973  000A94  C02C  FFD9         	movff	utoa@buf,fsr2l
   974  000A98  C02D  FFDA         	movff	utoa@buf+1,fsr2h
   975  000A9C  C034  FFDF         	movff	utoa@c,indf2
   976  000AA0  062C               	decf	utoa@buf,f,c
   977  000AA2  A0D8               	btfss	status,0,c
   978  000AA4  062D               	decf	utoa@buf+1,f,c
   979  000AA6  502E               	movf	utoa@val,w,c
   980  000AA8  102F               	iorwf	utoa@val+1,w,c
   981  000AAA  A4D8               	btfss	status,2,c
   982  000AAC  D7D2               	goto	l1523
   983                           
   984                           ;	Return value of _utoa is never used
   985  000AAE  4A2C               	infsnz	utoa@buf,f,c
   986  000AB0  2A2D               	incf	utoa@buf+1,f,c
   987  000AB2  0012               	return		;funcret
   988  000AB4                     __end_of_utoa:
   989                           	opt callstack 0
   990                           
   991 ;; *************** function ___lwmod *****************
   992 ;; Defined at:
   993 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwmod.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  dividend        2   36[COMRAM] unsigned int 
   996 ;;  divisor         2   38[COMRAM] unsigned int 
   997 ;; Auto vars:     Size  Location     Type
   998 ;;  counter         1   40[COMRAM] unsigned char 
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  2   36[COMRAM] unsigned int 
  1001 ;; Registers used:
  1002 ;;		wreg, status,2, status,0
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1008 ;;      Params:         4       0       0       0       0       0       0       0       0
  1009 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1010 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1011 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1012 ;;Total ram usage:        5 bytes
  1013 ;; Hardware stack levels used:    1
  1014 ;; Hardware stack levels required when called:    5
  1015 ;; This function calls:
  1016 ;;		Nothing
  1017 ;; This function is called by:
  1018 ;;		_utoa
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           	psect	text4
  1023  000E90                     __ptext4:
  1024                           	opt callstack 0
  1025  000E90                     ___lwmod:
  1026                           	opt callstack 22
  1027                           
  1028                           ;incstack = 0
  1029  000E90  5027               	movf	___lwmod@divisor,w,c
  1030  000E92  1028               	iorwf	___lwmod@divisor+1,w,c
  1031  000E94  B4D8               	btfsc	status,2,c
  1032  000E96  D018               	goto	l625
  1033  000E98  0E01               	movlw	1
  1034  000E9A  6E29               	movwf	___lwmod@counter,c
  1035  000E9C  D004               	goto	l1417
  1036  000E9E                     l1415:
  1037  000E9E  90D8               	bcf	status,0,c
  1038  000EA0  3627               	rlcf	___lwmod@divisor,f,c
  1039  000EA2  3628               	rlcf	___lwmod@divisor+1,f,c
  1040  000EA4  2A29               	incf	___lwmod@counter,f,c
  1041  000EA6                     l1417:
  1042  000EA6  AE28               	btfss	___lwmod@divisor+1,7,c
  1043  000EA8  D7FA               	goto	l1415
  1044  000EAA                     u560:
  1045  000EAA  5027               	movf	___lwmod@divisor,w,c
  1046  000EAC  5C25               	subwf	___lwmod@dividend,w,c
  1047  000EAE  5028               	movf	___lwmod@divisor+1,w,c
  1048  000EB0  5826               	subwfb	___lwmod@dividend+1,w,c
  1049  000EB2  A0D8               	btfss	status,0,c
  1050  000EB4  D004               	goto	l1423
  1051  000EB6  5027               	movf	___lwmod@divisor,w,c
  1052  000EB8  5E25               	subwf	___lwmod@dividend,f,c
  1053  000EBA  5028               	movf	___lwmod@divisor+1,w,c
  1054  000EBC  5A26               	subwfb	___lwmod@dividend+1,f,c
  1055  000EBE                     l1423:
  1056  000EBE  90D8               	bcf	status,0,c
  1057  000EC0  3228               	rrcf	___lwmod@divisor+1,f,c
  1058  000EC2  3227               	rrcf	___lwmod@divisor,f,c
  1059  000EC4  2E29               	decfsz	___lwmod@counter,f,c
  1060  000EC6  D7F1               	goto	u560
  1061  000EC8                     l625:
  1062  000EC8  C025  F025         	movff	___lwmod@dividend,?___lwmod
  1063  000ECC  C026  F026         	movff	___lwmod@dividend+1,?___lwmod+1
  1064  000ED0  0012               	return		;funcret
  1065  000ED2                     __end_of___lwmod:
  1066                           	opt callstack 0
  1067                           
  1068 ;; *************** function ___lwdiv *****************
  1069 ;; Defined at:
  1070 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;  dividend        2   36[COMRAM] unsigned int 
  1073 ;;  divisor         2   38[COMRAM] unsigned int 
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;  quotient        2   40[COMRAM] unsigned int 
  1076 ;;  counter         1   42[COMRAM] unsigned char 
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  2   36[COMRAM] unsigned int 
  1079 ;; Registers used:
  1080 ;;		wreg, status,2, status,0
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1086 ;;      Params:         4       0       0       0       0       0       0       0       0
  1087 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1088 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1089 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1090 ;;Total ram usage:        7 bytes
  1091 ;; Hardware stack levels used:    1
  1092 ;; Hardware stack levels required when called:    5
  1093 ;; This function calls:
  1094 ;;		Nothing
  1095 ;; This function is called by:
  1096 ;;		_utoa
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           	psect	text5
  1101  000CB0                     __ptext5:
  1102                           	opt callstack 0
  1103  000CB0                     ___lwdiv:
  1104                           	opt callstack 22
  1105                           
  1106                           ;incstack = 0
  1107  000CB0  0E00               	movlw	0
  1108  000CB2  6E2A               	movwf	___lwdiv@quotient+1,c
  1109  000CB4  0E00               	movlw	0
  1110  000CB6  6E29               	movwf	___lwdiv@quotient,c
  1111  000CB8  5027               	movf	___lwdiv@divisor,w,c
  1112  000CBA  1028               	iorwf	___lwdiv@divisor+1,w,c
  1113  000CBC  B4D8               	btfsc	status,2,c
  1114  000CBE  D01C               	goto	l615
  1115  000CC0  0E01               	movlw	1
  1116  000CC2  6E2B               	movwf	___lwdiv@counter,c
  1117  000CC4  D004               	goto	l1397
  1118  000CC6                     l1395:
  1119  000CC6  90D8               	bcf	status,0,c
  1120  000CC8  3627               	rlcf	___lwdiv@divisor,f,c
  1121  000CCA  3628               	rlcf	___lwdiv@divisor+1,f,c
  1122  000CCC  2A2B               	incf	___lwdiv@counter,f,c
  1123  000CCE                     l1397:
  1124  000CCE  AE28               	btfss	___lwdiv@divisor+1,7,c
  1125  000CD0  D7FA               	goto	l1395
  1126  000CD2                     u530:
  1127  000CD2  90D8               	bcf	status,0,c
  1128  000CD4  3629               	rlcf	___lwdiv@quotient,f,c
  1129  000CD6  362A               	rlcf	___lwdiv@quotient+1,f,c
  1130  000CD8  5027               	movf	___lwdiv@divisor,w,c
  1131  000CDA  5C25               	subwf	___lwdiv@dividend,w,c
  1132  000CDC  5028               	movf	___lwdiv@divisor+1,w,c
  1133  000CDE  5826               	subwfb	___lwdiv@dividend+1,w,c
  1134  000CE0  A0D8               	btfss	status,0,c
  1135  000CE2  D005               	goto	l1407
  1136  000CE4  5027               	movf	___lwdiv@divisor,w,c
  1137  000CE6  5E25               	subwf	___lwdiv@dividend,f,c
  1138  000CE8  5028               	movf	___lwdiv@divisor+1,w,c
  1139  000CEA  5A26               	subwfb	___lwdiv@dividend+1,f,c
  1140  000CEC  8029               	bsf	___lwdiv@quotient,0,c
  1141  000CEE                     l1407:
  1142  000CEE  90D8               	bcf	status,0,c
  1143  000CF0  3228               	rrcf	___lwdiv@divisor+1,f,c
  1144  000CF2  3227               	rrcf	___lwdiv@divisor,f,c
  1145  000CF4  2E2B               	decfsz	___lwdiv@counter,f,c
  1146  000CF6  D7ED               	goto	u530
  1147  000CF8                     l615:
  1148  000CF8  C029  F025         	movff	___lwdiv@quotient,?___lwdiv
  1149  000CFC  C02A  F026         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1150  000D00  0012               	return		;funcret
  1151  000D02                     __end_of___lwdiv:
  1152                           	opt callstack 0
  1153                           
  1154 ;; *************** function _Lcd_Write_String *****************
  1155 ;; Defined at:
  1156 ;;		line 97 in file "lcd.h"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;  a               2   40[COMRAM] PTR unsigned char 
  1159 ;;		 -> STR_5(16), STR_4(9), STR_3(16), STR_2(15), 
  1160 ;;		 -> STR_1(13), Show(3), 
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  i               2   44[COMRAM] int 
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1172 ;;      Params:         2       0       0       0       0       0       0       0       0
  1173 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1174 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1175 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1176 ;;Total ram usage:        6 bytes
  1177 ;; Hardware stack levels used:    1
  1178 ;; Hardware stack levels required when called:    7
  1179 ;; This function calls:
  1180 ;;		_Lcd_Write_Char
  1181 ;; This function is called by:
  1182 ;;		_transform
  1183 ;;		_main
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           	psect	text6
  1188  000BCC                     __ptext6:
  1189                           	opt callstack 0
  1190  000BCC                     _Lcd_Write_String:
  1191                           	opt callstack 22
  1192                           
  1193                           ;lcd.h: 99: int i;;lcd.h: 100: for(i=0;a[i]!='\0';i++)
  1194                           
  1195                           ;incstack = 0
  1196  000BCC  0E00               	movlw	0
  1197  000BCE  6E2E               	movwf	Lcd_Write_String@i+1,c
  1198  000BD0  0E00               	movlw	0
  1199  000BD2  6E2D               	movwf	Lcd_Write_String@i,c
  1200  000BD4  D01A               	goto	l1623
  1201  000BD6                     l1619:
  1202                           
  1203                           ;lcd.h: 101: Lcd_Write_Char(a[i]);
  1204  000BD6  502D               	movf	Lcd_Write_String@i,w,c
  1205  000BD8  2429               	addwf	Lcd_Write_String@a,w,c
  1206  000BDA  6E2B               	movwf	??_Lcd_Write_String& (0+255),c
  1207  000BDC  502E               	movf	Lcd_Write_String@i+1,w,c
  1208  000BDE  202A               	addwfc	Lcd_Write_String@a+1,w,c
  1209  000BE0  6E2C               	movwf	(??_Lcd_Write_String+1)& (0+255),c
  1210  000BE2  C02B  FFF6         	movff	??_Lcd_Write_String,tblptrl
  1211  000BE6  C02C  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  1212  000BEA  6AF8               	clrf	tblptru,c
  1213  000BEC  0E07               	movlw	(high __ramtop+-1)
  1214  000BEE  64F7               	cpfsgt	tblptrh,c
  1215  000BF0  D003               	bra	u767
  1216  000BF2  0008               	tblrd		*
  1217  000BF4  50F5               	movf	tablat,w,c
  1218  000BF6  D005               	bra	u760
  1219  000BF8                     u767:
  1220  000BF8  CFF6 FFD9          	movff	tblptrl,fsr2l
  1221  000BFC  CFF7 FFDA          	movff	tblptrh,fsr2h
  1222  000C00  50DF               	movf	indf2,w,c
  1223  000C02                     u760:
  1224  000C02  ECC5  F007         	call	_Lcd_Write_Char
  1225  000C06  4A2D               	infsnz	Lcd_Write_String@i,f,c
  1226  000C08  2A2E               	incf	Lcd_Write_String@i+1,f,c
  1227  000C0A                     l1623:
  1228  000C0A  502D               	movf	Lcd_Write_String@i,w,c
  1229  000C0C  2429               	addwf	Lcd_Write_String@a,w,c
  1230  000C0E  6E2B               	movwf	??_Lcd_Write_String& (0+255),c
  1231  000C10  502E               	movf	Lcd_Write_String@i+1,w,c
  1232  000C12  202A               	addwfc	Lcd_Write_String@a+1,w,c
  1233  000C14  6E2C               	movwf	(??_Lcd_Write_String+1)& (0+255),c
  1234  000C16  C02B  FFF6         	movff	??_Lcd_Write_String,tblptrl
  1235  000C1A  C02C  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  1236  000C1E  6AF8               	clrf	tblptru,c
  1237  000C20  0E07               	movlw	(high __ramtop+-1)
  1238  000C22  64F7               	cpfsgt	tblptrh,c
  1239  000C24  D003               	bra	u777
  1240  000C26  0008               	tblrd		*
  1241  000C28  50F5               	movf	tablat,w,c
  1242  000C2A  D005               	bra	u770
  1243  000C2C                     u777:
  1244  000C2C  CFF6 FFD9          	movff	tblptrl,fsr2l
  1245  000C30  CFF7 FFDA          	movff	tblptrh,fsr2h
  1246  000C34  50DF               	movf	indf2,w,c
  1247  000C36                     u770:
  1248  000C36  0900               	iorlw	0
  1249  000C38  B4D8               	btfsc	status,2,c
  1250  000C3A  0012               	return	
  1251  000C3C  D7CC               	goto	l1619
  1252  000C3E                     __end_of_Lcd_Write_String:
  1253                           	opt callstack 0
  1254                           
  1255 ;; *************** function _Lcd_Write_Char *****************
  1256 ;; Defined at:
  1257 ;;		line 81 in file "lcd.h"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  a               1    wreg     unsigned char 
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;  a               1   39[COMRAM] unsigned char 
  1262 ;;  y               1   38[COMRAM] unsigned char 
  1263 ;;  temp            1   37[COMRAM] unsigned char 
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      void 
  1266 ;; Registers used:
  1267 ;;		wreg, status,2, status,0, cstack
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1273 ;;      Params:         0       0       0       0       0       0       0       0       0
  1274 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1275 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1276 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1277 ;;Total ram usage:        3 bytes
  1278 ;; Hardware stack levels used:    1
  1279 ;; Hardware stack levels required when called:    6
  1280 ;; This function calls:
  1281 ;;		_Lcd_Port
  1282 ;; This function is called by:
  1283 ;;		_Lcd_Write_String
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           	psect	text7
  1288  000F8A                     __ptext7:
  1289                           	opt callstack 0
  1290  000F8A                     _Lcd_Write_Char:
  1291                           	opt callstack 22
  1292                           
  1293                           ;incstack = 0
  1294                           ;Lcd_Write_Char@a stored from wreg
  1295  000F8A  6E28               	movwf	Lcd_Write_Char@a,c
  1296                           
  1297                           ;lcd.h: 83: char temp,y;;lcd.h: 84: temp = a&0x0F;
  1298  000F8C  5028               	movf	Lcd_Write_Char@a,w,c
  1299  000F8E  0B0F               	andlw	15
  1300  000F90  6E26               	movwf	Lcd_Write_Char@temp,c
  1301                           
  1302                           ;lcd.h: 85: y = a&0xF0;
  1303  000F92  5028               	movf	Lcd_Write_Char@a,w,c
  1304  000F94  0BF0               	andlw	240
  1305  000F96  6E27               	movwf	Lcd_Write_Char@y,c
  1306                           
  1307                           ;lcd.h: 86: PORTDbits.RD2 = 1;
  1308  000F98  8483               	bsf	3971,2,c	;volatile
  1309                           
  1310                           ;lcd.h: 87: Lcd_Port(y>>4);
  1311  000F9A  3827               	swapf	Lcd_Write_Char@y,w,c
  1312  000F9C  0B0F               	andlw	15
  1313  000F9E  ECFD  F007         	call	_Lcd_Port
  1314                           
  1315                           ;lcd.h: 88: PORTDbits.RD3 = 1;
  1316  000FA2  8683               	bsf	3971,3,c	;volatile
  1317                           
  1318                           ;lcd.h: 89: _delay((unsigned long)((40)*(16000000/4000000.0)));
  1319  000FA4  0E35               	movlw	53
  1320  000FA6                     u1047:
  1321  000FA6  2EE8               	decfsz	wreg,f,c
  1322  000FA8  D7FE               	bra	u1047
  1323  000FAA  F000               	nop	
  1324                           
  1325                           ;lcd.h: 90: PORTDbits.RD3 = 0;
  1326  000FAC  9683               	bcf	3971,3,c	;volatile
  1327                           
  1328                           ;lcd.h: 91: Lcd_Port(temp);
  1329  000FAE  5026               	movf	Lcd_Write_Char@temp,w,c
  1330  000FB0  ECFD  F007         	call	_Lcd_Port
  1331                           
  1332                           ;lcd.h: 92: PORTDbits.RD3 = 1;
  1333  000FB4  8683               	bsf	3971,3,c	;volatile
  1334                           
  1335                           ;lcd.h: 93: _delay((unsigned long)((40)*(16000000/4000000.0)));
  1336  000FB6  0E35               	movlw	53
  1337  000FB8                     u1057:
  1338  000FB8  2EE8               	decfsz	wreg,f,c
  1339  000FBA  D7FE               	bra	u1057
  1340  000FBC  F000               	nop	
  1341                           
  1342                           ;lcd.h: 94: PORTDbits.RD3 = 0;
  1343  000FBE  9683               	bcf	3971,3,c	;volatile
  1344  000FC0  0012               	return		;funcret
  1345  000FC2                     __end_of_Lcd_Write_Char:
  1346                           	opt callstack 0
  1347                           
  1348 ;; *************** function _Lcd_Set_Cursor *****************
  1349 ;; Defined at:
  1350 ;;		line 41 in file "lcd.h"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;  a               1    wreg     unsigned char 
  1353 ;;  b               1   39[COMRAM] unsigned char 
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;  a               1   40[COMRAM] unsigned char 
  1356 ;;  temp            1   43[COMRAM] unsigned char 
  1357 ;;  y               1   42[COMRAM] unsigned char 
  1358 ;;  z               1   41[COMRAM] unsigned char 
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		wreg, status,2, status,0, cstack
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1368 ;;      Params:         1       0       0       0       0       0       0       0       0
  1369 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1370 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1371 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1372 ;;Total ram usage:        5 bytes
  1373 ;; Hardware stack levels used:    1
  1374 ;; Hardware stack levels required when called:    7
  1375 ;; This function calls:
  1376 ;;		_Lcd_Cmd
  1377 ;; This function is called by:
  1378 ;;		_transform
  1379 ;;		_main
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           	psect	text8
  1384  000DA4                     __ptext8:
  1385                           	opt callstack 0
  1386  000DA4                     _Lcd_Set_Cursor:
  1387                           	opt callstack 22
  1388                           
  1389                           ;incstack = 0
  1390                           ;Lcd_Set_Cursor@a stored from wreg
  1391  000DA4  6E29               	movwf	Lcd_Set_Cursor@a,c
  1392                           
  1393                           ;lcd.h: 43: char temp,z,y;;lcd.h: 44: if(a == 1)
  1394  000DA6  0429               	decf	Lcd_Set_Cursor@a,w,c
  1395  000DA8  A4D8               	btfss	status,2,c
  1396  000DAA  D010               	goto	l1609
  1397                           
  1398                           ;lcd.h: 45: {;lcd.h: 46: temp = 0x80 + b - 1;
  1399  000DAC  5028               	movf	Lcd_Set_Cursor@b,w,c
  1400  000DAE  0F7F               	addlw	127
  1401  000DB0  6E2C               	movwf	Lcd_Set_Cursor@temp,c
  1402                           
  1403                           ;lcd.h: 47: z = temp>>4;
  1404  000DB2  382C               	swapf	Lcd_Set_Cursor@temp,w,c
  1405  000DB4  0B0F               	andlw	15
  1406  000DB6  6E2A               	movwf	Lcd_Set_Cursor@z,c
  1407                           
  1408                           ;lcd.h: 48: y = temp & 0x0F;
  1409  000DB8  502C               	movf	Lcd_Set_Cursor@temp,w,c
  1410  000DBA  0B0F               	andlw	15
  1411  000DBC  6E2B               	movwf	Lcd_Set_Cursor@y,c
  1412                           
  1413                           ;lcd.h: 49: Lcd_Cmd(z);
  1414  000DBE  502A               	movf	Lcd_Set_Cursor@z,w,c
  1415  000DC0  EC64  F008         	call	_Lcd_Cmd
  1416                           
  1417                           ;lcd.h: 50: Lcd_Cmd(y);
  1418  000DC4  502B               	movf	Lcd_Set_Cursor@y,w,c
  1419  000DC6  EC64  F008         	call	_Lcd_Cmd
  1420                           
  1421                           ;lcd.h: 51: }
  1422  000DCA  0012               	return	
  1423  000DCC                     l1609:
  1424                           
  1425                           ;lcd.h: 52: else if(a == 2)
  1426  000DCC  0E02               	movlw	2
  1427  000DCE  1829               	xorwf	Lcd_Set_Cursor@a,w,c
  1428  000DD0  A4D8               	btfss	status,2,c
  1429  000DD2  0012               	return	
  1430                           
  1431                           ;lcd.h: 53: {;lcd.h: 54: temp = 0xC0 + b - 1;
  1432  000DD4  5028               	movf	Lcd_Set_Cursor@b,w,c
  1433  000DD6  0FBF               	addlw	191
  1434  000DD8  6E2C               	movwf	Lcd_Set_Cursor@temp,c
  1435                           
  1436                           ;lcd.h: 55: z = temp>>4;
  1437  000DDA  382C               	swapf	Lcd_Set_Cursor@temp,w,c
  1438  000DDC  0B0F               	andlw	15
  1439  000DDE  6E2A               	movwf	Lcd_Set_Cursor@z,c
  1440                           
  1441                           ;lcd.h: 56: y = temp & 0x0F;
  1442  000DE0  502C               	movf	Lcd_Set_Cursor@temp,w,c
  1443  000DE2  0B0F               	andlw	15
  1444  000DE4  6E2B               	movwf	Lcd_Set_Cursor@y,c
  1445                           
  1446                           ;lcd.h: 57: Lcd_Cmd(z);
  1447  000DE6  502A               	movf	Lcd_Set_Cursor@z,w,c
  1448  000DE8  EC64  F008         	call	_Lcd_Cmd
  1449                           
  1450                           ;lcd.h: 58: Lcd_Cmd(y);
  1451  000DEC  502B               	movf	Lcd_Set_Cursor@y,w,c
  1452  000DEE  EC64  F008         	call	_Lcd_Cmd
  1453  000DF2  0012               	return		;funcret
  1454  000DF4                     __end_of_Lcd_Set_Cursor:
  1455                           	opt callstack 0
  1456                           
  1457 ;; *************** function _Timer0_Init *****************
  1458 ;; Defined at:
  1459 ;;		line 11 in file "timer0.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;		None
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;		None
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		wreg, status,2
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1473 ;;      Params:         0       0       0       0       0       0       0       0       0
  1474 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1475 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1476 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1477 ;;Total ram usage:        0 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; Hardware stack levels required when called:    5
  1480 ;; This function calls:
  1481 ;;		Nothing
  1482 ;; This function is called by:
  1483 ;;		_main
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           	psect	text9
  1488  0010A4                     __ptext9:
  1489                           	opt callstack 0
  1490  0010A4                     _Timer0_Init:
  1491                           	opt callstack 25
  1492                           
  1493                           ;timer0.c: 13: INTCONbits.GIE = 0;
  1494                           
  1495                           ;incstack = 0
  1496  0010A4  9EF2               	bcf	4082,7,c	;volatile
  1497                           
  1498                           ;timer0.c: 14: T0CONbits.T0CS = 0;
  1499  0010A6  9AD5               	bcf	4053,5,c	;volatile
  1500                           
  1501                           ;timer0.c: 15: T0CONbits.PSA = 0;
  1502  0010A8  96D5               	bcf	4053,3,c	;volatile
  1503                           
  1504                           ;timer0.c: 16: T0CONbits.T0PS = 0b010;
  1505  0010AA  50D5               	movf	4053,w,c	;volatile
  1506  0010AC  0BF8               	andlw	-8
  1507  0010AE  0902               	iorlw	2
  1508  0010B0  6ED5               	movwf	4053,c	;volatile
  1509                           
  1510                           ;timer0.c: 17: T0CONbits.T08BIT = 0;
  1511  0010B2  9CD5               	bcf	4053,6,c	;volatile
  1512                           
  1513                           ;timer0.c: 18: TMR0 = 0xEC77;
  1514  0010B4  0EEC               	movlw	236
  1515  0010B6  6ED7               	movwf	4055,c	;volatile
  1516  0010B8  0E77               	movlw	119
  1517  0010BA  6ED6               	movwf	4054,c	;volatile
  1518                           
  1519                           ;timer0.c: 20: T0CONbits.TMR0ON = 1;
  1520  0010BC  8ED5               	bsf	4053,7,c	;volatile
  1521                           
  1522                           ;timer0.c: 21: INTCONbits.TMR0IE = 1;
  1523  0010BE  8AF2               	bsf	4082,5,c	;volatile
  1524                           
  1525                           ;timer0.c: 22: INTCONbits.TMR0IF = 0;
  1526  0010C0  94F2               	bcf	4082,2,c	;volatile
  1527                           
  1528                           ;timer0.c: 23: INTCONbits.PEIE = 1;
  1529  0010C2  8CF2               	bsf	4082,6,c	;volatile
  1530                           
  1531                           ;timer0.c: 24: INTCONbits.GIE = 1;
  1532  0010C4  8EF2               	bsf	4082,7,c	;volatile
  1533  0010C6  0012               	return		;funcret
  1534  0010C8                     __end_of_Timer0_Init:
  1535                           	opt callstack 0
  1536                           
  1537 ;; *************** function _Lcd_Init *****************
  1538 ;; Defined at:
  1539 ;;		line 62 in file "lcd.h"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;		None
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;		None
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      void 
  1546 ;; Registers used:
  1547 ;;		wreg, status,2, cstack
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1553 ;;      Params:         0       0       0       0       0       0       0       0       0
  1554 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1555 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1556 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1557 ;;Total ram usage:        1 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:    7
  1560 ;; This function calls:
  1561 ;;		_Lcd_Cmd
  1562 ;;		_Lcd_Port
  1563 ;; This function is called by:
  1564 ;;		_main
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           	psect	text10
  1569  000B58                     __ptext10:
  1570                           	opt callstack 0
  1571  000B58                     _Lcd_Init:
  1572                           	opt callstack 23
  1573                           
  1574                           ;lcd.h: 64: Lcd_Port(0x00);
  1575                           
  1576                           ;incstack = 0
  1577  000B58  0E00               	movlw	0
  1578  000B5A  ECFD  F007         	call	_Lcd_Port
  1579                           
  1580                           ;lcd.h: 65: _delay((unsigned long)((20)*(16000000/4000.0)));
  1581  000B5E  0E68               	movlw	104
  1582  000B60  6E28               	movwf	??_Lcd_Init& (0+255),c
  1583  000B62  0EE4               	movlw	228
  1584  000B64                     u1067:
  1585  000B64  2EE8               	decfsz	wreg,f,c
  1586  000B66  D7FE               	bra	u1067
  1587  000B68  2E28               	decfsz	??_Lcd_Init& (0+255),f,c
  1588  000B6A  D7FC               	bra	u1067
  1589  000B6C  D000               	nop2	
  1590                           
  1591                           ;lcd.h: 66: Lcd_Cmd(0x03);
  1592  000B6E  0E03               	movlw	3
  1593  000B70  EC64  F008         	call	_Lcd_Cmd
  1594                           
  1595                           ;lcd.h: 67: _delay((unsigned long)((5)*(16000000/4000.0)));
  1596  000B74  0E1A               	movlw	26
  1597  000B76  6E28               	movwf	??_Lcd_Init& (0+255),c
  1598  000B78  0EF8               	movlw	248
  1599  000B7A                     u1077:
  1600  000B7A  2EE8               	decfsz	wreg,f,c
  1601  000B7C  D7FE               	bra	u1077
  1602  000B7E  2E28               	decfsz	??_Lcd_Init& (0+255),f,c
  1603  000B80  D7FC               	bra	u1077
  1604  000B82  D000               	nop2	
  1605                           
  1606                           ;lcd.h: 68: Lcd_Cmd(0x03);
  1607  000B84  0E03               	movlw	3
  1608  000B86  EC64  F008         	call	_Lcd_Cmd
  1609                           
  1610                           ;lcd.h: 69: _delay((unsigned long)((11)*(16000000/4000.0)));
  1611  000B8A  0E3A               	movlw	58
  1612  000B8C  6E28               	movwf	??_Lcd_Init& (0+255),c
  1613  000B8E  0E23               	movlw	35
  1614  000B90                     u1087:
  1615  000B90  2EE8               	decfsz	wreg,f,c
  1616  000B92  D7FE               	bra	u1087
  1617  000B94  2E28               	decfsz	??_Lcd_Init& (0+255),f,c
  1618  000B96  D7FC               	bra	u1087
  1619  000B98  F000               	nop	
  1620                           
  1621                           ;lcd.h: 70: Lcd_Cmd(0x03);
  1622  000B9A  0E03               	movlw	3
  1623  000B9C  EC64  F008         	call	_Lcd_Cmd
  1624                           
  1625                           ;lcd.h: 72: Lcd_Cmd(0x02);
  1626  000BA0  0E02               	movlw	2
  1627  000BA2  EC64  F008         	call	_Lcd_Cmd
  1628                           
  1629                           ;lcd.h: 73: Lcd_Cmd(0x02);
  1630  000BA6  0E02               	movlw	2
  1631  000BA8  EC64  F008         	call	_Lcd_Cmd
  1632                           
  1633                           ;lcd.h: 74: Lcd_Cmd(0x08);
  1634  000BAC  0E08               	movlw	8
  1635  000BAE  EC64  F008         	call	_Lcd_Cmd
  1636                           
  1637                           ;lcd.h: 75: Lcd_Cmd(0x00);
  1638  000BB2  0E00               	movlw	0
  1639  000BB4  EC64  F008         	call	_Lcd_Cmd
  1640                           
  1641                           ;lcd.h: 76: Lcd_Cmd(0x0C);
  1642  000BB8  0E0C               	movlw	12
  1643  000BBA  EC64  F008         	call	_Lcd_Cmd
  1644                           
  1645                           ;lcd.h: 77: Lcd_Cmd(0x00);
  1646  000BBE  0E00               	movlw	0
  1647  000BC0  EC64  F008         	call	_Lcd_Cmd
  1648                           
  1649                           ;lcd.h: 78: Lcd_Cmd(0x06);
  1650  000BC4  0E06               	movlw	6
  1651  000BC6  EC64  F008         	call	_Lcd_Cmd
  1652  000BCA  0012               	return		;funcret
  1653  000BCC                     __end_of_Lcd_Init:
  1654                           	opt callstack 0
  1655                           
  1656 ;; *************** function _Lcd_Clear *****************
  1657 ;; Defined at:
  1658 ;;		line 35 in file "lcd.h"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;		None
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;		None
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  1    wreg      void 
  1665 ;; Registers used:
  1666 ;;		wreg, status,2, cstack
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1672 ;;      Params:         0       0       0       0       0       0       0       0       0
  1673 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1674 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1675 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1676 ;;Total ram usage:        0 bytes
  1677 ;; Hardware stack levels used:    1
  1678 ;; Hardware stack levels required when called:    7
  1679 ;; This function calls:
  1680 ;;		_Lcd_Cmd
  1681 ;; This function is called by:
  1682 ;;		_main
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686                           	psect	text11
  1687  00111C                     __ptext11:
  1688                           	opt callstack 0
  1689  00111C                     _Lcd_Clear:
  1690                           	opt callstack 23
  1691                           
  1692                           ;lcd.h: 37: Lcd_Cmd(0);
  1693                           
  1694                           ;incstack = 0
  1695  00111C  0E00               	movlw	0
  1696  00111E  EC64  F008         	call	_Lcd_Cmd
  1697                           
  1698                           ;lcd.h: 38: Lcd_Cmd(1);
  1699  001122  0E01               	movlw	1
  1700  001124  EC64  F008         	call	_Lcd_Cmd
  1701  001128  0012               	return		;funcret
  1702  00112A                     __end_of_Lcd_Clear:
  1703                           	opt callstack 0
  1704                           
  1705 ;; *************** function _Lcd_Cmd *****************
  1706 ;; Defined at:
  1707 ;;		line 26 in file "lcd.h"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;  a               1    wreg     unsigned char 
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;  a               1   38[COMRAM] unsigned char 
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  1    wreg      void 
  1714 ;; Registers used:
  1715 ;;		wreg, status,2, cstack
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1721 ;;      Params:         0       0       0       0       0       0       0       0       0
  1722 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1723 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1724 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1725 ;;Total ram usage:        2 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    6
  1728 ;; This function calls:
  1729 ;;		_Lcd_Port
  1730 ;; This function is called by:
  1731 ;;		_Lcd_Clear
  1732 ;;		_Lcd_Set_Cursor
  1733 ;;		_Lcd_Init
  1734 ;;		_Lcd_Shift_Right
  1735 ;;		_Lcd_Shift_Left
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text12
  1740  0010C8                     __ptext12:
  1741                           	opt callstack 0
  1742  0010C8                     _Lcd_Cmd:
  1743                           	opt callstack 22
  1744                           
  1745                           ;incstack = 0
  1746                           ;Lcd_Cmd@a stored from wreg
  1747  0010C8  6E27               	movwf	Lcd_Cmd@a,c
  1748                           
  1749                           ;lcd.h: 28: PORTDbits.RD2 = 0;
  1750  0010CA  9483               	bcf	3971,2,c	;volatile
  1751                           
  1752                           ;lcd.h: 29: Lcd_Port(a);
  1753  0010CC  5027               	movf	Lcd_Cmd@a,w,c
  1754  0010CE  ECFD  F007         	call	_Lcd_Port
  1755                           
  1756                           ;lcd.h: 30: PORTDbits.RD3 = 1;
  1757  0010D2  8683               	bsf	3971,3,c	;volatile
  1758                           
  1759                           ;lcd.h: 31: _delay((unsigned long)((4)*(16000000/4000.0)));
  1760  0010D4  0E15               	movlw	21
  1761  0010D6  6E26               	movwf	??_Lcd_Cmd& (0+255),c
  1762  0010D8  0EC6               	movlw	198
  1763  0010DA                     u1097:
  1764  0010DA  2EE8               	decfsz	wreg,f,c
  1765  0010DC  D7FE               	bra	u1097
  1766  0010DE  2E26               	decfsz	??_Lcd_Cmd& (0+255),f,c
  1767  0010E0  D7FC               	bra	u1097
  1768  0010E2  D000               	nop2	
  1769                           
  1770                           ;lcd.h: 32: PORTDbits.RD3 = 0;
  1771  0010E4  9683               	bcf	3971,3,c	;volatile
  1772  0010E6  0012               	return		;funcret
  1773  0010E8                     __end_of_Lcd_Cmd:
  1774                           	opt callstack 0
  1775                           
  1776 ;; *************** function _Lcd_Port *****************
  1777 ;; Defined at:
  1778 ;;		line 4 in file "lcd.h"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  a               1    wreg     unsigned char 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  a               1   36[COMRAM] unsigned char 
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  1    wreg      void 
  1785 ;; Registers used:
  1786 ;;		wreg
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1792 ;;      Params:         0       0       0       0       0       0       0       0       0
  1793 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1794 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1795 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1796 ;;Total ram usage:        1 bytes
  1797 ;; Hardware stack levels used:    1
  1798 ;; Hardware stack levels required when called:    5
  1799 ;; This function calls:
  1800 ;;		Nothing
  1801 ;; This function is called by:
  1802 ;;		_Lcd_Cmd
  1803 ;;		_Lcd_Init
  1804 ;;		_Lcd_Write_Char
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           	psect	text13
  1809  000FFA                     __ptext13:
  1810                           	opt callstack 0
  1811  000FFA                     _Lcd_Port:
  1812                           	opt callstack 22
  1813                           
  1814                           ;incstack = 0
  1815                           ;Lcd_Port@a stored from wreg
  1816  000FFA  6E25               	movwf	Lcd_Port@a,c
  1817                           
  1818                           ;lcd.h: 6: if(a & 1)
  1819  000FFC  A025               	btfss	Lcd_Port@a,0,c
  1820  000FFE  D002               	goto	l33
  1821                           
  1822                           ;lcd.h: 7: PORTDbits.RD4 = 1;
  1823  001000  8883               	bsf	3971,4,c	;volatile
  1824  001002  D001               	goto	l1377
  1825  001004                     l33:
  1826                           
  1827                           ;lcd.h: 8: else;lcd.h: 9: PORTDbits.RD4 = 0;
  1828  001004  9883               	bcf	3971,4,c	;volatile
  1829  001006                     l1377:
  1830                           
  1831                           ;lcd.h: 11: if(a & 2)
  1832  001006  A225               	btfss	Lcd_Port@a,1,c
  1833  001008  D002               	goto	l35
  1834                           
  1835                           ;lcd.h: 12: PORTDbits.RD5 = 1;
  1836  00100A  8A83               	bsf	3971,5,c	;volatile
  1837  00100C  D001               	goto	l1381
  1838  00100E                     l35:
  1839                           
  1840                           ;lcd.h: 13: else;lcd.h: 14: PORTDbits.RD5 = 0;
  1841  00100E  9A83               	bcf	3971,5,c	;volatile
  1842  001010                     l1381:
  1843                           
  1844                           ;lcd.h: 16: if(a & 4)
  1845  001010  A425               	btfss	Lcd_Port@a,2,c
  1846  001012  D002               	goto	l37
  1847                           
  1848                           ;lcd.h: 17: PORTDbits.RD6 = 1;
  1849  001014  8C83               	bsf	3971,6,c	;volatile
  1850  001016  D001               	goto	l1385
  1851  001018                     l37:
  1852                           
  1853                           ;lcd.h: 18: else;lcd.h: 19: PORTDbits.RD6 = 0;
  1854  001018  9C83               	bcf	3971,6,c	;volatile
  1855  00101A                     l1385:
  1856                           
  1857                           ;lcd.h: 21: if(a & 8)
  1858  00101A  A625               	btfss	Lcd_Port@a,3,c
  1859  00101C  D002               	goto	l39
  1860                           
  1861                           ;lcd.h: 22: PORTDbits.RD7 = 1;
  1862  00101E  8E83               	bsf	3971,7,c	;volatile
  1863  001020  0012               	return	
  1864  001022                     l39:
  1865                           
  1866                           ;lcd.h: 23: else;lcd.h: 24: PORTDbits.RD7 = 0;
  1867  001022  9E83               	bcf	3971,7,c	;volatile
  1868  001024  0012               	return		;funcret
  1869  001026                     __end_of_Lcd_Port:
  1870                           	opt callstack 0
  1871                           
  1872 ;; *************** function _InitInterruptRB *****************
  1873 ;; Defined at:
  1874 ;;		line 16 in file "B_interrupt.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;		None
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;		None
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  1    wreg      void 
  1881 ;; Registers used:
  1882 ;;		wreg, status,2
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1888 ;;      Params:         0       0       0       0       0       0       0       0       0
  1889 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1890 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1891 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1892 ;;Total ram usage:        0 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; Hardware stack levels required when called:    5
  1895 ;; This function calls:
  1896 ;;		Nothing
  1897 ;; This function is called by:
  1898 ;;		_main
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           	psect	text14
  1903  001108                     __ptext14:
  1904                           	opt callstack 0
  1905  001108                     _InitInterruptRB:
  1906                           	opt callstack 25
  1907                           
  1908                           ;B_interrupt.c: 19: ADCON1bits.PCFG = 0x0F;
  1909                           
  1910                           ;incstack = 0
  1911  001108  0E0F               	movlw	15
  1912  00110A  12C1               	iorwf	4033,f,c	;volatile
  1913                           
  1914                           ;B_interrupt.c: 20: TRISB=0xFF;
  1915  00110C  6893               	setf	3987,c	;volatile
  1916                           
  1917                           ;B_interrupt.c: 21: LATB=0xFF;
  1918  00110E  688A               	setf	3978,c	;volatile
  1919                           
  1920                           ;B_interrupt.c: 22: INTCONbits.GIE=1;
  1921  001110  8EF2               	bsf	4082,7,c	;volatile
  1922                           
  1923                           ;B_interrupt.c: 27: INTCON2bits.RBPU=0;
  1924  001112  9EF1               	bcf	4081,7,c	;volatile
  1925                           
  1926                           ;B_interrupt.c: 31: INTCON2bits.INTEDG1=1;
  1927  001114  8AF1               	bsf	4081,5,c	;volatile
  1928                           
  1929                           ;B_interrupt.c: 34: INTCON3bits.INT1E=1;
  1930  001116  86F0               	bsf	4080,3,c	;volatile
  1931                           
  1932                           ;B_interrupt.c: 36: INTCON3bits.INT1IF=0;
  1933  001118  90F0               	bcf	4080,0,c	;volatile
  1934  00111A  0012               	return		;funcret
  1935  00111C                     __end_of_InitInterruptRB:
  1936                           	opt callstack 0
  1937                           
  1938 ;; *************** function _InitALL *****************
  1939 ;; Defined at:
  1940 ;;		line 24 in file "main.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;		None
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;		None
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  1    wreg      void 
  1947 ;; Registers used:
  1948 ;;		wreg, status,2
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1954 ;;      Params:         0       0       0       0       0       0       0       0       0
  1955 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1956 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1957 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1958 ;;Total ram usage:        0 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; Hardware stack levels required when called:    5
  1961 ;; This function calls:
  1962 ;;		Nothing
  1963 ;; This function is called by:
  1964 ;;		_main
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           	psect	text15
  1969  001026                     __ptext15:
  1970                           	opt callstack 0
  1971  001026                     _InitALL:
  1972                           	opt callstack 25
  1973                           
  1974                           ;main.c: 26: TRISA=0x00;
  1975                           
  1976                           ;incstack = 0
  1977  001026  0E00               	movlw	0
  1978  001028  6E92               	movwf	3986,c	;volatile
  1979                           
  1980                           ;main.c: 27: LATA=0x0;
  1981  00102A  0E00               	movlw	0
  1982  00102C  6E89               	movwf	3977,c	;volatile
  1983                           
  1984                           ;main.c: 28: b=0;
  1985  00102E  0E00               	movlw	0
  1986  001030  6E38               	movwf	_b+1,c
  1987  001032  0E00               	movlw	0
  1988  001034  6E37               	movwf	_b,c
  1989                           
  1990                           ;main.c: 29: Counter=0;
  1991  001036  0E00               	movlw	0
  1992  001038  6E3A               	movwf	_Counter+1,c
  1993  00103A  0E00               	movlw	0
  1994  00103C  6E39               	movwf	_Counter,c
  1995                           
  1996                           ;main.c: 30: delay=0;
  1997  00103E  0E00               	movlw	0
  1998  001040  6E36               	movwf	_delay+1,c
  1999  001042  0E00               	movlw	0
  2000  001044  6E35               	movwf	_delay,c
  2001                           
  2002                           ;main.c: 31: flagEntry=0;
  2003  001046  0E00               	movlw	0
  2004  001048  0100               	movlb	0	; () banked
  2005  00104A  6F6F               	movwf	(_flagEntry+1)& (0+255),b
  2006  00104C  0E00               	movlw	0
  2007  00104E  6F6E               	movwf	_flagEntry& (0+255),b
  2008                           
  2009                           ; BSR set to: 0
  2010  001050  0012               	return		;funcret
  2011  001052                     __end_of_InitALL:
  2012                           	opt callstack 0
  2013                           
  2014 ;; *************** function _interruptRB *****************
  2015 ;; Defined at:
  2016 ;;		line 97 in file "main.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;		None
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;		None
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      void 
  2023 ;; Registers used:
  2024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2030 ;;      Params:         0       0       0       0       0       0       0       0       0
  2031 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2032 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2033 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2034 ;;Total ram usage:        8 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; Hardware stack levels required when called:    4
  2037 ;; This function calls:
  2038 ;;		i2_Lcd_Set_Cursor
  2039 ;;		i2_Lcd_Write_String
  2040 ;;		i2_transform
  2041 ;; This function is called by:
  2042 ;;		Interrupt level 2
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	intcode
  2047  000008                     __pintcode:
  2048                           	opt callstack 0
  2049  000008                     _interruptRB:
  2050                           	opt callstack 22
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;incstack = 0
  2054  000008  823B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2055  00000A  EDAC  F004         	call	int_func,f	;refresh shadow registers
  2056                           
  2057                           	psect	intcode_body
  2058  000958                     __pintcode_body:
  2059                           	opt callstack 22
  2060  000958                     int_func:
  2061                           	opt callstack 22
  2062  000958  0006               	pop		; remove dummy address from shadow register refresh
  2063  00095A  CFD9 F01F          	movff	fsr2l,??_interruptRB+2
  2064  00095E  CFDA F020          	movff	fsr2h,??_interruptRB+3
  2065  000962  CFF6 F021          	movff	tblptrl,??_interruptRB+4
  2066  000966  CFF7 F022          	movff	tblptrh,??_interruptRB+5
  2067  00096A  CFF8 F023          	movff	tblptru,??_interruptRB+6
  2068  00096E  CFF5 F024          	movff	tablat,??_interruptRB+7
  2069                           
  2070                           ;main.c: 99: if(TMR0IE && TMR0IF){
  2071  000972  BAF2               	btfsc	4082,5,c	;volatile
  2072  000974  A4F2               	btfss	4082,2,c	;volatile
  2073  000976  D037               	goto	i2l1841
  2074                           
  2075                           ;main.c: 100: if(delay >= 100){
  2076  000978  BE36               	btfsc	_delay+1,7,c
  2077  00097A  D02E               	goto	i2l1835
  2078  00097C  5036               	movf	_delay+1,w,c
  2079  00097E  E104               	bnz	i2u92_40
  2080  000980  0E64               	movlw	100
  2081  000982  5C35               	subwf	_delay,w,c
  2082  000984  A0D8               	btfss	status,0,c
  2083  000986  D028               	goto	i2l1835
  2084  000988                     i2u92_40:
  2085                           
  2086                           ;main.c: 102: INTCONbits.TMR0IE = 0;
  2087  000988  9AF2               	bcf	4082,5,c	;volatile
  2088                           
  2089                           ;main.c: 103: INTCON3bits.INT1E = 0;
  2090  00098A  96F0               	bcf	4080,3,c	;volatile
  2091                           
  2092                           ;main.c: 104: INTCON3bits.INT1IF = 0;
  2093  00098C  90F0               	bcf	4080,0,c	;volatile
  2094                           
  2095                           ;main.c: 105: Lcd_Set_Cursor(1,1);
  2096  00098E  0E01               	movlw	1
  2097  000990  6E04               	movwf	i2Lcd_Set_Cursor@b,c
  2098  000992  0E01               	movlw	1
  2099  000994  ECFA  F006         	call	i2_Lcd_Set_Cursor
  2100                           
  2101                           ;main.c: 106: Lcd_Write_String("RESULTADOS!!!!!");
  2102  000998  0E01               	movlw	low STR_5
  2103  00099A  6E05               	movwf	i2Lcd_Write_String@a,c
  2104  00099C  0E08               	movlw	high STR_5
  2105  00099E  6E06               	movwf	i2Lcd_Write_String@a+1,c
  2106  0009A0  EC1F  F006         	call	i2_Lcd_Write_String	;wreg free
  2107                           
  2108                           ;main.c: 108: transform(Counter);
  2109  0009A4  C039  F019         	movff	_Counter,i2transform@value
  2110  0009A8  C03A  F01A         	movff	_Counter+1,i2transform@value+1
  2111  0009AC  EC22  F007         	call	i2_transform	;wreg free
  2112                           
  2113                           ;main.c: 110: _delay((unsigned long)((3000)*(16000000/4000.0)));
  2114  0009B0  0E3D               	movlw	61
  2115  0009B2  6E1E               	movwf	(??_interruptRB+1)& (0+255),c
  2116  0009B4  0EE1               	movlw	225
  2117  0009B6  6E1D               	movwf	??_interruptRB& (0+255),c
  2118  0009B8  0E40               	movlw	64
  2119  0009BA                     i2u110_47:
  2120  0009BA  2EE8               	decfsz	wreg,f,c
  2121  0009BC  D7FE               	bra	i2u110_47
  2122  0009BE  2E1D               	decfsz	??_interruptRB& (0+255),f,c
  2123  0009C0  D7FC               	bra	i2u110_47
  2124  0009C2  2E1E               	decfsz	(??_interruptRB+1)& (0+255),f,c
  2125  0009C4  D7FA               	bra	i2u110_47
  2126                           
  2127                           ;main.c: 111: flagEntry=0;
  2128  0009C6  0E00               	movlw	0
  2129  0009C8  0100               	movlb	0	; () banked
  2130  0009CA  6F6F               	movwf	(_flagEntry+1)& (0+255),b
  2131  0009CC  0E00               	movlw	0
  2132  0009CE  6F6E               	movwf	_flagEntry& (0+255),b
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;main.c: 112: Counter=0;
  2136  0009D0  0E00               	movlw	0
  2137  0009D2  6E3A               	movwf	_Counter+1,c
  2138  0009D4  0E00               	movlw	0
  2139  0009D6  6E39               	movwf	_Counter,c
  2140  0009D8                     i2l1835:
  2141                           
  2142                           ;main.c: 113: };main.c: 114: delay++;
  2143  0009D8  4A35               	infsnz	_delay,f,c
  2144  0009DA  2A36               	incf	_delay+1,f,c
  2145                           
  2146                           ;main.c: 115: INTCONbits.TMR0IF=0;
  2147  0009DC  94F2               	bcf	4082,2,c	;volatile
  2148                           
  2149                           ;main.c: 116: TMR0 = 0xEC77;
  2150  0009DE  0EEC               	movlw	236
  2151  0009E0  6ED7               	movwf	4055,c	;volatile
  2152  0009E2  0E77               	movlw	119
  2153  0009E4  6ED6               	movwf	4054,c	;volatile
  2154  0009E6                     i2l1841:
  2155                           
  2156                           ;main.c: 117: };main.c: 121: if(INT1E && INT1IF){
  2157  0009E6  B6F0               	btfsc	4080,3,c	;volatile
  2158  0009E8  A0F0               	btfss	4080,0,c	;volatile
  2159  0009EA  D003               	goto	i2l1849
  2160                           
  2161                           ;main.c: 123: Counter++;
  2162  0009EC  4A39               	infsnz	_Counter,f,c
  2163  0009EE  2A3A               	incf	_Counter+1,f,c
  2164                           
  2165                           ;main.c: 124: INTCON3bits.INT1IF=0;
  2166  0009F0  90F0               	bcf	4080,0,c	;volatile
  2167  0009F2                     i2l1849:
  2168                           
  2169                           ;main.c: 125: };main.c: 126: INTCONbits.RBIF=0;
  2170  0009F2  90F2               	bcf	4082,0,c	;volatile
  2171  0009F4  C024  FFF5         	movff	??_interruptRB+7,tablat
  2172  0009F8  C023  FFF8         	movff	??_interruptRB+6,tblptru
  2173  0009FC  C022  FFF7         	movff	??_interruptRB+5,tblptrh
  2174  000A00  C021  FFF6         	movff	??_interruptRB+4,tblptrl
  2175  000A04  C020  FFDA         	movff	??_interruptRB+3,fsr2h
  2176  000A08  C01F  FFD9         	movff	??_interruptRB+2,fsr2l
  2177  000A0C  923B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2178  000A0E  0011               	retfie		f
  2179  000A10                     __end_of_interruptRB:
  2180                           	opt callstack 0
  2181                           
  2182 ;; *************** function i2_transform *****************
  2183 ;; Defined at:
  2184 ;;		line 33 in file "main.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;  value           2   24[COMRAM] int 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;		None
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      void 
  2191 ;; Registers used:
  2192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2198 ;;      Params:         2       0       0       0       0       0       0       0       0
  2199 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2200 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2201 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2202 ;;Total ram usage:        4 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:    3
  2205 ;; This function calls:
  2206 ;;		i2_Lcd_Set_Cursor
  2207 ;;		i2_Lcd_Write_String
  2208 ;;		i2_itoa
  2209 ;; This function is called by:
  2210 ;;		_interruptRB
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           	psect	text17
  2215  000E44                     __ptext17:
  2216                           	opt callstack 0
  2217  000E44                     i2_transform:
  2218                           	opt callstack 22
  2219                           
  2220                           ;main.c: 35: itoa(Show, value, 10);
  2221                           
  2222                           ;incstack = 0
  2223  000E44  0E72               	movlw	low _Show
  2224  000E46  6E11               	movwf	i2itoa@buf,c
  2225  000E48  0E00               	movlw	high _Show
  2226  000E4A  6E12               	movwf	i2itoa@buf+1,c
  2227  000E4C  C019  F013         	movff	i2transform@value,i2itoa@val
  2228  000E50  C01A  F014         	movff	i2transform@value+1,i2itoa@val+1
  2229  000E54  0E00               	movlw	0
  2230  000E56  6E16               	movwf	i2itoa@base+1,c
  2231  000E58  0E0A               	movlw	10
  2232  000E5A  6E15               	movwf	i2itoa@base,c
  2233  000E5C  ECA8  F007         	call	i2_itoa	;wreg free
  2234                           
  2235                           ;main.c: 36: Lcd_Set_Cursor(2,7);
  2236  000E60  0E07               	movlw	7
  2237  000E62  6E04               	movwf	i2Lcd_Set_Cursor@b,c
  2238  000E64  0E02               	movlw	2
  2239  000E66  ECFA  F006         	call	i2_Lcd_Set_Cursor
  2240                           
  2241                           ;main.c: 37: Lcd_Write_String(Show);
  2242  000E6A  0E72               	movlw	low _Show
  2243  000E6C  6E05               	movwf	i2Lcd_Write_String@a,c
  2244  000E6E  0E00               	movlw	high _Show
  2245  000E70  6E06               	movwf	i2Lcd_Write_String@a+1,c
  2246  000E72  EC1F  F006         	call	i2_Lcd_Write_String	;wreg free
  2247                           
  2248                           ;main.c: 38: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2249  000E76  0E15               	movlw	21
  2250  000E78  6E1C               	movwf	(??i2_transform+1)& (0+255),c
  2251  000E7A  0E4B               	movlw	75
  2252  000E7C  6E1B               	movwf	??i2_transform& (0+255),c
  2253  000E7E  0EBE               	movlw	190
  2254  000E80                     i2u111_47:
  2255  000E80  2EE8               	decfsz	wreg,f,c
  2256  000E82  D7FE               	bra	i2u111_47
  2257  000E84  2E1B               	decfsz	??i2_transform& (0+255),f,c
  2258  000E86  D7FC               	bra	i2u111_47
  2259  000E88  2E1C               	decfsz	(??i2_transform+1)& (0+255),f,c
  2260  000E8A  D7FA               	bra	i2u111_47
  2261  000E8C  D000               	nop2	
  2262  000E8E  0012               	return		;funcret
  2263  000E90                     __end_ofi2_transform:
  2264                           	opt callstack 0
  2265                           
  2266 ;; *************** function i2_itoa *****************
  2267 ;; Defined at:
  2268 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  buf             2   16[COMRAM] PTR unsigned char 
  2271 ;;		 -> Show(3), 
  2272 ;;  val             2   18[COMRAM] int 
  2273 ;;  base            2   20[COMRAM] int 
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;  itoa            2    0        PTR unsigned char 
  2276 ;;		 -> Show(3), 
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  2   16[COMRAM] PTR unsigned char 
  2279 ;; Registers used:
  2280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2286 ;;      Params:         6       0       0       0       0       0       0       0       0
  2287 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2288 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2289 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2290 ;;Total ram usage:        8 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    2
  2293 ;; This function calls:
  2294 ;;		i2_utoa
  2295 ;; This function is called by:
  2296 ;;		i2_transform
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text18
  2301  000F50                     __ptext18:
  2302                           	opt callstack 0
  2303  000F50                     i2_itoa:
  2304                           	opt callstack 22
  2305                           
  2306                           ;incstack = 0
  2307  000F50  AE14               	btfss	i2itoa@val+1,7,c
  2308  000F52  D00C               	goto	i2l1669
  2309  000F54  C011  FFD9         	movff	i2itoa@buf,fsr2l
  2310  000F58  C012  FFDA         	movff	i2itoa@buf+1,fsr2h
  2311  000F5C  0E2D               	movlw	45
  2312  000F5E  6EDF               	movwf	indf2,c
  2313  000F60  4A11               	infsnz	i2itoa@buf,f,c
  2314  000F62  2A12               	incf	i2itoa@buf+1,f,c
  2315  000F64  6C13               	negf	i2itoa@val,c
  2316  000F66  1E14               	comf	i2itoa@val+1,f,c
  2317  000F68  B0D8               	btfsc	status,0,c
  2318  000F6A  2A14               	incf	i2itoa@val+1,f,c
  2319  000F6C                     i2l1669:
  2320  000F6C  C011  F008         	movff	i2itoa@buf,i2utoa@buf
  2321  000F70  C012  F009         	movff	i2itoa@buf+1,i2utoa@buf+1
  2322  000F74  C013  F00A         	movff	i2itoa@val,i2utoa@val
  2323  000F78  C014  F00B         	movff	i2itoa@val+1,i2utoa@val+1
  2324  000F7C  C015  F00C         	movff	i2itoa@base,i2utoa@base
  2325  000F80  C016  F00D         	movff	i2itoa@base+1,i2utoa@base+1
  2326  000F84  EC5A  F005         	call	i2_utoa	;wreg free
  2327  000F88  0012               	return		;funcret
  2328  000F8A                     __end_ofi2_itoa:
  2329                           	opt callstack 0
  2330                           
  2331 ;; *************** function i2_utoa *****************
  2332 ;; Defined at:
  2333 ;;		line 17 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/itoa.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;  buf             2    7[COMRAM] PTR unsigned char 
  2336 ;;		 -> Show(3), 
  2337 ;;  val             2    9[COMRAM] unsigned int 
  2338 ;;  base            2   11[COMRAM] int 
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;  utoa            2   13[COMRAM] unsigned int 
  2341 ;;  utoa            1   15[COMRAM] unsigned char 
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  2    7[COMRAM] PTR unsigned char 
  2344 ;; Registers used:
  2345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2351 ;;      Params:         6       0       0       0       0       0       0       0       0
  2352 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2353 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2354 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2355 ;;Total ram usage:        9 bytes
  2356 ;; Hardware stack levels used:    1
  2357 ;; Hardware stack levels required when called:    1
  2358 ;; This function calls:
  2359 ;;		i2___lwdiv
  2360 ;;		i2___lwmod
  2361 ;; This function is called by:
  2362 ;;		i2_itoa
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           	psect	text19
  2367  000AB4                     __ptext19:
  2368                           	opt callstack 0
  2369  000AB4                     i2_utoa:
  2370                           	opt callstack 22
  2371                           
  2372                           ;incstack = 0
  2373  000AB4  C00A  F00E         	movff	i2utoa@val,i2utoa@v
  2374  000AB8  C00B  F00F         	movff	i2utoa@val+1,i2utoa@v+1
  2375  000ABC                     i2l1573:
  2376  000ABC  C00E  F001         	movff	i2utoa@v,i2___lwdiv@dividend
  2377  000AC0  C00F  F002         	movff	i2utoa@v+1,i2___lwdiv@dividend+1
  2378  000AC4  C00C  F003         	movff	i2utoa@base,i2___lwdiv@divisor
  2379  000AC8  C00D  F004         	movff	i2utoa@base+1,i2___lwdiv@divisor+1
  2380  000ACC  EC81  F006         	call	i2___lwdiv	;wreg free
  2381  000AD0  C001  F00E         	movff	?i2___lwdiv,i2utoa@v
  2382  000AD4  C002  F00F         	movff	?i2___lwdiv+1,i2utoa@v+1
  2383  000AD8  4A08               	infsnz	i2utoa@buf,f,c
  2384  000ADA  2A09               	incf	i2utoa@buf+1,f,c
  2385  000ADC  500E               	movf	i2utoa@v,w,c
  2386  000ADE  100F               	iorwf	i2utoa@v+1,w,c
  2387  000AE0  A4D8               	btfss	status,2,c
  2388  000AE2  D7EC               	goto	i2l1573
  2389  000AE4  C008  FFD9         	movff	i2utoa@buf,fsr2l
  2390  000AE8  C009  FFDA         	movff	i2utoa@buf+1,fsr2h
  2391  000AEC  0E00               	movlw	0
  2392  000AEE  6EDF               	movwf	indf2,c
  2393  000AF0  0608               	decf	i2utoa@buf,f,c
  2394  000AF2  A0D8               	btfss	status,0,c
  2395  000AF4  0609               	decf	i2utoa@buf+1,f,c
  2396  000AF6                     i2l1583:
  2397  000AF6  C00A  F001         	movff	i2utoa@val,i2___lwmod@dividend
  2398  000AFA  C00B  F002         	movff	i2utoa@val+1,i2___lwmod@dividend+1
  2399  000AFE  C00C  F003         	movff	i2utoa@base,i2___lwmod@divisor
  2400  000B02  C00D  F004         	movff	i2utoa@base+1,i2___lwmod@divisor+1
  2401  000B06  EC69  F007         	call	i2___lwmod	;wreg free
  2402  000B0A  5001               	movf	?i2___lwmod,w,c
  2403  000B0C  6E10               	movwf	i2utoa@c,c
  2404  000B0E  C00A  F001         	movff	i2utoa@val,i2___lwdiv@dividend
  2405  000B12  C00B  F002         	movff	i2utoa@val+1,i2___lwdiv@dividend+1
  2406  000B16  C00C  F003         	movff	i2utoa@base,i2___lwdiv@divisor
  2407  000B1A  C00D  F004         	movff	i2utoa@base+1,i2___lwdiv@divisor+1
  2408  000B1E  EC81  F006         	call	i2___lwdiv	;wreg free
  2409  000B22  C001  F00A         	movff	?i2___lwdiv,i2utoa@val
  2410  000B26  C002  F00B         	movff	?i2___lwdiv+1,i2utoa@val+1
  2411  000B2A  0E09               	movlw	9
  2412  000B2C  6410               	cpfsgt	i2utoa@c,c
  2413  000B2E  D002               	goto	i2l807
  2414  000B30  0E07               	movlw	7
  2415  000B32  2610               	addwf	i2utoa@c,f,c
  2416  000B34                     i2l807:
  2417  000B34  0E30               	movlw	48
  2418  000B36  2610               	addwf	i2utoa@c,f,c
  2419  000B38  C008  FFD9         	movff	i2utoa@buf,fsr2l
  2420  000B3C  C009  FFDA         	movff	i2utoa@buf+1,fsr2h
  2421  000B40  C010  FFDF         	movff	i2utoa@c,indf2
  2422  000B44  0608               	decf	i2utoa@buf,f,c
  2423  000B46  A0D8               	btfss	status,0,c
  2424  000B48  0609               	decf	i2utoa@buf+1,f,c
  2425  000B4A  500A               	movf	i2utoa@val,w,c
  2426  000B4C  100B               	iorwf	i2utoa@val+1,w,c
  2427  000B4E  A4D8               	btfss	status,2,c
  2428  000B50  D7D2               	goto	i2l1583
  2429                           
  2430                           ;	Return value of i2_utoa is never used
  2431  000B52  4A08               	infsnz	i2utoa@buf,f,c
  2432  000B54  2A09               	incf	i2utoa@buf+1,f,c
  2433  000B56  0012               	return		;funcret
  2434  000B58                     __end_ofi2_utoa:
  2435                           	opt callstack 0
  2436                           
  2437 ;; *************** function i2___lwmod *****************
  2438 ;; Defined at:
  2439 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwmod.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  dividend        2    0[COMRAM] unsigned int 
  2442 ;;  divisor         2    2[COMRAM] unsigned int 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  __lwmod         1    4[COMRAM] unsigned char 
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  2    0[COMRAM] unsigned int 
  2447 ;; Registers used:
  2448 ;;		wreg, status,2, status,0
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2454 ;;      Params:         4       0       0       0       0       0       0       0       0
  2455 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2456 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2457 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2458 ;;Total ram usage:        5 bytes
  2459 ;; Hardware stack levels used:    1
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		i2_utoa
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text20
  2468  000ED2                     __ptext20:
  2469                           	opt callstack 0
  2470  000ED2                     i2___lwmod:
  2471                           	opt callstack 22
  2472                           
  2473                           ;incstack = 0
  2474  000ED2  5003               	movf	i2___lwmod@divisor,w,c
  2475  000ED4  1004               	iorwf	i2___lwmod@divisor+1,w,c
  2476  000ED6  B4D8               	btfsc	status,2,c
  2477  000ED8  D018               	goto	i2l625
  2478  000EDA  0E01               	movlw	1
  2479  000EDC  6E05               	movwf	i2___lwmod@counter,c
  2480  000EDE  D004               	goto	i2l1471
  2481  000EE0                     i2l1469:
  2482  000EE0  90D8               	bcf	status,0,c
  2483  000EE2  3603               	rlcf	i2___lwmod@divisor,f,c
  2484  000EE4  3604               	rlcf	i2___lwmod@divisor+1,f,c
  2485  000EE6  2A05               	incf	i2___lwmod@counter,f,c
  2486  000EE8                     i2l1471:
  2487  000EE8  AE04               	btfss	i2___lwmod@divisor+1,7,c
  2488  000EEA  D7FA               	goto	i2l1469
  2489  000EEC                     i2u66_40:
  2490  000EEC  5003               	movf	i2___lwmod@divisor,w,c
  2491  000EEE  5C01               	subwf	i2___lwmod@dividend,w,c
  2492  000EF0  5004               	movf	i2___lwmod@divisor+1,w,c
  2493  000EF2  5802               	subwfb	i2___lwmod@dividend+1,w,c
  2494  000EF4  A0D8               	btfss	status,0,c
  2495  000EF6  D004               	goto	i2l1477
  2496  000EF8  5003               	movf	i2___lwmod@divisor,w,c
  2497  000EFA  5E01               	subwf	i2___lwmod@dividend,f,c
  2498  000EFC  5004               	movf	i2___lwmod@divisor+1,w,c
  2499  000EFE  5A02               	subwfb	i2___lwmod@dividend+1,f,c
  2500  000F00                     i2l1477:
  2501  000F00  90D8               	bcf	status,0,c
  2502  000F02  3204               	rrcf	i2___lwmod@divisor+1,f,c
  2503  000F04  3203               	rrcf	i2___lwmod@divisor,f,c
  2504  000F06  2E05               	decfsz	i2___lwmod@counter,f,c
  2505  000F08  D7F1               	goto	i2u66_40
  2506  000F0A                     i2l625:
  2507  000F0A  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
  2508  000F0E  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  2509  000F12  0012               	return		;funcret
  2510  000F14                     __end_ofi2___lwmod:
  2511                           	opt callstack 0
  2512                           
  2513 ;; *************** function i2___lwdiv *****************
  2514 ;; Defined at:
  2515 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c90/common/lwdiv.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;  dividend        2    0[COMRAM] unsigned int 
  2518 ;;  divisor         2    2[COMRAM] unsigned int 
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  2521 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  2522 ;; Return value:  Size  Location     Type
  2523 ;;                  2    0[COMRAM] unsigned int 
  2524 ;; Registers used:
  2525 ;;		wreg, status,2, status,0
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2531 ;;      Params:         4       0       0       0       0       0       0       0       0
  2532 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2533 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2534 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2535 ;;Total ram usage:        7 bytes
  2536 ;; Hardware stack levels used:    1
  2537 ;; This function calls:
  2538 ;;		Nothing
  2539 ;; This function is called by:
  2540 ;;		i2_utoa
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text21
  2545  000D02                     __ptext21:
  2546                           	opt callstack 0
  2547  000D02                     i2___lwdiv:
  2548                           	opt callstack 22
  2549                           
  2550                           ;incstack = 0
  2551  000D02  0E00               	movlw	0
  2552  000D04  6E06               	movwf	i2___lwdiv@quotient+1,c
  2553  000D06  0E00               	movlw	0
  2554  000D08  6E05               	movwf	i2___lwdiv@quotient,c
  2555  000D0A  5003               	movf	i2___lwdiv@divisor,w,c
  2556  000D0C  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  2557  000D0E  B4D8               	btfsc	status,2,c
  2558  000D10  D01C               	goto	i2l615
  2559  000D12  0E01               	movlw	1
  2560  000D14  6E07               	movwf	i2___lwdiv@counter,c
  2561  000D16  D004               	goto	i2l1451
  2562  000D18                     i2l1449:
  2563  000D18  90D8               	bcf	status,0,c
  2564  000D1A  3603               	rlcf	i2___lwdiv@divisor,f,c
  2565  000D1C  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  2566  000D1E  2A07               	incf	i2___lwdiv@counter,f,c
  2567  000D20                     i2l1451:
  2568  000D20  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  2569  000D22  D7FA               	goto	i2l1449
  2570  000D24                     i2u63_40:
  2571  000D24  90D8               	bcf	status,0,c
  2572  000D26  3605               	rlcf	i2___lwdiv@quotient,f,c
  2573  000D28  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  2574  000D2A  5003               	movf	i2___lwdiv@divisor,w,c
  2575  000D2C  5C01               	subwf	i2___lwdiv@dividend,w,c
  2576  000D2E  5004               	movf	i2___lwdiv@divisor+1,w,c
  2577  000D30  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  2578  000D32  A0D8               	btfss	status,0,c
  2579  000D34  D005               	goto	i2l1461
  2580  000D36  5003               	movf	i2___lwdiv@divisor,w,c
  2581  000D38  5E01               	subwf	i2___lwdiv@dividend,f,c
  2582  000D3A  5004               	movf	i2___lwdiv@divisor+1,w,c
  2583  000D3C  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  2584  000D3E  8005               	bsf	i2___lwdiv@quotient,0,c
  2585  000D40                     i2l1461:
  2586  000D40  90D8               	bcf	status,0,c
  2587  000D42  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  2588  000D44  3203               	rrcf	i2___lwdiv@divisor,f,c
  2589  000D46  2E07               	decfsz	i2___lwdiv@counter,f,c
  2590  000D48  D7ED               	goto	i2u63_40
  2591  000D4A                     i2l615:
  2592  000D4A  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  2593  000D4E  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  2594  000D52  0012               	return		;funcret
  2595  000D54                     __end_ofi2___lwdiv:
  2596                           	opt callstack 0
  2597                           
  2598 ;; *************** function i2_Lcd_Write_String *****************
  2599 ;; Defined at:
  2600 ;;		line 97 in file "lcd.h"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  a               2    4[COMRAM] PTR unsigned char 
  2603 ;;		 -> STR_5(16), STR_4(9), STR_3(16), STR_2(15), 
  2604 ;;		 -> STR_1(13), Show(3), 
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;  Lcd_Write_St    2    8[COMRAM] int 
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  1    wreg      void 
  2609 ;; Registers used:
  2610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2616 ;;      Params:         2       0       0       0       0       0       0       0       0
  2617 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2618 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2619 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2620 ;;Total ram usage:        6 bytes
  2621 ;; Hardware stack levels used:    1
  2622 ;; Hardware stack levels required when called:    2
  2623 ;; This function calls:
  2624 ;;		i2_Lcd_Write_Char
  2625 ;; This function is called by:
  2626 ;;		_interruptRB
  2627 ;;		i2_transform
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           	psect	text22
  2632  000C3E                     __ptext22:
  2633                           	opt callstack 0
  2634  000C3E                     i2_Lcd_Write_String:
  2635                           	opt callstack 22
  2636                           
  2637                           ;lcd.h: 99: int i;;lcd.h: 100: for(i=0;a[i]!='\0';i++)
  2638                           
  2639                           ;incstack = 0
  2640  000C3E  0E00               	movlw	0
  2641  000C40  6E0A               	movwf	i2Lcd_Write_String@i+1,c
  2642  000C42  0E00               	movlw	0
  2643  000C44  6E09               	movwf	i2Lcd_Write_String@i,c
  2644  000C46  D01A               	goto	i2l1659
  2645  000C48                     i2l1655:
  2646                           
  2647                           ;lcd.h: 101: Lcd_Write_Char(a[i]);
  2648  000C48  5009               	movf	i2Lcd_Write_String@i,w,c
  2649  000C4A  2405               	addwf	i2Lcd_Write_String@a,w,c
  2650  000C4C  6E07               	movwf	??i2_Lcd_Write_String& (0+255),c
  2651  000C4E  500A               	movf	i2Lcd_Write_String@i+1,w,c
  2652  000C50  2006               	addwfc	i2Lcd_Write_String@a+1,w,c
  2653  000C52  6E08               	movwf	(??i2_Lcd_Write_String+1)& (0+255),c
  2654  000C54  C007  FFF6         	movff	??i2_Lcd_Write_String,tblptrl
  2655  000C58  C008  FFF7         	movff	??i2_Lcd_Write_String+1,tblptrh
  2656  000C5C  6AF8               	clrf	tblptru,c
  2657  000C5E  0E07               	movlw	(high __ramtop+-1)
  2658  000C60  64F7               	cpfsgt	tblptrh,c
  2659  000C62  D003               	bra	i2u82_47
  2660  000C64  0008               	tblrd		*
  2661  000C66  50F5               	movf	tablat,w,c
  2662  000C68  D005               	bra	i2u82_40
  2663  000C6A                     i2u82_47:
  2664  000C6A  CFF6 FFD9          	movff	tblptrl,fsr2l
  2665  000C6E  CFF7 FFDA          	movff	tblptrh,fsr2h
  2666  000C72  50DF               	movf	indf2,w,c
  2667  000C74                     i2u82_40:
  2668  000C74  ECE1  F007         	call	i2_Lcd_Write_Char
  2669  000C78  4A09               	infsnz	i2Lcd_Write_String@i,f,c
  2670  000C7A  2A0A               	incf	i2Lcd_Write_String@i+1,f,c
  2671  000C7C                     i2l1659:
  2672  000C7C  5009               	movf	i2Lcd_Write_String@i,w,c
  2673  000C7E  2405               	addwf	i2Lcd_Write_String@a,w,c
  2674  000C80  6E07               	movwf	??i2_Lcd_Write_String& (0+255),c
  2675  000C82  500A               	movf	i2Lcd_Write_String@i+1,w,c
  2676  000C84  2006               	addwfc	i2Lcd_Write_String@a+1,w,c
  2677  000C86  6E08               	movwf	(??i2_Lcd_Write_String+1)& (0+255),c
  2678  000C88  C007  FFF6         	movff	??i2_Lcd_Write_String,tblptrl
  2679  000C8C  C008  FFF7         	movff	??i2_Lcd_Write_String+1,tblptrh
  2680  000C90  6AF8               	clrf	tblptru,c
  2681  000C92  0E07               	movlw	(high __ramtop+-1)
  2682  000C94  64F7               	cpfsgt	tblptrh,c
  2683  000C96  D003               	bra	i2u83_47
  2684  000C98  0008               	tblrd		*
  2685  000C9A  50F5               	movf	tablat,w,c
  2686  000C9C  D005               	bra	i2u83_40
  2687  000C9E                     i2u83_47:
  2688  000C9E  CFF6 FFD9          	movff	tblptrl,fsr2l
  2689  000CA2  CFF7 FFDA          	movff	tblptrh,fsr2h
  2690  000CA6  50DF               	movf	indf2,w,c
  2691  000CA8                     i2u83_40:
  2692  000CA8  0900               	iorlw	0
  2693  000CAA  B4D8               	btfsc	status,2,c
  2694  000CAC  0012               	return	
  2695  000CAE  D7CC               	goto	i2l1655
  2696  000CB0                     __end_ofi2_Lcd_Write_String:
  2697                           	opt callstack 0
  2698                           
  2699 ;; *************** function i2_Lcd_Write_Char *****************
  2700 ;; Defined at:
  2701 ;;		line 81 in file "lcd.h"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  a               1    wreg     unsigned char 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;  a               1    3[COMRAM] unsigned char 
  2706 ;;  Lcd_Write_Ch    1    2[COMRAM] unsigned char 
  2707 ;;  Lcd_Write_Ch    1    1[COMRAM] unsigned char 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  1    wreg      void 
  2710 ;; Registers used:
  2711 ;;		wreg, status,2, status,0, cstack
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2717 ;;      Params:         0       0       0       0       0       0       0       0       0
  2718 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2719 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2720 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2721 ;;Total ram usage:        3 bytes
  2722 ;; Hardware stack levels used:    1
  2723 ;; Hardware stack levels required when called:    1
  2724 ;; This function calls:
  2725 ;;		i2_Lcd_Port
  2726 ;; This function is called by:
  2727 ;;		i2_Lcd_Write_String
  2728 ;; This function uses a non-reentrant model
  2729 ;;
  2730                           
  2731                           	psect	text23
  2732  000FC2                     __ptext23:
  2733                           	opt callstack 0
  2734  000FC2                     i2_Lcd_Write_Char:
  2735                           	opt callstack 22
  2736                           
  2737                           ;incstack = 0
  2738                           ;i2Lcd_Write_Char@a stored from wreg
  2739  000FC2  6E04               	movwf	i2Lcd_Write_Char@a,c
  2740                           
  2741                           ;lcd.h: 83: char temp,y;;lcd.h: 84: temp = a&0x0F;
  2742  000FC4  5004               	movf	i2Lcd_Write_Char@a,w,c
  2743  000FC6  0B0F               	andlw	15
  2744  000FC8  6E02               	movwf	i2Lcd_Write_Char@temp,c
  2745                           
  2746                           ;lcd.h: 85: y = a&0xF0;
  2747  000FCA  5004               	movf	i2Lcd_Write_Char@a,w,c
  2748  000FCC  0BF0               	andlw	240
  2749  000FCE  6E03               	movwf	i2Lcd_Write_Char@y,c
  2750                           
  2751                           ;lcd.h: 86: PORTDbits.RD2 = 1;
  2752  000FD0  8483               	bsf	3971,2,c	;volatile
  2753                           
  2754                           ;lcd.h: 87: Lcd_Port(y>>4);
  2755  000FD2  3803               	swapf	i2Lcd_Write_Char@y,w,c
  2756  000FD4  0B0F               	andlw	15
  2757  000FD6  EC29  F008         	call	i2_Lcd_Port
  2758                           
  2759                           ;lcd.h: 88: PORTDbits.RD3 = 1;
  2760  000FDA  8683               	bsf	3971,3,c	;volatile
  2761                           
  2762                           ;lcd.h: 89: _delay((unsigned long)((40)*(16000000/4000000.0)));
  2763  000FDC  0E35               	movlw	53
  2764  000FDE                     i2u112_47:
  2765  000FDE  2EE8               	decfsz	wreg,f,c
  2766  000FE0  D7FE               	bra	i2u112_47
  2767  000FE2  F000               	nop	
  2768                           
  2769                           ;lcd.h: 90: PORTDbits.RD3 = 0;
  2770  000FE4  9683               	bcf	3971,3,c	;volatile
  2771                           
  2772                           ;lcd.h: 91: Lcd_Port(temp);
  2773  000FE6  5002               	movf	i2Lcd_Write_Char@temp,w,c
  2774  000FE8  EC29  F008         	call	i2_Lcd_Port
  2775                           
  2776                           ;lcd.h: 92: PORTDbits.RD3 = 1;
  2777  000FEC  8683               	bsf	3971,3,c	;volatile
  2778                           
  2779                           ;lcd.h: 93: _delay((unsigned long)((40)*(16000000/4000000.0)));
  2780  000FEE  0E35               	movlw	53
  2781  000FF0                     i2u113_47:
  2782  000FF0  2EE8               	decfsz	wreg,f,c
  2783  000FF2  D7FE               	bra	i2u113_47
  2784  000FF4  F000               	nop	
  2785                           
  2786                           ;lcd.h: 94: PORTDbits.RD3 = 0;
  2787  000FF6  9683               	bcf	3971,3,c	;volatile
  2788  000FF8  0012               	return		;funcret
  2789  000FFA                     __end_ofi2_Lcd_Write_Char:
  2790                           	opt callstack 0
  2791                           
  2792 ;; *************** function i2_Lcd_Set_Cursor *****************
  2793 ;; Defined at:
  2794 ;;		line 41 in file "lcd.h"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  a               1    wreg     unsigned char 
  2797 ;;  b               1    3[COMRAM] unsigned char 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  a               1    4[COMRAM] unsigned char 
  2800 ;;  Lcd_Set_Curs    1    7[COMRAM] unsigned char 
  2801 ;;  Lcd_Set_Curs    1    6[COMRAM] unsigned char 
  2802 ;;  Lcd_Set_Curs    1    5[COMRAM] unsigned char 
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      void 
  2805 ;; Registers used:
  2806 ;;		wreg, status,2, status,0, cstack
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2812 ;;      Params:         1       0       0       0       0       0       0       0       0
  2813 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2814 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2815 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2816 ;;Total ram usage:        5 bytes
  2817 ;; Hardware stack levels used:    1
  2818 ;; Hardware stack levels required when called:    2
  2819 ;; This function calls:
  2820 ;;		i2_Lcd_Cmd
  2821 ;; This function is called by:
  2822 ;;		_interruptRB
  2823 ;;		i2_transform
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           	psect	text24
  2828  000DF4                     __ptext24:
  2829                           	opt callstack 0
  2830  000DF4                     i2_Lcd_Set_Cursor:
  2831                           	opt callstack 22
  2832                           
  2833                           ;incstack = 0
  2834                           ;i2Lcd_Set_Cursor@a stored from wreg
  2835  000DF4  6E05               	movwf	i2Lcd_Set_Cursor@a,c
  2836                           
  2837                           ;lcd.h: 43: char temp,z,y;;lcd.h: 44: if(a == 1)
  2838  000DF6  0405               	decf	i2Lcd_Set_Cursor@a,w,c
  2839  000DF8  A4D8               	btfss	status,2,c
  2840  000DFA  D010               	goto	i2l1645
  2841                           
  2842                           ;lcd.h: 45: {;lcd.h: 46: temp = 0x80 + b - 1;
  2843  000DFC  5004               	movf	i2Lcd_Set_Cursor@b,w,c
  2844  000DFE  0F7F               	addlw	127
  2845  000E00  6E08               	movwf	i2Lcd_Set_Cursor@temp,c
  2846                           
  2847                           ;lcd.h: 47: z = temp>>4;
  2848  000E02  3808               	swapf	i2Lcd_Set_Cursor@temp,w,c
  2849  000E04  0B0F               	andlw	15
  2850  000E06  6E06               	movwf	i2Lcd_Set_Cursor@z,c
  2851                           
  2852                           ;lcd.h: 48: y = temp & 0x0F;
  2853  000E08  5008               	movf	i2Lcd_Set_Cursor@temp,w,c
  2854  000E0A  0B0F               	andlw	15
  2855  000E0C  6E07               	movwf	i2Lcd_Set_Cursor@y,c
  2856                           
  2857                           ;lcd.h: 49: Lcd_Cmd(z);
  2858  000E0E  5006               	movf	i2Lcd_Set_Cursor@z,w,c
  2859  000E10  EC74  F008         	call	i2_Lcd_Cmd
  2860                           
  2861                           ;lcd.h: 50: Lcd_Cmd(y);
  2862  000E14  5007               	movf	i2Lcd_Set_Cursor@y,w,c
  2863  000E16  EC74  F008         	call	i2_Lcd_Cmd
  2864                           
  2865                           ;lcd.h: 51: }
  2866  000E1A  0012               	return	
  2867  000E1C                     i2l1645:
  2868                           
  2869                           ;lcd.h: 52: else if(a == 2)
  2870  000E1C  0E02               	movlw	2
  2871  000E1E  1805               	xorwf	i2Lcd_Set_Cursor@a,w,c
  2872  000E20  A4D8               	btfss	status,2,c
  2873  000E22  0012               	return	
  2874                           
  2875                           ;lcd.h: 53: {;lcd.h: 54: temp = 0xC0 + b - 1;
  2876  000E24  5004               	movf	i2Lcd_Set_Cursor@b,w,c
  2877  000E26  0FBF               	addlw	191
  2878  000E28  6E08               	movwf	i2Lcd_Set_Cursor@temp,c
  2879                           
  2880                           ;lcd.h: 55: z = temp>>4;
  2881  000E2A  3808               	swapf	i2Lcd_Set_Cursor@temp,w,c
  2882  000E2C  0B0F               	andlw	15
  2883  000E2E  6E06               	movwf	i2Lcd_Set_Cursor@z,c
  2884                           
  2885                           ;lcd.h: 56: y = temp & 0x0F;
  2886  000E30  5008               	movf	i2Lcd_Set_Cursor@temp,w,c
  2887  000E32  0B0F               	andlw	15
  2888  000E34  6E07               	movwf	i2Lcd_Set_Cursor@y,c
  2889                           
  2890                           ;lcd.h: 57: Lcd_Cmd(z);
  2891  000E36  5006               	movf	i2Lcd_Set_Cursor@z,w,c
  2892  000E38  EC74  F008         	call	i2_Lcd_Cmd
  2893                           
  2894                           ;lcd.h: 58: Lcd_Cmd(y);
  2895  000E3C  5007               	movf	i2Lcd_Set_Cursor@y,w,c
  2896  000E3E  EC74  F008         	call	i2_Lcd_Cmd
  2897  000E42  0012               	return		;funcret
  2898  000E44                     __end_ofi2_Lcd_Set_Cursor:
  2899                           	opt callstack 0
  2900                           
  2901 ;; *************** function i2_Lcd_Cmd *****************
  2902 ;; Defined at:
  2903 ;;		line 26 in file "lcd.h"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;  a               1    wreg     unsigned char 
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;  a               1    2[COMRAM] unsigned char 
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  1    wreg      void 
  2910 ;; Registers used:
  2911 ;;		wreg, status,2, cstack
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2917 ;;      Params:         0       0       0       0       0       0       0       0       0
  2918 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2919 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2920 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2921 ;;Total ram usage:        2 bytes
  2922 ;; Hardware stack levels used:    1
  2923 ;; Hardware stack levels required when called:    1
  2924 ;; This function calls:
  2925 ;;		i2_Lcd_Port
  2926 ;; This function is called by:
  2927 ;;		i2_Lcd_Set_Cursor
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           	psect	text25
  2932  0010E8                     __ptext25:
  2933                           	opt callstack 0
  2934  0010E8                     i2_Lcd_Cmd:
  2935                           	opt callstack 22
  2936                           
  2937                           ;incstack = 0
  2938                           ;i2Lcd_Cmd@a stored from wreg
  2939  0010E8  6E03               	movwf	i2Lcd_Cmd@a,c
  2940                           
  2941                           ;lcd.h: 28: PORTDbits.RD2 = 0;
  2942  0010EA  9483               	bcf	3971,2,c	;volatile
  2943                           
  2944                           ;lcd.h: 29: Lcd_Port(a);
  2945  0010EC  5003               	movf	i2Lcd_Cmd@a,w,c
  2946  0010EE  EC29  F008         	call	i2_Lcd_Port
  2947                           
  2948                           ;lcd.h: 30: PORTDbits.RD3 = 1;
  2949  0010F2  8683               	bsf	3971,3,c	;volatile
  2950                           
  2951                           ;lcd.h: 31: _delay((unsigned long)((4)*(16000000/4000.0)));
  2952  0010F4  0E15               	movlw	21
  2953  0010F6  6E02               	movwf	??i2_Lcd_Cmd& (0+255),c
  2954  0010F8  0EC6               	movlw	198
  2955  0010FA                     i2u114_47:
  2956  0010FA  2EE8               	decfsz	wreg,f,c
  2957  0010FC  D7FE               	bra	i2u114_47
  2958  0010FE  2E02               	decfsz	??i2_Lcd_Cmd& (0+255),f,c
  2959  001100  D7FC               	bra	i2u114_47
  2960  001102  D000               	nop2	
  2961                           
  2962                           ;lcd.h: 32: PORTDbits.RD3 = 0;
  2963  001104  9683               	bcf	3971,3,c	;volatile
  2964  001106  0012               	return		;funcret
  2965  001108                     __end_ofi2_Lcd_Cmd:
  2966                           	opt callstack 0
  2967                           
  2968 ;; *************** function i2_Lcd_Port *****************
  2969 ;; Defined at:
  2970 ;;		line 4 in file "lcd.h"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;  a               1    wreg     unsigned char 
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;  a               1    0[COMRAM] unsigned char 
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      void 
  2977 ;; Registers used:
  2978 ;;		wreg
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2984 ;;      Params:         0       0       0       0       0       0       0       0       0
  2985 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2986 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2987 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2988 ;;Total ram usage:        1 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; This function calls:
  2991 ;;		Nothing
  2992 ;; This function is called by:
  2993 ;;		i2_Lcd_Cmd
  2994 ;;		i2_Lcd_Write_Char
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text26
  2999  001052                     __ptext26:
  3000                           	opt callstack 0
  3001  001052                     i2_Lcd_Port:
  3002                           	opt callstack 22
  3003                           
  3004                           ;incstack = 0
  3005                           ;i2Lcd_Port@a stored from wreg
  3006  001052  6E01               	movwf	i2Lcd_Port@a,c
  3007                           
  3008                           ;lcd.h: 6: if(a & 1)
  3009  001054  A001               	btfss	i2Lcd_Port@a,0,c
  3010  001056  D002               	goto	i2l33
  3011                           
  3012                           ;lcd.h: 7: PORTDbits.RD4 = 1;
  3013  001058  8883               	bsf	3971,4,c	;volatile
  3014  00105A  D001               	goto	i2l1431
  3015  00105C                     i2l33:
  3016                           
  3017                           ;lcd.h: 8: else;lcd.h: 9: PORTDbits.RD4 = 0;
  3018  00105C  9883               	bcf	3971,4,c	;volatile
  3019  00105E                     i2l1431:
  3020                           
  3021                           ;lcd.h: 11: if(a & 2)
  3022  00105E  A201               	btfss	i2Lcd_Port@a,1,c
  3023  001060  D002               	goto	i2l35
  3024                           
  3025                           ;lcd.h: 12: PORTDbits.RD5 = 1;
  3026  001062  8A83               	bsf	3971,5,c	;volatile
  3027  001064  D001               	goto	i2l1435
  3028  001066                     i2l35:
  3029                           
  3030                           ;lcd.h: 13: else;lcd.h: 14: PORTDbits.RD5 = 0;
  3031  001066  9A83               	bcf	3971,5,c	;volatile
  3032  001068                     i2l1435:
  3033                           
  3034                           ;lcd.h: 16: if(a & 4)
  3035  001068  A401               	btfss	i2Lcd_Port@a,2,c
  3036  00106A  D002               	goto	i2l37
  3037                           
  3038                           ;lcd.h: 17: PORTDbits.RD6 = 1;
  3039  00106C  8C83               	bsf	3971,6,c	;volatile
  3040  00106E  D001               	goto	i2l1439
  3041  001070                     i2l37:
  3042                           
  3043                           ;lcd.h: 18: else;lcd.h: 19: PORTDbits.RD6 = 0;
  3044  001070  9C83               	bcf	3971,6,c	;volatile
  3045  001072                     i2l1439:
  3046                           
  3047                           ;lcd.h: 21: if(a & 8)
  3048  001072  A601               	btfss	i2Lcd_Port@a,3,c
  3049  001074  D002               	goto	i2l39
  3050                           
  3051                           ;lcd.h: 22: PORTDbits.RD7 = 1;
  3052  001076  8E83               	bsf	3971,7,c	;volatile
  3053  001078  0012               	return	
  3054  00107A                     i2l39:
  3055                           
  3056                           ;lcd.h: 23: else;lcd.h: 24: PORTDbits.RD7 = 0;
  3057  00107A  9E83               	bcf	3971,7,c	;volatile
  3058  00107C  0012               	return		;funcret
  3059  00107E                     __end_ofi2_Lcd_Port:
  3060                           	opt callstack 0
  3061                           
  3062                           	psect	rparam
  3063  0000                     
  3064                           	psect	temp
  3065  00003B                     btemp:
  3066                           	opt callstack 0
  3067  00003B                     	ds	1
  3068  0000                     int$flags	set	btemp
  3069  0000                     wtemp8	set	btemp+1
  3070  0000                     ttemp5	set	btemp+1
  3071  0000                     ttemp6	set	btemp+4
  3072  0000                     ttemp7	set	btemp+8
  3073                           tosu	equ	0xFFF
  3074                           tosh	equ	0xFFE
  3075                           tosl	equ	0xFFD
  3076                           stkptr	equ	0xFFC
  3077                           pclatu	equ	0xFFB
  3078                           pclath	equ	0xFFA
  3079                           pcl	equ	0xFF9
  3080                           tblptru	equ	0xFF8
  3081                           tblptrh	equ	0xFF7
  3082                           tblptrl	equ	0xFF6
  3083                           tablat	equ	0xFF5
  3084                           prodh	equ	0xFF4
  3085                           prodl	equ	0xFF3
  3086                           indf0	equ	0xFEF
  3087                           postinc0	equ	0xFEE
  3088                           postdec0	equ	0xFED
  3089                           preinc0	equ	0xFEC
  3090                           plusw0	equ	0xFEB
  3091                           fsr0h	equ	0xFEA
  3092                           fsr0l	equ	0xFE9
  3093                           wreg	equ	0xFE8
  3094                           indf1	equ	0xFE7
  3095                           postinc1	equ	0xFE6
  3096                           postdec1	equ	0xFE5
  3097                           preinc1	equ	0xFE4
  3098                           plusw1	equ	0xFE3
  3099                           fsr1h	equ	0xFE2
  3100                           fsr1l	equ	0xFE1
  3101                           bsr	equ	0xFE0
  3102                           indf2	equ	0xFDF
  3103                           postinc2	equ	0xFDE
  3104                           postdec2	equ	0xFDD
  3105                           preinc2	equ	0xFDC
  3106                           plusw2	equ	0xFDB
  3107                           fsr2h	equ	0xFDA
  3108                           fsr2l	equ	0xFD9
  3109                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    0
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     52      58
    BANK0           160     14      21
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 3
		 -> Show(BANK0[3]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 3
		 -> Show(BANK0[3]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 3
		 -> Show(BANK0[3]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 3
		 -> Show(BANK0[3]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 3
		 -> Show(BANK0[3]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> STR_5(CODE[16]), STR_4(CODE[9]), STR_3(CODE[16]), STR_2(CODE[15]), 
		 -> STR_1(CODE[13]), Show(BANK0[3]), 


Critical Paths under _main in COMRAM

    _itoa->_utoa
    _utoa->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _interruptRB in COMRAM

    _interruptRB->i2_transform
    i2_transform->i2_itoa
    i2_itoa->i2_utoa
    i2_utoa->i2___lwdiv
    i2_Lcd_Write_String->i2_Lcd_Write_Char
    i2_Lcd_Write_Char->i2_Lcd_Port
    i2_Lcd_Set_Cursor->i2_Lcd_Cmd
    i2_Lcd_Cmd->i2_Lcd_Port

Critical Paths under _main in BANK0

    _main->_transform
    _transform->_itoa

Critical Paths under _interruptRB in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptRB in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptRB in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptRB in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptRB in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptRB in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptRB in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptRB in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5158
                                             12 BANK0      2     2      0
                            _InitALL
                    _InitInterruptRB
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _Timer0_Init
                          _transform
 ---------------------------------------------------------------------------------
 (1) _transform                                            4     2      2    3418
                                              8 BANK0      4     2      2
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    1810
                                              0 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1307
                                             43 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                             36 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                             36 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     6     4      2     698
                                             40 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       3     3      0     178
                                             37 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1     734
                                             39 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                             39 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0     110
                                             37 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                             36 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitInterruptRB                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitALL                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _interruptRB                                          8     8      0    2650
                                             28 COMRAM     8     8      0
                   i2_Lcd_Set_Cursor
                 i2_Lcd_Write_String
                        i2_transform
 ---------------------------------------------------------------------------------
 (6) i2_transform                                          4     2      2    1898
                                             24 COMRAM     4     2      2
                   i2_Lcd_Set_Cursor
                 i2_Lcd_Write_String
                             i2_itoa
 ---------------------------------------------------------------------------------
 (7) i2_itoa                                               8     2      6    1098
                                             16 COMRAM     8     2      6
                             i2_utoa
 ---------------------------------------------------------------------------------
 (8) i2_utoa                                               9     3      6     857
                                              7 COMRAM     9     3      6
                          i2___lwdiv
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (9) i2___lwmod                                            5     1      4     211
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) i2___lwdiv                                            7     3      4     266
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) i2_Lcd_Write_String                                   6     4      2     320
                                              4 COMRAM     6     4      2
                   i2_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (8) i2_Lcd_Write_Char                                     3     3      0     178
                                              1 COMRAM     3     3      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (7) i2_Lcd_Set_Cursor                                     5     4      1     432
                                              3 COMRAM     5     4      1
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (8) i2_Lcd_Cmd                                            2     2      0     110
                                              1 COMRAM     2     2      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (9) i2_Lcd_Port                                           1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitALL
   _InitInterruptRB
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Timer0_Init
   _transform
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _itoa
       _utoa
         ___lwdiv
         ___lwmod

 _interruptRB (ROOT)
   i2_Lcd_Set_Cursor
     i2_Lcd_Cmd
       i2_Lcd_Port
   i2_Lcd_Write_String
     i2_Lcd_Write_Char
       i2_Lcd_Port
   i2_transform
     i2_Lcd_Set_Cursor
       i2_Lcd_Cmd
         i2_Lcd_Port
     i2_Lcd_Write_String
       i2_Lcd_Write_Char
         i2_Lcd_Port
     i2_itoa
       i2_utoa
         i2___lwdiv
         i2___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      E      15       5       13.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     34      3A       1       61.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4F      20        0.0%
DATA                 0      0      4F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Aug 10 01:49:33 2019

                          _b 0037                            _i 0070                           l33 1004  
                         l35 100E                           l37 1018                           l39 1022  
                __CFG_BOR$ON 000000           i2___lwdiv@dividend 0001                  __CFG_BORV$3 000000  
               __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
               __CFG_CP3$OFF 000000                  __CFG_WDT$ON 000000    __size_ofi2_Lcd_Write_Char 0038  
                        l615 0CF8                          l625 0EC8                          l807 0A90  
               __CFG_CPB$OFF 000000                          u530 0CD2                 __CFG_CPD$OFF 000000  
                        u560 0EAA                          u760 0C02                          u770 0C36  
                        u767 0BF8                          u777 0C2C                          wreg 000FE8  
               __CFG_FOSC$HS 000000            ??_InitInterruptRB 0025          __end_ofi2_transform 0E90  
               __CFG_LVP$OFF 000000                         l1407 0CEE                         l1423 0EBE  
                       l1415 0E9E                         l1417 0EA6                         l1513 0A18  
                       l1523 0A52                         l1381 1010                         l1623 0C0A  
                       l1385 101A                         l1377 1006                         l1609 0DCC  
                       l1619 0BD6                         l1395 0CC6                         l1397 0CCE  
                       l1901 08E6                         l1917 0926                         l1859 0F32  
                       l1891 08A2                         STR_1 0830                         STR_2 0821  
                       STR_3 0811                         STR_4 083D                         STR_5 0801  
                       u1007 0890                         u1017 08CE                         u1027 090E  
                       u1037 0D94                         u1047 0FA6                         u1057 0FB8  
                       u1067 0B64                         u1077 0B7A                         _LATA 000F89  
                       _LATB 000F8A                         u1087 0B90                         u1097 10DA  
                       i2l33 105C                         i2l35 1066                         i2l37 1070  
                       i2l39 107A                         _TMR0 000FD6                         _Show 0072  
          ?_Lcd_Write_String 0029                         _main 0848                         _itoa 0F14  
         i2___lwdiv@quotient 0005                         fsr2h 000FDA                         indf2 000FDF  
                       fsr2l 000FD9                         btemp 003B                         _utoa 0A10  
                       start 000E           ??_Lcd_Write_String 002B                __CFG_IESO$OFF 000000  
            __end_of_Lcd_Cmd 10E8                __CFG_MCLRE$ON 000000                 ___param_bank 000000  
            __end_of_InitALL 1052                __CFG_PLLDIV$1 000000               __CFG_CCP2MX$ON 000000  
                      ?_main 0001                        ?_itoa 0060                        ?_utoa 002C  
                      _INT1E 007F83              __end_of___lwdiv 0D02              __end_of___lwmod 0ED2  
                      i2l615 0D4A                        i2l625 0F0A                        i2l807 0B34  
              __CFG_USBDIV$1 000000      __size_of_Lcd_Set_Cursor 0050                        _TRISA 000F92  
                      _TRISB 000F93                        _TRISD 000F95                __CFG_PWRT$OFF 000000  
              __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000  
              __CFG_WRT3$OFF 000000               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000  
              __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000  
                 i2itoa@base 0015           __size_ofi2_Lcd_Cmd 0020               __CFG_EBTRB$OFF 000000  
                      _delay 0035                  ?i2_Lcd_Port 0001                        tablat 000FF5  
                      ttemp5 003C                        ttemp6 003F                        ttemp7 0043  
                      utoa@c 0034                        utoa@v 0032                        status 000FD8  
                      wtemp8 003C               __CFG_ICPRT$OFF 000000               __CFG_PBADEN$ON 000000  
           i2_Lcd_Set_Cursor 0DF4           __size_ofi2___lwdiv 0052           __size_ofi2___lwmod 0042  
           __end_of_Lcd_Init 0BCC             __end_of_Lcd_Port 1026              __initialization 107E  
               ?_interruptRB 0001                 __end_of_main 0958                 __end_of_itoa 0F50  
               __end_of_utoa 0AB4                       ??_main 006C                   i2utoa@base 000C  
                     ??_itoa 0035                       ??_utoa 0032           __size_of_Lcd_Clear 000E  
              __activetblptr 000002                  i2_transform 0E44                       _INT1IF 007F80  
                     i2l1431 105E                       i2l1435 1068                       i2l1451 0D20  
                     i2l1461 0D40                       i2l1439 1072                       i2l1471 0EE8  
                     i2l1449 0D18                       i2l1645 0E1C                       i2l1477 0F00  
                     i2l1469 0EE0                       i2l1573 0ABC                       i2l1655 0C48  
                     i2l1583 0AF6                       i2l1841 09E6                       i2l1659 0C7C  
                     i2l1835 09D8                       i2l1669 0F6C                       i2l1849 09F2  
                  ??_Lcd_Cmd 0026                       _TMR0IE 007F95                       _TMR0IF 007F92  
    __size_of_Lcd_Write_Char 0038                    ??_InitALL 0025                       i2_itoa 0F50  
                     i2_utoa 0AB4                ??_Timer0_Init 0025               __CFG_XINST$OFF 000000  
          __end_ofi2_Lcd_Cmd 1108               __CFG_STVREN$ON 000000          __size_ofi2_Lcd_Port 002C  
                  ??___lwdiv 0029                    ??___lwmod 0029          i2Lcd_Write_String@a 0005  
        i2Lcd_Write_String@i 0009                       clear_0 1084             i2_Lcd_Write_Char 0FC2  
          __end_ofi2___lwdiv 0D54                 __mediumconst 0000            __end_ofi2___lwmod 0F14  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
            Lcd_Set_Cursor@a 0029              Lcd_Set_Cursor@b 0028              Lcd_Set_Cursor@y 002B  
            Lcd_Set_Cursor@z 002A                   __accesstop 0060      __end_of__initialization 1096  
          __end_of_Lcd_Clear 112A                ___rparam_used 000001           i2___lwmod@dividend 0001  
             __pcstackCOMRAM 0001              _InitInterruptRB 1108          __end_of_Timer0_Init 10C8  
__size_ofi2_Lcd_Write_String 0072            i2Lcd_Write_Char@a 0004            i2Lcd_Write_Char@y 0003  
             _Lcd_Set_Cursor 0DA4                    ?_Lcd_Init 0001                    ?_Lcd_Port 0001  
       i2Lcd_Write_Char@temp 0002                   __pbssBANK0 006E                      ?i2_itoa 0011  
                    ?i2_utoa 0008         __size_of_interruptRB 0A08         i2Lcd_Set_Cursor@temp 0008  
  __size_of_Lcd_Write_String 0072       __end_of_Lcd_Set_Cursor 0DF4     __end_ofi2_Lcd_Set_Cursor 0E44  
                    i2u63_40 0D24                      i2u82_40 0C74                      i2u66_40 0EEC  
                    i2u82_47 0C6A                      i2u83_40 0CA8                      i2u83_47 0C9E  
                    i2u92_40 0988                   ??_Lcd_Init 0028                 ??i2_Lcd_Port 0001  
                 ??_Lcd_Port 0025           __size_of_transform 0050              __CFG_VREGEN$OFF 000000  
             _Lcd_Write_Char 0F8A                      _Lcd_Cmd 10C8                      _InitALL 1026  
                    _Counter 0039      __end_of_InitInterruptRB 111C              __size_ofi2_itoa 003A  
                    i2utoa@c 0010                      i2utoa@v 000E              __size_ofi2_utoa 00A4  
                    __Hparam 0000                  _Timer0_Init 10A4                      __Lparam 0000  
                    ___lwdiv 0CB0                      ___lwmod 0E90                 __psmallconst 0800  
         __end_ofi2_Lcd_Port 107E                      __pcinit 107E                      __ramtop 0800  
            ?_Lcd_Set_Cursor 0028                      __ptext0 0848                      __ptext1 0D54  
                    __ptext2 0F14                      __ptext3 0A10                      __ptext4 0E90  
                    __ptext5 0CB0                      __ptext6 0BCC                      __ptext7 0F8A  
                    __ptext8 0DA4                      __ptext9 10A4                    _T0CONbits 000FD5  
               ?i2_transform 0019       __end_of_Lcd_Write_Char 0FC2               __pintcode_body 0958  
       end_of_initialization 1096                      itoa@buf 0060                      itoa@val 0062  
              __Lmediumconst 0000                      int_func 0958     __end_ofi2_Lcd_Write_Char 0FFA  
                    postinc0 000FEE                    Lcd_Port@a 0025            __end_of_transform 0DA4  
                    utoa@buf 002C                      utoa@val 002E                    i2_Lcd_Cmd 10E8  
                  _PORTDbits 000F83            i2___lwdiv@divisor 0003              ?_Lcd_Write_Char 0001  
                  i2___lwdiv 0D02                    i2___lwmod 0ED2            i2___lwdiv@counter 0007  
          Lcd_Write_String@a 0029            Lcd_Write_String@i 002D             ?_InitInterruptRB 0001  
             __end_ofi2_itoa 0F8A               __end_ofi2_utoa 0B58                    _Lcd_Clear 111C  
           _Lcd_Write_String 0BCC                   ?i2_Lcd_Cmd 0001                    i2itoa@buf 0011  
                  i2itoa@val 0013          start_initialization 107E                   ?i2___lwdiv 0001  
                 ?i2___lwmod 0001                    i2utoa@buf 0008                    i2utoa@val 000A  
          __size_of_Lcd_Init 0074            __size_of_Lcd_Port 002C                     ??i2_itoa 0017  
                   ??i2_utoa 000E                   ?_Lcd_Clear 0001   __end_ofi2_Lcd_Write_String 0CB0  
           __CFG_LPT1OSC$OFF 000000              Lcd_Write_Char@a 0028              Lcd_Write_Char@y 0027  
                __pbssCOMRAM 0035         __size_ofi2_transform 004C                __pcstackBANK0 0060  
          ?i2_Lcd_Set_Cursor 0004            i2___lwmod@divisor 0003            i2___lwmod@counter 0005  
         ??i2_Lcd_Set_Cursor 0005                     ?_Lcd_Cmd 0001                     ?_InitALL 0001  
               ?_Timer0_Init 0001             ___lwdiv@dividend 0025                ??_interruptRB 001D  
           ??_Lcd_Set_Cursor 0029                    _flagEntry 006E                    __pintcode 0008  
                   ?___lwdiv 0025                     ?___lwmod 0025                  ??i2_Lcd_Cmd 0002  
                __smallconst 0800             ___lwdiv@quotient 0029                  ??i2___lwdiv 0005  
                ??i2___lwmod 0005             i2transform@value 0019            ?i2_Lcd_Write_Char 0001  
                   i2u110_47 09BA                     i2u111_47 0E80                     i2u112_47 0FDE  
                   i2u113_47 0FF0                     i2u114_47 10FA                     Lcd_Cmd@a 0027  
         ??i2_Lcd_Write_Char 0002                  ??_Lcd_Clear 0028             __CFG_WDTPS$32768 000000  
        __end_of_interruptRB 0A10                   _ADCON1bits 000FC1                    _transform 0D54  
           ??_Lcd_Write_Char 0026                     _Lcd_Init 0B58                     _Lcd_Port 0FFA  
                _INTCON2bits 000FF1                  _INTCON3bits 000FF0     __end_of_Lcd_Write_String 0C3E  
           __size_of_Lcd_Cmd 0020             __size_of_InitALL 002C                     __Hrparam 0000  
                   __Lrparam 0000             __size_of___lwdiv 0052             __size_of___lwmod 0042  
                 ?_transform 0068              ___lwdiv@divisor 0027              ___lwdiv@counter 002B  
                   __ptext10 0B58                     __ptext11 111C                     __ptext20 0ED2  
                   __ptext12 10C8                     __ptext21 0D02                     __ptext13 0FFA  
                   __ptext22 0C3E                     __ptext14 1108                     __ptext23 0FC2  
                   __ptext15 1026                     __ptext24 0DF4                     __ptext25 10E8  
                   __ptext17 0E44                     __ptext26 1052                     __ptext18 0F50  
                   __ptext19 0AB4                __size_of_main 0110                __size_of_itoa 003C  
              __size_of_utoa 00A4                  _interruptRB 0008         __size_of_Timer0_Init 0024  
                   int$flags 003B                  i2Lcd_Port@a 0001               transform@value 0068  
   __size_of_InitInterruptRB 0014        __CFG_CPUDIV$OSC1_PLL2 000000                   _INTCONbits 000FF2  
         i2_Lcd_Write_String 0C3E                     itoa@base 0064           Lcd_Write_Char@temp 0026  
                   intlevel2 0000          ?i2_Lcd_Write_String 0005            i2Lcd_Set_Cursor@a 0005  
          i2Lcd_Set_Cursor@b 0004            i2Lcd_Set_Cursor@y 0007            i2Lcd_Set_Cursor@z 0006  
           ___lwmod@dividend 0025    __size_ofi2_Lcd_Set_Cursor 0050                   i2Lcd_Cmd@a 0003  
       ??i2_Lcd_Write_String 0007           Lcd_Set_Cursor@temp 002C                     utoa@base 0030  
              ??i2_transform 001B                  ??_transform 006A              ___lwmod@divisor 0027  
            ___lwmod@counter 0029                   i2_Lcd_Port 1052  
